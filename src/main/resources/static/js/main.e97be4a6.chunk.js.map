{"version":3,"sources":["elements/Grid.js","elements/Image.js","elements/Text.js","elements/Input.js","elements/Button.js","shared/Cookie.js","lib/axios.js","redux/modules/user.js","redux/modules/post.js","redux/modules/stack.js","redux/modules/postadd.js","redux/modules/sort.js","redux/modules/bookRecommend.js","redux/modules/infinity.js","redux/modules/applyProject.js","redux/modules/myPage.js","redux/modules/pageCheck.js","redux/configureStore.js","images/Logo.png","components/HeaderLeft.js","components/propensityTest/TestResult.js","components/propensityTest/Test.js","components/propensityTest/Progress.js","shared/ImgType.js","components/propensityTest/PropensityTest.js","components/LoginModal.js","components/HeaderRight.js","components/Header.js","elements/LogoButton.js","components/Stack.js","components/PostStacks.js","components/applyUserModal/Apply.js","components/applyUserModal/Cancel.js","components/applyUserModal/TeamExit.js","components/applyUserModal/SubmitUrl.js","components/applyUserModal/Liked.js","components/ApplyUserModal.js","components/Post.js","shared/Spinner.js","components/PostList.js","components/EmailAuth.js","components/carousel/MainSlide.js","components/filter/SortText.js","components/filter/Sort.js","pages/MainPage.js","shared/kakaoRedirect.js","shared/GitHubRedirect.js","components/mypagePost/MypagePostList.js","components/MarkdownRead.js","components/myPage/Banners.js","components/myPage/card/CardImgs.js","modal/DeleteUserModal.js","components/myPage/card/CardUserInfo.js","components/myPage/MypageCard.js","components/myPage/TypeResultTest.js","components/myPage/filter/MyFilter.js","components/myPage/MypageFilter.js","components/MyPageInfo.js","images/PostAdd.jpg","components/postWrite/LeftBanner.js","components/postWrite/rightContents/TitleWrite.js","components/postWrite/rightContents/StackWrite.js","components/postWrite/rightContents/DateWrite.js","components/postWrite/rightContents/TotalMember.js","components/postWrite/rightContents/ContentWrite.js","components/postWrite/rightContents/GenerateButton.js","components/postWrite/rightContents/UrlWrite.js","components/postWrite/RightWrite.js","components/AddPost.js","pages/PostWrite.js","redux/modules/postdetail.js","images/PostDetail.png","components/postEdit/LeftBanner.js","components/postEdit/rightContentsEdit/TitleEdit.js","components/postEdit/rightContentsEdit/StackEdit.js","components/postEdit/rightContentsEdit/TotalMemberEdit.js","components/postEdit/rightContentsEdit/StatusEdit.js","components/postEdit/rightContentsEdit/UrlEdit.js","components/postEdit/rightContentsEdit/ContentEdit.js","components/postEdit/rightContentsEdit/DateEdit.js","components/postEdit/rightContentsEdit/EditButton.js","pages/PostEdit.js","components/ApplyStatusModal.js","components/postDetail/leftBanner.js","components/postDetail/rightContents/TitleDetail.js","components/modal/ExileUserModal.js","components/ProjectJoinUser.js","components/postDetail/rightContents/ApplicantDetail.js","components/postDetail/rightContents/StackDetail.js","components/postDetail/rightContents/DateDetail.js","components/postDetail/rightContents/StatusDetail.js","components/postDetail/rightContents/UrlDetail.js","components/postDetail/rightContents/ContentDetail.js","components/postDetail/rightContents/BookMark.js","components/postDetail/rightContents/ApplicantButton.js","components/postDetail/rightContents/PosterButton.js","components/postDetail/rightContents/TotalMemberDetail.js","pages/PostDetail.js","components/Markdown.js","components/Footer.js","shared/NotFound.js","shared/App.js","reportWebVitals.js","index.js"],"names":["Grid","props","children","_onClick","id","margin","padding","width","height","bg","styles","color","display","justifyContent","alignItems","flexDirection","flexWrap","textAlign","border","borderRadius","borderTop","borderBottom","borderLeft","borderRight","overflow","overflowX","overflowY","minWidth","maxWidth","minHeight","maxHeight","boxShadow","backgroundColor","lineHeight","boxSizing","position","top","bottom","left","right","hover","zIndex","bgImg","verticalAlign","cursor","opacity","GridBox","onClick","defaultProps","potision","styled","div","hover_font","Image","shape","src","size","ImageCircle","CardImage","AspectOutter","AspectInner","MainInner","Fragment","ImageDefault","Text","bold","align","underline","family","decoration","ElText","span","Input","label","placeholder","_onChange","onSubmit","type","multiLine","edit","value","editValue","defaulValue","borderbottom","maxLength","backgroundImage","innerRef","inputFocusOutline","inputFocusBorder","inputFocusBoxShadow","fontSize","ElTextarea","rows","onChange","ElInput","ref","onKeyPress","e","console","log","key","is_submit","textarea","input","Button","isId","isTest","text","isValue","disabled","isChecked","hoverBg","hoverCl","common","isActive","TestButton","Common","ElButton","isFloat","button","setCookie","name","exp","date","Date","setTime","getTime","document","cookie","toUTCString","deleteCookie","instance","axios","create","baseURL","headers","accept","withCredentials","interceptors","request","use","config","cookieSplit","split","Authorization","err","apis","kakaoLogin","code","get","githubLogin","register","registerInfo","post","checkEmail","email","checkNick","nickName","signup","myUser","editTest","userId","testInfo","applyUser","postId","aceeptOffer","acceptInfo","applyProject","comment","cancelProject","delete","exitTeam","strterLike","likeUsers","sumbitUrl","urls","getMember","getUserInfo","getAllUserList","getPost","stack","sort","reBook","bookMarkChecked","getMypage","writeMyIntroduction","introduction","projectAssessmentPost","editUserInfo","data","base64","postInfo","FIRST_USER","SET_USER","LOG_OUT","MODAL","firstUser","createAction","user","setUser","logOut","modal","handleActions","state","action","produce","draft","snsId","payload","techStack","sigunupModalState","nickname","isLogin","memberPropensityType","userPropensityType","userID","techstack","userList","userfirst","isEmail","userCreators","kakaologinMiddleware","pageGo","dispatch","getState","history","then","res","msg","push","userCookie","token","mail","catch","Swal","fire","githubLoginMiddleware","signupMiddleware","signupInfo","testUserMiddleWare","emailCheckMiddleWare","window","alert","response","nickCheckMiddleWare","editTestMiddleware","currentUserId","currentNickname","myUserAPI","GET_POST","LOADING","MAINPAGE","WHATPAGE","PAGECHECK","getPosts","isLoading","loading","isMainPage","whatPage","pageCheck","stacks","sorts","paging","posts","render","mainpage","page","pre","now","isLoaded","infinityposts","postActions","getPostAPI","_paging","infinity","rebook","GET_STACK","SET_STACK","GET_STACK2","SET_STACK2","getStack","setStack","getStack2","setStack2","st","something","result","filter","p","React","Java","JavaScript","Python","Node","cpp","Flask","Django","Vue","Spring","php","Swift","Kotlin","TypeScript","stackAction","ADD_POST","addPosts","card","list","title","summary","contents","techStackList","totalMember","projectstatus","startdate","enddate","postAddActions","addPost","goBack","GET_SORT","getSort","sortAction","GET_RB","getRb","RecommendBook","bookRecommendAction","GET_PAGE","GET_SCROLL","start","next","currentScroll","APPLY_PROJEFCT","applyUsers","assessment","applyCreators","PostId","userIds","checkApply","apply","GET_MYPAGE","GET_PAGECHECK","getPageCheck","pageCheckAction","createBrowserHistory","rootReducer","combineReducers","User","ApplyUser","Post","Stack","Card","Sort","ReBook","Infinitys","mypage","Mypage","pagecheck","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","LogoDiv","HeaderLeft","style","Logo","TestResult","myUserType","useSelector","resultType","TestData","usertype","userType","useLayoutEffect","map","text1","text2","text3","text4","Test","handleUserCreate","handleMemberCreate","useState","userbtn","btn","Number","question","nowClickU","setNowClickU","memberbtn","nowClickMB","setNowClickMB","userQuestion","userquestion","memberQuestion","memberquestion","member","idx","active","btnUserId","target","stateItem","btnMemberId","ProgressBar","HighLight","ArrowBubbleTwo","Progress","currentStep","ImgType","object_fit","img","imges","setResult","useEffect","item","Img","StepImgBox","TestImg","Header","CloseBox","PropensityTest","isToken","useDispatch","userInfo","setpage","setUserPropensityType","setMemberPropensityType","preUserPropensityType","setPreUserPropensityType","preMemberPropensityType","setPreMemberPropensityType","sx","TestClose","teststep","step","testresult","answer","toPopMy","pop","topopYou","preMy","preYou","realSnsId","String","realUserId","testUpdateInfo","Title","h1","LoginModalWrap","SignupModalWrap","GithubBtn","KakaoBtn","LoginModal","regExpNick","showModal","setShowModal","modalClose","setNickName","setTeckstack","nameDup","setNameDup","test","setTest","customStyles","control","multiValue","multiValueLabel","multiValueRemove","Dialog","scroll","open","onClose","isMulti","options","className","classNamePrefix","arr","length","undefined","nickCheck","preSignUP","location","href","setTimeout","close","HeaderWrapper","ButtonWrap","IconWrap","UserImg","Btn","HeaderRight","doLogout","setDoLogOut","replace","Wrap","BorderRadius","IMGS","LogoButton","stack2","setArr","Object","entries","do","values","find","r","result2","Filter","nowStack","alreadyChecked","setStacks","concat","deleteCheck","arrStack","PostStacks","reduxstack","ModalWrap","Apply","setComment","Contents","Cancel","TeamExit","SubmitUrl","front","setFront","back","setBack","regex","frontUrl","backUrl","Liked","likes","setLikes","passdedMenber","isMe","projectStatus","myPage","statusCheck","toggleModal","stopPropagation","a","val","doSetAssessment","userLiked","ApplyUserModal","applyUserModal","setApplyUserModal","applyValue","passedUserStatus","applyUserModalOpen","setPage","status","memo","DescriptionBox","DDescriptionBox","CardHeader","ProjectState","ProductImgWrap","myUserId","setApplyValue","setMember","memberIdAndAssessment","totalmember","recruitmentMember","isWriter","writerEquals","getMembers","didAssessment","pathname","startDate","endDate","IMG","Spinner","alt","PostWrap","NoIntroduction","NoIntroductionText","PostList","setPost","setLoading","Render","findStack","itemStack","i","j","slice","Dec","EmailAuth","setEmail","setModal","authEmail","fetchData","MainSlide","loginShowModal","setLoginShowModal","emailShowModal","setEmailShowModal","useHistory","NextArrow","PrevArrow","settings","dots","autoplay","autoplaySpeed","draggable","infinite","lazyLoad","speed","slidesToShow","centerMode","centerPadding","nextArrow","prevArrow","Slide","slide","division","ClickEvent","EmailClose","Filtering","SortText","FilterBox","isLoginUser","clickCheck","setClickCheck","getItem","setPaging","onclickRb","OutWrap","Inside","InsideCard","Stacks","BtnFeedback","SpinnerLocation","Scrollup","MainPage","sortC","reBookC","useInView","inView","pPaging","setPPaging","nowFilter","postList","scrollTo","behavior","KakaoRedirect","URL","searchParams","MypagePostList","useParams","myCards","newMyCards","MarkdownWrap","ContentPage","textData","initialValue","BannerImg","BannerAnimals","Banners","myData","setMyData","CardImgs","myType","deleteUser","MyInfoText1","MyInfoText2","Line","hr","CardUserInfo","marginLeft","fontWeight","mydata","recruitment","inProgress","end","isMyMypage","Cards","Exit","MypageCard","setEditMyProfile","deleteModal","setDeleteModal","base","isFocused","borderWidth","borderColor","editMyProfile","WebkitAppearance","MozAppearance","appearance","outlineStyle","defaultValue","marginTop","userData","userTechStack","onClick2","fn_submit","DeleteUserModal","MyResultDiv","MyResultText","GotoTest","MyResultText2","MyResultTextBold","ConfirmEmail","WhiteP","TestWrap","YourName","TypeResultTest","type2","type3","params","EditTest","testmodal","FilterDiv","MyFilter","setStatus","MypageFilter","filters","onClicks","Banner","FilterWrap","IntroduceWrap","NoIntroductionText2","IntroduceBtn","MyPageInfo","match","setFilter","setMydata","setMyType","setTestModal","setAssessment","setIntroduction","recruitmentProject","setRecruitmentProject","inProgressProject","setInProgressProject","bookMarkProject","setBookMarkProject","endProject","setEndProject","bookmark","goMypage","float","MarkdownRead","SideBarImg","LeftBanner","TitleMedia","TitleWrite","setTitle","SubDescription","StackMedia","StackWrite","stackSelect","handleChange","useCallback","inputValue","removedValue","setTectstack","temp","index","tamarray","setTechStackList","formatTech","components","animatedComponents","SDatePicker","DatePicker","DateMedia","DateWrite","dateFormat","selected","setStartdate","locale","ko","minDate","setEnddate","TotalMemberMedia","TotalMember","b","setTotalmember","TextArea","ContentMedia","ContentWrite","setContents","GenerateButton","submitHandler","UrlWrite","setChatUrl","RightWrite","makeAnimated","chatUrl","setDate","getDate","scopeIndex","AddMedia","WritePost","PostWrite","AddPost","EDIT_POST","DELETE_POST","STATUS_POST","postDetailActions","editcard","post_id","editPost","TitleEdit","StackEdit","orderByLabel","localeCompare","orderOptions","v","isFixed","setValue","isClearable","some","totalMemberEdit","projectMembers","StatusMedia","StatusEdit","projectStatused","setProjectstatus","UrlEdit","ContentEdit","DateEdit","selectsStart","placeholderText","selectsEnd","EditMedia","EditButton","editHandler","PostEdit","checkPost","setCheckPost","setSummary","loaded","setLoaded","detailPost","CheckPost","TotalMemberEdit","scope_edit","ModalMedia","ButtonMedia","CommentBubble","ApplyStatusModal","applyedUsers","setApplyUsers","acceptButton","setAcceptButton","applyStatusModal","setApplyStatusModal","acceptUser","acceptOffer","cancelUser","bannerImg","TitleText","TitleDetail","passedData","BtnWrap","ExileUserModal","postUserId","serachTeamUser","confirm","exileUser","Writer","number","JoinUserMedia","ProjectJoinUser","ApplicantDetail","StackBox","StackDetail","DateBox","DateDetail","StatusDetail","UrlMedia","UrlDetail","Content","ContentDetail","BookMarkMedia","BookMark","Bookmark","ToggleBookMark","bookmarkChecked","ApplicantButton","isme","PosterButton","DeletePost","deletePost","edit_status","TotalMedia","TotalMemberDetail","DetailMedia","ContainerMedia","FlexMedia","UrlButton","PostDetail","setBookmark","exileStatusModal","setExileStatusModal","recruitmentFinish","setRecruitmentFinish","setProjectStatus","setIsme","userStatus","members","bookMark","editstatus","statusPost","statusDoing","editorRef","useRef","setImgBase64","setText","uploadImage","blob","callback","reader","FileReader","readAsDataURL","onloadend","addMyImage","url","resulturl","imageUrl","upload","onChangeEditorTextHandler","current","getInstance","getMarkdown","write","writing","previewStyle","plugins","colorSyntax","codeSyntaxHighlight","highlighter","Prism","hooks","addImageBlobHook","FooterHomeBtn","FooterBtn","Footer","nowPage","goToHome","NotFoundImg","NotFound","App","isCookie","path","exact","component","Markdown","GitHubRedirect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e97be4a6.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Grid = (props) => {\n  const {\n    children,\n    _onClick,\n    id,\n    margin,\n    padding,\n    width,\n    height,\n    bg,\n    color,\n    display,\n    justifyContent,\n    alignItems,\n    flexDirection,\n    flexWrap,\n    textAlign,\n    border,\n    borderRadius,\n    borderTop,\n    borderBottom,\n    borderLeft,\n    borderRight,\n    overflow,\n    overflowX,\n    overflowY,\n    minWidth,\n    maxWidth,\n    minHeight,\n    maxHeight,\n    boxShadow,\n    backgroundColor,\n    lineHeight,\n    boxSizing,\n    position,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    zIndex,\n    bgImg,\n    verticalAlign,\n    cursor,\n    opacity,\n  } = props;\n\n  const styles = {\n    id,\n    margin,\n    padding,\n    width,\n    height,\n    color,\n    bg,\n    display,\n    justifyContent,\n    alignItems,\n    flexDirection,\n    flexWrap,\n    textAlign,\n    border,\n    borderRadius,\n    borderTop,\n    borderBottom,\n    borderLeft,\n    borderRight,\n    overflow,\n    overflowX,\n    overflowY,\n    minWidth,\n    maxWidth,\n    minHeight,\n    maxHeight,\n    boxShadow,\n    backgroundColor,\n    lineHeight,\n    boxSizing,\n    position,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    zIndex,\n    bgImg,\n    verticalAlign,\n    cursor,\n    opacity,\n  };\n  return (\n    <GridBox {...styles} onClick={_onClick} id={id}>\n      {children}\n    </GridBox>\n  );\n};\n\nGrid.defaultProps = {\n  children: null,\n  id: null,\n  margin: null,\n  padding: null,\n  width: \"100%\",\n  height: \"100%\",\n  bg: null,\n  color: null,\n  display: null,\n  justifyContent: null,\n  alignItems: false,\n  flexDirection: false,\n  flexWrap: null,\n  textAlign: false,\n  border: null,\n  borderRadius: false,\n  borderTop: null,\n  borderBottom: null,\n  borderLeft: null,\n  borderRight: null,\n  overflow: null,\n  overflowX: null,\n  overflowY: null,\n  minWidth: null,\n  maxWidth: null,\n  minHeight: null,\n  maxHeight: null,\n  boxShadow: null,\n  potision: null,\n  top: null,\n  bottom: null,\n  left: null,\n  right: null,\n  hover: null,\n  bgImg: null,\n  _onClick: () => {},\n};\n\nconst GridBox = styled.div`\n  margin: ${(props) => props.margin};\n  padding: ${(props) => props.padding};\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  background: ${(props) => props.bg};\n  display: ${(props) => props.display};\n  color: ${(props) => props.color};\n  ${(props) =>\n    props.flexDirection ? `flex-direction:${props.flexDirection}` : \"\"};\n  flex-wrap: ${(props) => props.flexWrap};\n  align-items: ${(props) => props.alignItems};\n  justify-content: ${(props) => props.justifyContent};\n  text-align: ${(props) => props.textAlign};\n  vertical-align: ${(props) => props.verticalAlign};\n  border: ${(props) => props.border};\n  ${(props) =>\n    props.borderRadius ? `border-radius: ${props.borderRadius}` : \"\"};\n  border-top: ${(props) => props.borderTop};\n  border-bottom: ${(props) => props.borderBottom};\n  border-left: ${(props) => props.borderLeft};\n  border-right: ${(props) => props.borderRight};\n  overflow-x: ${(props) => props.overflowX};\n  overflow-y: ${(props) => props.overflowY};\n  overflow: ${(props) => props.overflow};\n  min-width: ${(props) => props.minWidth};\n  max-width: ${(props) => props.maxWidth};\n  min-height: ${(props) => props.minHeight};\n  max-height: ${(props) => props.maxHeight};\n  background-color: ${(props) => props.backgroundColor};\n  box-sizing: ${(props) => props.boxSizing};\n  box-shadow: ${(props) => props.boxShadow};\n  position: ${(props) => props.position};\n  top: ${(props) => props.top};\n  bottom: ${(props) => props.bottom};\n  left: ${(props) => props.left};\n  right: ${(props) => props.right};\n  background-color: ${(props) => props.backgroundColor};\n  z-index: ${(props) => props.zIndex};\n  background-image: ${(props) => props.bgImg};\n  cursor: ${(props) => props.cursor};\n  opacity: ${(props) => props.opacity};\n  font-family: \"GmarketSans\";\n\n  :hover {\n    ${(props) =>\n      props.hover\n        ? `background-color:${props.hover};\n  cursor: pointer;`\n        : \"\"}\n    ${(props) => (props.hover_font ? `color : ${props.hover_font}` : null)}\n  }\n\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: #2f3542;\n    border-radius: 15px;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: grey;\n    border-radius: 15px;\n  }\n`;\n\nexport default Grid;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Image = (props) => {\n  const { shape, src, size, _onClick, children } = props;\n\n  const styles = {\n    src: src,\n    size: size,\n  };\n\n  if (shape === \"circle\") {\n    return <ImageCircle {...styles} onClick={_onClick}></ImageCircle>;\n  }\n\n  if (shape === \"card\") {\n    return <CardImage {...styles} onClick={_onClick}></CardImage>;\n  }\n\n  if (shape === \"rectangle\") {\n    return (\n      <AspectOutter>\n        <AspectInner {...styles} onClick={_onClick}></AspectInner>\n      </AspectOutter>\n    );\n  }\n\n  if (shape === \"main\") {\n    return <MainInner {...styles} onClick={_onClick}></MainInner>;\n  }\n\n  return (\n    <React.Fragment>\n      <ImageDefault {...styles} onClick={_onClick}></ImageDefault>\n    </React.Fragment>\n  );\n};\n\nImage.defaultProps = {\n  shape: \"circle\",\n  src: \"https://images.unsplash.com/photo-1608889335941-32ac5f2041b9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjB8fHRveXxlbnwwfDJ8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60\",\n  size: 36,\n  _onClick: () => {},\n};\n\nconst ImageDefault = styled.div`\n  --size: ${(props) => props.size}px;\n  width: var(--size);\n  height: var(--size);\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n  background-position: center;\n  object-fit: cover;\n`;\n\nconst AspectOutter = styled.div`\n  width: auto;\n  min-width: 250px;\n`;\n\nconst AspectInner = styled.div`\n  position: relative;\n  padding-top: 100%;\n  overflow: hidden;\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n`;\n\nconst ImageCircle = styled.div`\n  --size: ${(props) => props.size}px;\n  width: var(--size);\n  height: var(--size);\n  border-radius: var(--size);\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n  margin: 4px;\n`;\n\nconst CardImage = styled.div`\n  width: 100%;\n  height: auto;\n`;\n\nconst MainImage = styled.div`\n  width: 100%;\n  height: auto;\n`;\n\nconst MainInner = styled.div`\n  width: 100%;\n  margin: auto;\n  min-width: 25rem;\n  position: relative;\n  padding-top: 30%;\n  overflow: hidden;\n  background-image: url(\"${(props) => props.src}\");\n  background-position: center;\n  /* background-size: cover; */\n`;\n\nexport default Image;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Text = (props) => {\n  const {\n    children,\n    color,\n    bg,\n    size,\n    bold,\n    align,\n    margin,\n    padding,\n    underline,\n    family,\n    border,\n    borderRadius,\n    decoration,\n    _onClick,\n    cursor,\n    hover,\n  } = props;\n  const styles = {\n    color,\n    bg,\n    size,\n    bold,\n    align,\n    margin,\n    padding,\n    underline,\n    decoration,\n    family,\n    border,\n    borderRadius,\n    cursor,\n  };\n  return (\n    <ElText {...styles} onClick={_onClick}>\n      {children}\n    </ElText>\n  );\n};\n\nText.defaultProps = {\n  children: null,\n  color: null,\n  bg: null,\n  size: null,\n  bold: false,\n  align: null,\n  underline: null,\n  decoration: null,\n  margin: false,\n  padding: false,\n  family: false, //폰트 타입\n  border: null,\n  borderRadius: null,\n  _onClick: () => {},\n  cursor: null,\n};\n\nconst ElText = styled.span`\n  color: ${(props) => props.color};\n  font-size: ${(props) => props.size};\n  font-weight: ${(props) => props.bold};\n  text-align: ${(props) => props.align};\n  margin: ${(props) => props.margin};\n  padding: ${(props) => props.padding};\n  family: ${(props) => props.family};\n  border: ${(props) => props.border};\n  border-radius: ${(props) => props.borderRadius};\n  background-color: ${(props) => props.bg};\n  cursor: ${(props) => props.cursor};\n  font-family: \"GmarketSans\";\n  line-height: 1.2;\n  text-decoration: ${(props) => props.decoration};\n  letter-spacing: -0.0375em;\n`;\n\nexport default Text;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"./Index\";\n\nconst Input = (props) => {\n  const {\n    id,\n    label,\n    placeholder,\n    _onChange,\n    onSubmit,\n    type,\n    multiLine,\n    edit,\n    value,\n    editValue,\n    defaulValue,\n    margin,\n    width,\n    padding,\n    height,\n    border,\n    borderbottom,\n    maxLength,\n    borderRadius,\n    boxShadow,\n    bg,\n    backgroundImage,\n    backgroundColor,\n    innerRef,\n    inputFocusOutline,\n    inputFocusBorder,\n    inputFocusBoxShadow,\n    fontSize,\n  } = props;\n\n  const styles = {\n    padding,\n    height,\n    border,\n    borderbottom,\n    borderRadius,\n    boxShadow,\n    bg,\n    maxLength,\n    backgroundImage,\n    inputFocusOutline,\n    inputFocusBorder,\n    inputFocusBoxShadow,\n    fontSize,\n  };\n  if (multiLine) {\n    return (\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        <ElTextarea\n          backgroundColor={backgroundColor}\n          value={value}\n          defaulValue={defaulValue}\n          rows={10}\n          maxLength={maxLength}\n          placeholder={placeholder}\n          onChange={_onChange}\n        ></ElTextarea>\n      </Grid>\n    );\n  }\n\n  if (edit) {\n    return (\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        <ElInput\n          {...styles}\n          backgroundColor={backgroundColor}\n          width={width}\n          margin={margin}\n          type={type}\n          value={value}\n          defaulValue={defaulValue}\n          placeholder={placeholder}\n          onChange={_onChange}\n          maxLength={maxLength}\n          ref={innerRef}\n          onKeyPress={(e) => {\n            console.log(e.key);\n            if (e.key === \"Enter\") {\n              console.log(\"pass\");\n              onSubmit(e);\n            }\n          }}\n        />\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid>\n      {label && <Text margin=\"0px\">{label}</Text>}\n      <ElInput\n        {...styles}\n        backgroundColor={backgroundColor}\n        width={width}\n        margin={margin}\n        type={type}\n        placeholder={placeholder}\n        value={editValue}\n        maxLength={maxLength}\n        defaulValue={defaulValue}\n        onChange={_onChange}\n        ref={innerRef}\n        onKeyPress={(e) => {\n          // console.log(e.key);\n          if (e.key === \"Enter\") {\n            // console.log(\"pass\");\n            onSubmit(e);\n          }\n        }}\n      />\n    </Grid>\n  );\n};\n\nInput.defaultProps = {\n  multiLine: false,\n  label: false,\n  placeholder: \"텍스트를 입력해주세요.\",\n  type: \"text\",\n  value: \"\",\n  defaulValue: \"\",\n  margin: 0,\n  padding: false,\n  boxShadow: false,\n  width: \"100%\",\n  height: false,\n  border: false,\n  borderbottom: false,\n  borderRadius: false,\n  bg: false,\n  backgroundImage: false,\n  is_submit: false,\n  _onChange: () => {},\n  onSubmit: () => {},\n};\n\nconst ElTextarea = styled.textarea`\n  margin: ${(props) => props.margin};\n  border: ${(props) => props.border};\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  border-radius: 25px;\n  border-radius: ${(props) => props.borderRadius};\n  background: ${(props) => props.bg};\n  padding: ${(props) => props.padding};\n  box-shadow: ${(props) => props.boxShadow};\n  background-image: ${(props) => props.backgroundImage};\n  box-sizing: border-box;\n  background-color: ${(props) => props.backgroundColor};\n  font-family: \"GmarketSans\";\n`;\n\nconst ElInput = styled.input`\n  margin: ${(props) => props.margin};\n  border: ${(props) => props.border};\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  text-align: ${(props) => props.textAlign};\n  border-radius: ${(props) => props.borderRadius};\n  border-bottom: ${(props) => props.borderBottom};\n  box-shadow: ${(props) => props.boxShadow};\n  background: ${(props) => props.bg};\n  padding: ${(props) => props.padding};\n  background-image: ${(props) => props.backgroundImage};\n  box-sizing: border-box;\n\n  background-color: ${(props) => props.backgroundColor};\n  font-size: ${(props) => props.fontSize};\n  &:focus {\n    outline: ${(props) => props.inputFocusOutline};\n    border: ${(props) => props.inputFocusBorder};\n    box-shadow: ${(props) => props.inputFocusBoxShadow};\n  }\n  font-family: \"GmarketSans\";\n`;\n\nexport default Input;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = (props) => {\n  const {\n    isId,\n    isTest,\n    color,\n    text,\n    _onClick,\n    children,\n    margin,\n    width,\n    padding,\n    backgroundColor,\n    height,\n    fontSize,\n    borderRadius,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    display,\n    isValue,\n    disabled,\n    isChecked,\n    hoverBg,\n    hoverCl,\n    common,\n    border,\n    isActive,\n    zIndex,\n  } = props;\n\n  if (isTest) {\n    return (\n      <>\n        <TestButton\n          onClick={_onClick}\n          value={isValue}\n          disabled={disabled}\n          isChecked={isChecked}\n          id={isId}\n          isActive={isActive}\n        >\n          {text ? text : children}\n        </TestButton>\n      </>\n    );\n  }\n\n  if (common) {\n    const styles = {\n      margin,\n      width,\n      padding,\n      color,\n      height,\n      fontSize,\n      borderRadius,\n      top,\n      bottom,\n      left,\n      right,\n      border,\n      backgroundColor,\n    };\n    return (\n      <>\n        <Common\n          {...styles}\n          onClick={_onClick}\n          value={isValue}\n          disabled={disabled}\n          isChecked={isChecked}\n          id={isId}\n          isActive={isActive}\n        >\n          {text ? text : children}\n        </Common>\n      </>\n    );\n  }\n\n  const styles = {\n    margin,\n    width,\n    padding,\n    backgroundColor,\n    color,\n    height,\n    fontSize,\n    borderRadius,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    display,\n    hoverBg,\n    hoverCl,\n    zIndex,\n  };\n\n  return (\n    <>\n      <ElButton {...styles} value={isValue} onClick={_onClick} id={isId}>\n        {text ? text : children}\n      </ElButton>\n    </>\n  );\n};\n\nButton.defaultProps = {\n  position: false,\n  text: false,\n  children: null,\n  _onClick: () => {},\n  isFloat: false,\n  margin: \"auto\",\n  width: \"100%\",\n  padding: \"12px 0px\",\n  color: \"white\",\n  height: \"50px\",\n  top: null,\n  bottom: null,\n  left: null,\n  right: null,\n  hover: null,\n  display: null,\n  isValue: null,\n};\n\nconst ElButton = styled.button`\n  width: ${(props) => props.width};\n  color: ${(props) => props.color};\n  padding: ${(props) => props.padding};\n  height: ${(props) => props.height};\n  font-size: ${(props) => props.fontSize};\n  margin: ${(props) => props.margin};\n  ${(props) =>\n    props.backgroundColor\n      ? `background-color:${props.backgroundColor}`\n      : \"background-color: #172D40\"};\n  box-sizing: border-box;\n  border-radius: 5px;\n  font-weight: bold;\n  ${(props) => (props.border ? `border:${props.border}` : \"border: none\")};\n  ${(props) =>\n    props.borderRadius\n      ? `border-radius:${props.borderRadius}`\n      : \"border-radius: 25px\"};\n  cursor: pointer;\n  flex-shrink: 0;\n  &:hover {\n    background-color: ${(props) => props.hoverBg};\n    color: ${(props) => props.hoverCl};\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  vertical-align: middle;\n  top: ${(props) => props.top};\n  bottom: ${(props) => props.bottom};\n  left: ${(props) => props.left};\n  right: ${(props) => props.right};\n  position: ${(props) => props.position};\n  flex-shrink: 0;\n  display: ${(props) => props.display};\n  z-index: ${(props) => props.zIndex};\n  font-family: \"GmarketSans\";\n`;\n\nconst TestButton = styled.button`\n  font-size: 12px;\n  text-align: center;\n  border: 1px solid #172d40;\n  border-radius: 25px;\n  padding: 20px;\n  margin: 5px;\n  box-shadow: 0px 2px 2px #ddd;\n  font-family: \"GmarketSans\";\n  font-weight: 400;\n  background-color: ${(props) => (props.isActive == true ? \"#172D40\" : \"#fff\")};\n  color: ${(props) => (props.isActive == true ? \"#fff\" : \"#172D40\")};\n\n  &:hover {\n    background-color: #172d40;\n    cursor: pointer;\n    color: #fff;\n    box-shadow: 0px 3px 2px #ddd;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  @media (max-width: 650px) {\n    width: 270px;\n    padding: 10px;\n    height: 80%;\n    font-size: 9px;\n  }\n`;\n\nconst Common = styled.button`\n  background-color: ${(props) => (props.isActive == true ? \"#172D40\" : \"#fff\")};\n  height: ${(props) => props.height};\n  width: ${(props) => props.width};\n  color: ${(props) => (props.isActive == true ? \"#fff\" : \"#172D40\")};\n  margin-right: 3px;\n  ${(props) =>\n    props.borderRadius\n      ? `border-radius:${props.borderRadius}`\n      : \"border-radius: 25px\"};\n  border: 1px solid #172d40;\n  cursor: pointer;\n  top: ${(props) => props.top};\n  bottom: ${(props) => props.bottom};\n  left: ${(props) => props.left};\n  right: ${(props) => props.right};\n  position: ${(props) => props.position};\n  font-size: ${(props) => props.fontSize};\n  padding: ${(props) => props.padding};\n  &:hover {\n    background-color: #172d40;\n    color: #fff;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  font-family: \"GmarketSans\";\n`;\nexport default Button;\n","// const getCookie = (name) => {\n//   document.cookie;\n// };\n\nconst setCookie = (name, value, exp = 3) => {\n  let date = new Date();\n  date.setTime(date.getTime() + exp * 1000 * 60 * 60);\n\n  document.cookie = `${name}=${value}; expires=${date.toUTCString()}; path=/`;\n};\n\nconst deleteCookie = (name) => {\n  document.cookie = name + \"=; expires=Thu, 01 Jan 1999 00:00:10 GMT; path=/\";\n};\n\nexport { setCookie, deleteCookie };\n","/* eslint-disable */\nimport axios from \"axios\";\nimport { setCookie } from \"../shared/Cookie\";\nimport { history } from \"../redux/configureStore\";\n\nexport const instance = axios.create({\n  // baseURL: \"http://localhost:3000\",\n  // baseURL: \"http://localhost:8081\",\n  // baseURL: \"http://localhost:4000\",\n  // baseURL: \"http://3.35.219.232\",\n  baseURL: \"https://scopewith.com\",\n  // baseURL: \"http://15.165.159.211\",\n  headers: {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    accept: \"application/json\",\n  },\n  withCredentials: true,\n});\n\ninstance.interceptors.request.use(\n  (config) => {\n    const cookie = document.cookie;\n    if (cookie === \"\") {\n      return config;\n    }\n\n    const cookieSplit = cookie.split(\"=\")[1];\n\n    config.headers = {\n      \"content-type\": \"application/json;charset=UTF-8\",\n      accept: \"application/json\",\n      Authorization: `Bearer ${cookieSplit}`,\n    };\n    return config;\n  },\n  (err) => {\n    console.log(err);\n  }\n);\n\nexport const apis = {\n  //회원가입 및 로그인 관련 api\n  kakaoLogin: (code) => instance.get(`/api/login/kakao?code=${code}`),\n  githubLogin: (code) => instance.get(`/api/login/github?code=${code}`),\n  register: (registerInfo) => instance.post(\"/api/signup\", registerInfo),\n  checkEmail: (email) => instance.get(`/api/login/email?email=${email}`, email),\n  checkNick: (nickName) =>\n    instance.get(`/api/login/nickname?nickname=${nickName}`, nickName),\n  signup: (registerInfo) => instance.post(\"/api/signup\", registerInfo),\n\n  // 유저 관련 api\n  myUser: () => instance.get(\"/api/myuser\"),\n  editTest: (userId, testInfo) =>\n    instance.post(`/api/test/${userId}`, testInfo),\n  applyUser: (postId) => instance.get(`/api/applicant/${postId}`),\n  aceeptOffer: (postId, acceptInfo) =>\n    instance.post(`/api/team/${postId}`, acceptInfo),\n  applyProject: (postId, comment) =>\n    instance.post(`/api/applicant/${postId}`, comment),\n  cancelProject: (postId) => instance.delete(`/api/applicant/${postId}`),\n  exitTeam: (postId) => instance.delete(`/api/team/secession/${postId}`),\n  strterLike: (postId, likeUsers) =>\n    instance.post(`/api/assessment/${postId}`, likeUsers),\n  sumbitUrl: (postId, urls) => instance.post(`/api/post/${postId}/url`, urls),\n\n  getMember: (postId) => instance.get(`/api/team/${postId}`),\n  getUserInfo: () => instance.get(\"/user/info\"),\n  getAllUserList: () => instance.get(\"/user/list\"),\n\n  getPost: (stack, sort, reBook) =>\n    instance.get(\n      `/api/post?filter=;;;;;;;;;;;;;;&sort=${sort}&bookmarkRecommend=${reBook}`\n    ),\n  bookMarkChecked: (postId) => instance.post(`/api/bookmark/${postId}`),\n\n  //마이페이지\n  getMypage: (userId) => instance.get(`/api/user/${userId}`),\n  writeMyIntroduction: (userId, introduction) =>\n    instance.post(`/api/user/${userId}/desc`, introduction),\n  projectAssessmentPost: (postId) => instance.get(`/api/assessment/${postId}`),\n  editUserInfo: (userId, data) => instance.post(`/api/user/${userId}`, data),\n  projectAssessmentPost: (postId) => instance.get(`/api/assessment/${postId}`),\n  authEmail: (email) => instance.get(`/api/user/email?email=${email}`),\n  deleteUser: (userId) => instance.delete(`/api/user/${userId}`),\n  addMyImage: (base64) => instance.post(`/api/image`, base64),\n\n  // 상세페이지\n  addPost: (postInfo) => instance.post(`/api/post`, postInfo),\n  detailPost: (postId) => instance.get(`/api/post/${postId}`),\n  editPost: (postId, data) => instance.post(`/api/post/${postId}`, data),\n  deletePost: (postId) => instance.delete(`/api/post/${postId}`),\n  statusPost: (postId, data) =>\n    instance.post(`/api/post/${postId}/status`, data),\n  serachTeamUser: (postId) => instance.get(`/api/team/${postId}`),\n  exileUser: (postId, userId) =>\n    instance.delete(`/api/team/resignation/${postId}?userId=${userId}`),\n};\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis, instance } from \"../../lib/axios\";\nimport { setCookie } from \"../../shared/Cookie\";\nimport Swal from \"sweetalert2\";\n//액션타입\nconst FIRST_USER = \"FIRST_USER\";\nconst TEST_USER = \"TEST_USER\";\nconst SET_USER = \"SET_USER\";\nconst LOG_OUT = \"LOG_OUT\";\n\nconst EMAIL = \"EMAIL\";\n\nconst MODAL = \"MODAL\";\n\n//액션생성\nconst firstUser = createAction(FIRST_USER, user => ({ user }));\nconst testUser = createAction(TEST_USER, user => ({ user }));\nexport const setUser = createAction(SET_USER, user => ({ user }));\nconst logOut = createAction(LOG_OUT, user => ({ user }));\n\nexport const email = createAction(EMAIL, user => ({ user }));\n\nexport const modal = createAction(MODAL, user => ({ user }));\n//초기값\nconst initialState = {\n  nickname: \"guest\",\n  snsId: null,\n  email: null,\n  userID: null,\n  techstack: [],\n  isLogin: false,\n  userList: [],\n  userfirst: false,\n  sigunupModalState: false,\n  userPropensityType: null,\n  memberPropensityType: null,\n  isEmail: false,\n};\n//카카오 로그인\nconst kakaologinMiddleware = (code, pageGo) => {\n  return function (dispatch, getState, { history }) {\n    let goPage = pageGo;\n    // console.log(goPage);\n    // console.log(\"카카오에서 받아온 코드\", code);\n\n    apis\n      .kakaoLogin(code)\n      .then(res => {\n        // console.log(res);\n        if (res.data.msg == \"추가 정보 작성이 필요한 사용자입니다.\") {\n          // window.alert(\"추가정보 작성이 필요합니다.\");\n\n          dispatch(\n            firstUser({\n              // email: res.data.data.email,\n              snsId: res.data.data.id,\n            })\n          );\n          // history.push(goPage);\n          history.push(\"/\");\n          return;\n        }\n        if (res.data.msg == \"로그인이 완료되었습니다\") {\n          let email = getState().user.isEmail;\n          let userCookie = res.data.data.token;\n          setCookie(\"ScopeUser\", userCookie, 30);\n          // const ACCESS_TOKEN = res.data.token;\n          // localStorage.setItem(\"token\", ACCESS_TOKEN);\n          dispatch(\n            setUser({\n              email: res.data.data.mail,\n              nickname: res.data.data.nickname,\n              userId: res.data.data.userId,\n              userPropensityType: res.data.data.userPropensityType,\n            })\n          );\n          // if (email) {\n          //   history.replace(`/mypage:${res.data.data.userId}`);\n          //   Swal.fire(\n          //     \"완료된 프로젝트가 있습니다. 팀원들을 평가하러 가볼까요?\",\n          //     \"\",\n          //     \"info\"\n          //   );\n          // }\n          // window.history.back();\n          // history.push(goPage);\n          history.push(\"/\");\n        }\n      })\n      .catch(err => {\n        // console.log(\"소셜로그인 에러\", err);\n        // alert(\"로그인에 실패하였습니다.\");\n        // history.replace(\"/\"); // 로그인 실패하면 로그인화면으로 돌려보냄\n        history.push(\"/\");\n        Swal.fire(\"로그인에 실패하였습니다!\", \"\", \"warning\");\n      });\n  };\n};\n\n//깃허브 로그인\nconst githubLoginMiddleware = code => {\n  return function (dispatch, getState, { history }) {\n    // console.log(\"깃허브에서 받아온 코드\", code);\n    apis\n      .githubLogin(code)\n      .then(res => {\n        // console.log(res);\n        if (res.data.msg == \"추가 정보 작성이 필요한 사용자입니다.\") {\n          // window.alert(\"추가정보 작성이 필요합니다.\");\n\n          dispatch(\n            firstUser({\n              // email: res.data.data.email,\n              snsId: res.data.data.id,\n            })\n          );\n\n          history.push(\"/\");\n          return;\n        }\n        if (res.data.msg == \"로그인이 완료되었습니다\") {\n          let userCookie = res.data.data.token;\n          setCookie(\"ScopeUser\", userCookie, 30);\n          dispatch(\n            setUser({\n              email: res.data.data.mail,\n              nickname: res.data.data.nickname,\n              userId: res.data.data.userId,\n              userPropensityType: res.data.data.userPropensityType,\n            })\n          );\n          // window.history.back();\n          history.push(\"/\");\n        }\n      })\n      .catch(err => {\n        // console.log(\"소셜로그인 에러\", err);\n        // alert(\"로그인에 실패하였습니다.\");\n        history.push(\"/\");\n        Swal.fire(\"로그인에 실패하였습니다.\", \"\", \"warning\");\n      });\n  };\n};\n// 이메일 중복체크 미들웨어\nconst emailCheckMiddleWare = email => {\n  return () => {\n    apis\n      .checkEmail(email)\n      .then(res => {\n        // console.log(res);\n        if (res.data.msg == \"사용 가능한 메일입니다.\") {\n          return window.alert(\"사용 가능한 메일입니다.\");\n        }\n      })\n      .catch(err => {\n        // console.log(err.response);\n        if (err.response.data.msg == \"이미 사용중인 이메일입니다.\") {\n          return window.alert(\"이미 사용중인 이메일입니다.\");\n        }\n      });\n  };\n};\n\n// 닉네임 중복체크 미들웨어\nconst nickCheckMiddleWare = nickName => {\n  return () => {\n    apis\n      .checkNick(nickName)\n      .then(res => {\n        // console.log(res.data);\n        if (res.data.msg == \"사용가능한 닉네임입니다.\") {\n          return window.alert(\"사용가능한 닉네임입니다.\");\n        }\n      })\n      .catch(err => {\n        // console.log(err.response);\n        if (err.response.data.msg == \"이미 사용중인 닉네임입니다.\") {\n          return window.alert(\"중복된 닉네임이 존재합니다.\");\n        }\n      });\n  };\n};\n\n//테스트유저 미들웨어\nconst testUserMiddleWare = signupInfo => {\n  return function (dispatch, getState, { history }) {\n    // console.log(signupInfo);\n    dispatch(firstUser(signupInfo));\n  };\n};\n\n//로그인 정보 유지\nconst myUserAPI = () => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .myUser()\n      .then(res => {\n        // console.log(res);\n        dispatch(\n          setUser({\n            email: res.data.data.mail,\n            nickname: res.data.data.nickname,\n            userId: res.data.data.userId,\n            userPropensityType: res.data.data.userPropensityType,\n          })\n        );\n        // history.replace(\"/\");\n      })\n      .catch(err => {\n        // console.log(err);\n      });\n  };\n};\n\n//테스트 마친 회원가입\nconst signupMiddleware = signupInfo => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .signup(signupInfo)\n      .then(res => {\n        console.log(res);\n        let userCookie = res.data.data.token;\n        setCookie(\"ScopeUser\", userCookie, 30);\n\n        // localStorage.setItem(\"token\", ACCESS_TOKEN);\n        dispatch(\n          setUser({\n            userPropensityType: res.data.data.user.userPropensityType,\n            memberPropensityType: res.data.data.user.memberPropensityType,\n          })\n        );\n      })\n      .catch(err => {\n        // console.log(err.response);\n      });\n  };\n};\n//협업테스트 수정 미들웨어\nconst editTestMiddleware = (userId, testInfo) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .editTest(userId, testInfo)\n      .then(res => {\n        // console.log(res);\n        let currentUserId = getState().user.userId;\n        let currentNickname = getState().user.nickname;\n        dispatch(\n          setUser({\n            userId: currentUserId,\n            nickname: currentNickname,\n            userPropensityType: res.data.data.userPropensityType,\n            memberPropensityType: res.data.data.memberPropensityType,\n          })\n        );\n\n        // Swal.fire(\"성향 캐릭터가 정해졌습니다!\", \"\", \"success\");\n      })\n      .catch(err => {\n        // console.log(err);\n      });\n  };\n};\n\n//리듀서\nexport default handleActions(\n  {\n    [FIRST_USER]: (state, action) =>\n      produce(state, draft => {\n        // draft.email = action.payload.user.email;\n        draft.snsId = action.payload.user.snsId;\n        draft.techStack = action.payload.user.techStack;\n        draft.nickName = action.payload.user.nickName;\n\n        draft.sigunupModalState = true;\n      }),\n    [SET_USER]: (state, action) =>\n      produce(state, draft => {\n        draft.userId = action.payload.user.userId;\n        draft.nickname = action.payload.user.nickname;\n        draft.email = action.payload.user.email;\n        draft.techStack = action.payload.user.techStack;\n        draft.isLogin = true;\n        draft.memberPropensityType = action.payload.user.memberPropensityType;\n        draft.userPropensityType = action.payload.user.userPropensityType;\n      }),\n    [LOG_OUT]: (state, action) =>\n      produce(state, draft => {\n        draft.isLogin = false;\n      }),\n    [MODAL]: (state, action) =>\n      produce(state, draft => {\n        draft.sigunupModalState = false;\n      }),\n    // [EMAIL]: (state, action) =>\n    //   produce(state, draft => {\n    //     draft.isEmail = true;\n    //   }),\n  },\n  initialState\n);\n\nconst userCreators = {\n  kakaologinMiddleware,\n  githubLoginMiddleware,\n  signupMiddleware,\n  testUserMiddleWare,\n  emailCheckMiddleWare,\n  nickCheckMiddleWare,\n  editTestMiddleware,\n  myUserAPI,\n  logOut,\n  modal,\n  email,\n  setUser,\n};\n\nexport { userCreators };\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { apis } from \"../../lib/axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst GET_POST = \"GET_POST\";\r\nconst LOADING = \"LOADING\";\r\nconst MAINPAGE = \"MAINPAGE\";\r\nconst WHATPAGE = \"WHATPAGE\";\r\nconst PAGECHECK = \"PAGECHECK\";\r\n\r\nconst getPosts = createAction(GET_POST, (data) => ({ data }));\r\nconst isLoading = createAction(LOADING, (loading) => ({ loading }));\r\nconst isMainPage = createAction(MAINPAGE, (data) => ({ data }));\r\nconst whatPage = createAction(WHATPAGE, (data) => ({ data }));\r\nconst pageCheck = createAction(PAGECHECK, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  isLoaded: false,\r\n  infinityposts: [],\r\n  // paging: { start: null, next: null },\r\n  isLoading: false,\r\n  sorts: \"createdAt\",\r\n  reBook: \"\",\r\n  mainpage: true,\r\n  whatPage: { pre: \"mainPage\", now: \"mainPage\" },\r\n  pageCheck: false,\r\n  render: false,\r\n};\r\n\r\nexport const getPostAPI = () => {\r\n  return function (dispatch, getState, { history }) {\r\n    let stack = getState().stack.stack;\r\n    let sort = getState().sort.sort;\r\n    let _paging = getState().infinity.paging;\r\n    let reBook = getState().rebook.reBook;\r\n    let mainPage = getState().post.mainpage;\r\n    let whatPages = getState().post.whatPage;\r\n\r\n    // if (whatPages.now !== whatPages.pre) {\r\n    //   console.log(whatPages.now, whatPages.pre);\r\n    //   console.log(\"끊겠음2\");\r\n    //   dispatch(whatPage(\"mainPage\"));\r\n    //   return;\r\n    // }\r\n    apis\r\n      .getPost(stack, sort, reBook)\r\n      .then((res) => {\r\n        // console.log(_paging);\r\n        const posts = res.data.data;\r\n\r\n        // console.log(\"어떻게 오는지\", res.data.data);\r\n\r\n        dispatch(isLoading(true));\r\n        let data = { _paging, posts, stack, sort, reBook };\r\n\r\n        dispatch(getPosts(data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // Swal.fire(`${err.response}`, \"간단한 테스트를 진행해 주세요.\", \"info\");\r\n      });\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    // 백엔드와 통신\r\n    [GET_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(action);\r\n        let stacks = action.payload.data.stack;\r\n        let sorts = action.payload.data.sort;\r\n        let reBook = action.payload.data.reBook;\r\n        // draft.paging = action.payload.data.paging;\r\n        // draft.posts = action.payload.data.posts;\r\n        draft.isLoading = false;\r\n        if (!draft.stacks || !draft.sorts || !draft.reBook) {\r\n          draft.stacks = stacks;\r\n          draft.sorts = sorts;\r\n          draft.reBook = reBook;\r\n        }\r\n        if (\r\n          state.stacks !== stacks ||\r\n          state.sorts !== sorts ||\r\n          state.reBook !== reBook\r\n        ) {\r\n          // console.log(\"스택이 달라졌을때\");\r\n          // console.log(action);\r\n          draft.paging = action.payload.data.paging;\r\n          draft.posts = action.payload.data.posts;\r\n          draft.isLoading = false;\r\n          draft.stacks = stacks;\r\n          draft.sorts = sorts;\r\n          draft.reBook = reBook;\r\n          draft.render = true;\r\n        } else if (\r\n          state.stacks === stacks ||\r\n          state.sorts === sorts ||\r\n          state.reBook === reBook\r\n        ) {\r\n          // console.log(draft.stacks === stacks);\r\n          // console.log(\"스택이 그대로일때\");\r\n          // draft.posts.push(...action.payload.data.posts);\r\n          draft.posts = action.payload.data.posts;\r\n          draft.paging = action.payload.data.paging;\r\n          draft.isLoading = false;\r\n          draft.render = false;\r\n        }\r\n      }),\r\n\r\n    [LOADING]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.isLoading = action.payload.loading;\r\n      }),\r\n    [MAINPAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"여기가 메인페이지인가\", action.payload.data);\r\n        draft.mainpage = action.payload.data;\r\n      }),\r\n    [WHATPAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"현재페이지\", action.payload.data);\r\n        // console.log(state);\r\n        let page = {\r\n          pre: state.whatPage.now,\r\n          now: action.payload.data,\r\n        };\r\n        // console.log(page);\r\n        draft.whatPage = page;\r\n      }),\r\n    [PAGECHECK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"페이지 체크\", action);\r\n        draft.pageCheck = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst postActions = {\r\n  getPostAPI,\r\n  isMainPage,\r\n  whatPage,\r\n  pageCheck,\r\n};\r\nexport { postActions };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_STACK = \"GET_STACK\";\r\nconst SET_STACK = \"SET_STACK\";\r\n\r\nconst GET_STACK2 = \"GET_STACK2\";\r\nconst SET_STACK2 = \"SET_STACK2\";\r\n\r\nconst getStack = createAction(GET_STACK, (data) => ({ data }));\r\nconst setStack = createAction(SET_STACK, (data) => ({ data }));\r\n\r\nconst getStack2 = createAction(GET_STACK2, (data) => ({ data }));\r\nconst setStack2 = createAction(SET_STACK2, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  stack: {\r\n    React: \"\",\r\n    Java: \"\",\r\n    JavaScript: \"\",\r\n    Python: \"\",\r\n    Node: \"\",\r\n    cpp: \"\",\r\n    Flask: \"\",\r\n    Django: \"\",\r\n    Vue: \"\",\r\n    Spring: \"\",\r\n    php: \"\",\r\n    Swift: \"\",\r\n    Kotlin: \"\",\r\n    TypeScript: \"\",\r\n  },\r\n  stacks: [],\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_STACK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        const st = action.payload.data;\r\n        // if로 분기를 둔 이유 : draft에 이미 값이 있을 때와 없을 때를 분리 (처음에는 draft에 값이 없을 것 이므로 따로 작성)\r\n        if (!draft) {\r\n          const something = state.stack;\r\n          //   console.log(something[st]);\r\n          something[st] = st;\r\n          //   console.log(something);\r\n          draft.stack = something;\r\n          //   console.log(draft.stack);\r\n        } else {\r\n          draft.stack[st] = st;\r\n          //   console.log(draft.stack);\r\n        }\r\n\r\n        // const something = state.stack;\r\n        // console.log(something[st]);\r\n        // something[st] = st;\r\n        // console.log(something);\r\n        // draft = something;\r\n\r\n        // 처음에는 기본값인 state를 변경해줬었는데 이는 위험해 보임. => 처음에 변수에 이 값을 저장\r\n        // console.log(state.stack[st]);\r\n        // state.stack[st] = st;\r\n        // console.log(state);\r\n\r\n        // draft.push(action.payload.data);\r\n        // console.log(\"이것이 드래프트\", draft.list);\r\n      }),\r\n    [SET_STACK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(action.payload.data);\r\n        const st = action.payload.data;\r\n        draft.stack[st] = \"\";\r\n        // draft.splice(draft.findIndex((item) => item === action.payload.data));\r\n        // const result = draft.filter((item) => {\r\n        //   if (item !== action.payload.data) {\r\n        //     return item;\r\n        //   }\r\n        // });\r\n        // console.log(\"빼고 검색한 값\", result);\r\n        // draft = result;\r\n        // console.log(\"이것이 드래프트\", draft);\r\n      }),\r\n    [GET_STACK2]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"dodoget\", action);\r\n\r\n        draft.stacks.push(action.payload.data);\r\n      }),\r\n    [SET_STACK2]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"dodoset\", state.stacks);\r\n        const result = state.stacks.filter((p) => p !== action.payload.data);\r\n        draft.stacks = result;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst stackAction = {\r\n  getStack,\r\n  setStack,\r\n  getStack2,\r\n  setStack2,\r\n};\r\nexport { stackAction };\r\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../lib/axios\";\n\n// Actions\nconst ADD_POST = \"ADD_POST\";\n\n// Action Creators\nconst addPosts = createAction(ADD_POST, (card) => ({ card }));\n\nconst initialState = {\n  list: [\n    {\n      title: \"제목\",\n      summary: \"한줄설명\",\n      contents: \"내용\",\n      techStackList: \"기술스택\",\n      totalMember: \"제한 인원\",\n      projectstatus: \"프로젝트 상태\",\n      startdate: \"시작 날짜\",\n      enddate: \"끝나는 날짜\",\n    },\n  ],\n};\n\n// 미들웨어\nexport const addPostAPI = (card) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .addPost(card)\n      .then((res) => {\n        // console.log(res);\n        history.goBack();\n      })\n      .catch((err) => {\n        // console.log(err.response);\n      });\n    dispatch(addPosts(card));\n  };\n};\n\n// 리듀서\nexport default handleActions(\n  {\n    [ADD_POST]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\nconst postAddActions = {\n  addPostAPI,\n};\n\nexport { postAddActions };\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_SORT = \"GET_SORT\";\r\n\r\nconst getSort = createAction(GET_SORT, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  sort: \"createdAt\",\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_SORT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.sort = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst sortAction = {\r\n  getSort,\r\n};\r\nexport { sortAction };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_RB = \"GET_RB\";\r\n\r\nconst getRb = createAction(GET_RB, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  RecommendBook: \"\",\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_RB]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(action);\r\n        draft.reBook = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst bookRecommendAction = {\r\n  getRb,\r\n};\r\nexport { bookRecommendAction };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { apis } from \"../../lib/axios\";\r\nimport { postActions } from \"./post\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst GET_PAGE = \"GET_PAGE\";\r\nconst GET_SCROLL = \"GET_SCROLL\";\r\n\r\nconst getPages = createAction(GET_PAGE, (data) => ({ data }));\r\nconst getScroll = createAction(GET_SCROLL, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  paging: { start: 12, next: 12 },\r\n  currentScroll: null,\r\n};\r\n\r\nexport const getPage = (data) => {\r\n  return function (dispatch, getState, { history }) {\r\n    let mainPage = getState().post.mainpage;\r\n    let whatPages = getState().post.whatPage;\r\n    // console.log(data);\r\n\r\n    if (mainPage === false && whatPages.now !== \"mainPage\") {\r\n      // console.log(\"메인페이지 무한스크롤 펄스값\", mainPage);\r\n      return;\r\n    } else {\r\n      // console.log(\"메인페이지 무한스크롤 트루값\", mainPage);\r\n      dispatch(getPages(data));\r\n    }\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_PAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"액션값을 받아야함\", action);\r\n        // console.log(state.paging);\r\n\r\n        let paging = {\r\n          start: state.paging.next,\r\n          next: action.payload.data,\r\n        };\r\n\r\n        // console.log(\"액션값을 받아야함2222\", paging);\r\n        draft.paging = paging;\r\n      }),\r\n    [GET_SCROLL]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"스크롤값 받아라\", action);\r\n        draft.currentScroll = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst pageAction = {\r\n  getPage,\r\n  getScroll,\r\n};\r\nexport { pageAction };\r\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../lib/axios\";\n\n// 액션타입\nconst APPLY_PROJEFCT = \"APPLY_POST\";\n\n// 액션생성\nconst applyUsers = createAction(APPLY_PROJEFCT, applyUsers => ({\n  applyUsers,\n}));\n\nconst initialState = {\n  assessment: false,\n};\n\n// 내가만든 프로젝트 신청자 현황 불러오기\nconst applyUserAPI = postId => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .applyUser(postId)\n      .then(res => {\n        // console.log(res.data.data);\n        // window.alert(\"모집 지원 현황 조회 성공\");\n        dispatch(applyUsers(res.data.data));\n      })\n      .catch(err => {\n        // console.log(err.response);\n        window.alert(\"ERROR: 신청자를 불러오지 못했습니다.\");\n      });\n  };\n};\n//내가 만든 프로젝트 신청자 수락(팀장)\nconst acceptOfferAPI = (postId, acceptInfo) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .aceeptOffer(postId, acceptInfo)\n      .then(res => {\n        // console.log(res.data.data);\n        console.log(res);\n        // dispatch(applyUsers(res.data.users));\n      })\n      .catch(err => {\n        // console.log(err.response);\n        window.alert(\"ERROR: 신청자를 불러올 수 없습니다.\");\n      });\n  };\n};\n//모집중인 프로젝트 지원(팀원)\nconst applyProjectAPI = (postId, comment) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .applyProject(postId, comment)\n      .then(res => {\n        // console.log(res);\n        return window.alert(\"프로젝트에 지원되었습니다.\");\n      })\n      .catch(err => {\n        // console.log(err.response);\n        if (err.response.data.msg === \"모집중인 프로젝트가 아닙니다.\") {\n          return window.alert(\"모집중인 프로젝트가 아닙니다.\");\n        }\n        if (err.response.data.msg === \"이미 지원한 프로젝트입니다.\") {\n          return window.alert(\"이미 지원한 프로젝트 입니다.\");\n        } else {\n          window.alert(err.response.data.msg);\n          return;\n        }\n      });\n  };\n};\n//모집중인 프로젝트 지원취소(팀원)\nconst cancelProjectAPI = postId => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .cancelProject(postId)\n      .then(res => {\n        // console.log(res);\n        window.alert(\"프로젝트 지원이 취소되었습니다.!\");\n      })\n      .catch(err => {\n        // console.log(err.response);\n        window.alert(\"신청자 정보를 찾을 수 없습니다!\");\n      });\n  };\n};\n//팀장이 수락한 프로젝트 탈퇴(팀원)\nconst exitTeamAPI = postId => {\n  return function (dispatch, getState, { history }) {\n    const PostId = postId.postId;\n    // console.log(PostId);\n    apis\n      .exitTeam(PostId)\n      .then(res => {\n        // console.log(res);\n        window.alert(\"팀에서 탈출하였습니다!\");\n      })\n      .catch(err => {\n        // console.log(err.response);\n        if (err.response.data.msg === \"입력 값이 잘못되었습니다.\") {\n          return window.alert(\"입력 값이 잘못되었습니다.\");\n        }\n        if (err.response.data.msg === \"해당 프로젝트를 찾을 수 없습니다.\") {\n          return window.alert(\"해당 프로젝트를 찾을 수 없습니다.\");\n        }\n        if (err.response.data.msg === \"이미 진행중인 프로젝트입니다.\") {\n          return window.alert(\"이미 진행중인 프로젝트입니다.\");\n        }\n      });\n  };\n};\n\n// 팀장의 프로젝트 완료후 평가\nconst starterLikeAPI = (postId, userIds) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .strterLike(postId, userIds)\n      .then(res => {\n        let checkApply = getState().apply.assessment;\n        dispatch(applyUsers({ assessment: !checkApply }));\n        // windowalert(\"팀원 평가 정보가 성공적으로 저장되었습니다.\");\n      })\n      .catch(err => {\n        // console.log(err.response);\n        if (err.response.data.msg === \"입력 값이 잘못되었습니다.\") {\n          return window.alert(\"팀원 평가가 이루어지지 않았습니다.\");\n        }\n        if (err.response.data.msg === \"해당 프로젝트를 찾을 수 없습니다.\") {\n          return window.alert(\"해당 프로젝트를 찾을 수 없습니다.\");\n        }\n        if (err.response.data.msg === \"이미 진행중인 프로젝트입니다.\") {\n          return window.alert(\"이미 진행중인 프로젝트입니다.\");\n        }\n      });\n  };\n};\n\n// 깃허브 제출\nconst submitUrlAPI = (postId, urls) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .sumbitUrl(postId, urls)\n      .then(res => {\n        console.log(res);\n        window.alert(\"프로젝트 URL이 성공적으로 저장되었습니다.\");\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n  };\n};\n\n//마이페이지 프로젝트 팀원정보 조회\nconst getMemberAPI = postId => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .getMember(postId)\n      .then(res => {\n        console.log(res);\n        window.alert(\"모라공?\");\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n  };\n};\n// 리듀서\nexport default handleActions(\n  {\n    [APPLY_PROJEFCT]: (state, action) =>\n      produce(state, draft => {\n        // console.log(\"신청자정보\", action);\n        // console.log(\"신청자정보\", draft);\n        // console.log(\"신청자정보\", state);\n        // draft.assessment = action.payload.applyusers.assessment;\n        draft.assessment = true;\n      }),\n  },\n  initialState\n);\n\nconst applyCreators = {\n  applyUserAPI,\n  acceptOfferAPI,\n  applyProjectAPI,\n  cancelProjectAPI,\n  exitTeamAPI,\n  starterLikeAPI,\n  submitUrlAPI,\n  getMemberAPI,\n};\n\nexport { applyCreators };\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { apis } from \"../../lib/axios\";\r\n\r\nconst GET_MYPAGE = \"GET_MYPAGE\";\r\n\r\nconst getMypages = createAction(GET_MYPAGE, (data) => ({ data }));\r\n\r\nconst initialState = {};\r\n\r\nexport const getMypageAPI = (postId) => {\r\n  return function (dispatch, getState, { history }) {\r\n    apis\r\n      .getMypage(postId)\r\n      .then((res) => {\r\n        console.log(res);\r\n        // dispatch(getPosts(data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_MYPAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"여기가 마이페이지인가\", action.payload);\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst myPageActions = { getMypageAPI };\r\nexport { myPageActions };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_PAGECHECK = \"GET_PAGECHECK\";\r\n\r\nconst getPageCheck = createAction(GET_PAGECHECK, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  pageGo: \"/\",\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_PAGECHECK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"페이지 위치 저장\", action.payload.data);\r\n        draft.pageGo = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst pageCheckAction = {\r\n  getPageCheck,\r\n};\r\nexport { pageCheckAction };\r\n","/* eslint-disable */\r\nimport { createBrowserHistory } from \"history\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport User from \"./modules/user\";\r\n\r\nimport Post from \"./modules/post\";\r\nimport Stack from \"./modules/stack\";\r\nimport Card from \"./modules/postadd\";\r\nimport Sort from \"./modules/sort\";\r\nimport ReBook from \"./modules/bookRecommend\";\r\nimport Infinitys from \"./modules/infinity\";\r\nimport ApplyUser from \"./modules/applyProject\";\r\nimport Mypage from \"./modules/myPage\";\r\nimport pageCheck from \"./modules/pageCheck\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  user: User,\r\n  //   product: Product,\r\n  //   comment : Comment,\r\n  apply: ApplyUser,\r\n  post: Post,\r\n  stack: Stack,\r\n  card: Card,\r\n  sort: Sort,\r\n  rebook: ReBook,\r\n  infinity: Infinitys,\r\n  mypage: Mypage,\r\n  pagecheck: pageCheck,\r\n\r\n  // 8. 리덕스에 history를 이제 넣어줄 것이다. 우리가 만든 history와 우리의 라우터가 연결이되는 것이다. 그리고 이것의 우리의 스토어에 저장이되는 것이다.\r\n  router: connectRouter(history),\r\n});\r\n\r\nconst middlewares = [thunk.withExtraArgument({ history: history })];\r\n\r\n// const env = process.env.NODE_ENV;\r\n\r\n// if (env === \"development\") {\r\n//   const { logger } = require(\"redux-logger\");\r\n//   middlewares.push(logger);\r\n// }\r\n\r\n// 4. 리덕스 데브툴(redux devTools 설정)\r\nconst composeEnhancers =\r\n  // 브라우저일 때만  window === \"object\"이 부분을 돌려주라고 넣어준것이다. __REDUX_DEVTOOLS_EXTENSION_COMPOSE__부분을 데브툴이 있으면 열어주려고 하는 것이다.\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\n// 5. 미들웨어 묶어주기\r\n// composeEnhancers를 사용해서 applyMiddleware로 지금까지 있었던 미들웨어를 사용한다는 말이다.\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\nlet store = (initialStore) => createStore(rootReducer, enhancer);\r\n\r\nexport default store();\r\n","export default __webpack_public_path__ + \"static/media/Logo.df9d5eaf.png\";","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Image } from \"../elements/Index\";\nimport Logo from \"../images/Logo.png\";\nimport { history } from \"../redux/configureStore\";\n\nconst HeaderLeft = () => {\n  return (\n    <Grid>\n      <LogoDiv>\n        <img\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            history.push(\"/\");\n          }}\n          src={Logo}\n          width=\"100px\"\n        />\n      </LogoDiv>\n    </Grid>\n  );\n};\nconst LogoDiv = styled.div`\n  width: 15%;\n  @media screen and (max-width: 750px) {\n    width: 35%;\n  } ;\n`;\nexport default HeaderLeft;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Button, Image, Text } from \"../../elements/Index\";\nimport TestData from \"./Testdata.json\";\n\nconst TestResult = props => {\n  const myUserType = useSelector(state => state.user.userPropensityType);\n  // console.log(myUserType);\n  const resultType = TestData.usertype.filter(\n    type => type?.userType === myUserType\n  );\n\n  React.useLayoutEffect(() => {}, [myUserType]);\n\n  return (\n    <Grid>\n      {myUserType && (\n        <Grid textAlign=\"center\" width=\"95%\" margin=\"auto\">\n          <Grid textAlign=\"left\" height=\"6%\">\n            <Text bold size=\"12px\">\n              당신의 성향은?\n            </Text>\n          </Grid>\n\n          <Grid display=\"flex\" justifyContent=\"center\" height=\"94%\">\n            {resultType?.map(type => (\n              <Grid bg=\"#fff\" key={type.userType} {...type}>\n                <Grid\n                  height=\"7%\"\n                  bg=\"#17334a\"\n                  borderRadius=\"20px\"\n                  padding=\"12px 0\"\n                  margin=\"12px 0\"\n                >\n                  <Text size=\"13px\" color=\"#fff\">\n                    {type.title}\n                  </Text>\n                </Grid>\n                <Grid\n                  margin=\"12px 0\"\n                  borderRadius=\"20px\"\n                  border=\"1px solid #17334a\"\n                  padding=\"40px 0\"\n                  height=\"30%\"\n                >\n                  <ElText>\n                    {type.text1} <br />\n                    {type.text2}\n                    <br /> {type.text3}\n                    <br /> {type.text4}\n                  </ElText>\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst ElText = styled.span`\n  font-size: 11px;\n  text-align: center;\n  font-family: \"GmarketSans\";\n  line-height: 1.2;\n  letter-spacing: -0.0375em;\n  @media (max-width: 650px) {\n    font-size: 10px;\n  }\n`;\n\nexport default TestResult;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\nimport styled from \"styled-components\";\nconst Test = props => {\n  const { handleUserCreate, handleMemberCreate, page } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter(btn => Number(btn.question) === page)\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter(btn => Number(btn.question) === page)\n  );\n  const userQuestion = TestData.userquestion.filter(\n    user => Number(user.question) === page\n  );\n  const memberQuestion = TestData.memberquestion.filter(\n    member => Number(member.question) === page\n  );\n\n  const clickUser = btnUserId => {\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = btnMemberId => {\n    setNowClickMB(state => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n  React.useLayoutEffect(() => {\n    setNowClickU(TestData.userbtn.filter(btn => Number(btn.question) === page));\n    setNowClickMB(\n      TestData.memberbtn.filter(btn => Number(btn.question) === page)\n    );\n  }, [page]);\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"0 0 10px 0\" height=\"50%\">\n          <Grid height=\"14%\" margin=\"0 0 5px 0\">\n            <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n              <Text bold=\"600\">{userQuestion[0].text}</Text>\n            </Grid>\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n            <Text bold=\"600\">{memberQuestion[0].text}</Text>\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst Q1 = styled.p`\n  margin: 0 0 5px 0;\n  height: 14%;\n  @media screen and (max-width: 375px) {\n    font-size: 10px;\n  }\n`;\nexport default Test;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../elements/Index\";\n\nconst Progress = props => {\n  let count = 10;\n  let currentStep = props.page;\n\n  return (\n    <Grid\n      position=\"relative\"\n      height=\"60px\"\n      display=\"flex\"\n      alignItems=\"end\"\n      margin=\"auto\"\n    >\n      <Grid\n        width=\"50px\"\n        position=\"absolute\"\n        left={(currentStep / count) * 100 - 8 + \"%\"}\n      >\n        <ArrowBubbleTwo>\n          <Grid display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Text bold size=\"12px\">\n              {(currentStep / count) * 100 + \"%\"}\n            </Text>\n          </Grid>\n        </ArrowBubbleTwo>\n      </Grid>\n      <ProgressBar>\n        <HighLight width={(currentStep / count) * 100 + \"%\"} />\n      </ProgressBar>\n    </Grid>\n  );\n};\n\nconst ProgressBar = styled.div`\n  border: 3px solid #17334a;\n  border-radius: 25px;\n  background: #f1f9ff;\n  width: 100%;\n  height: 15px;\n`;\n\nconst HighLight = styled.div`\n  border-radius: 25px;\n  border: none;\n  background: #17334a;\n  transition: 1s;\n  width: ${props => props.width};\n  height: 15px;\n`;\n\nconst ArrowBubbleTwo = styled.div`\n  position: relative;\n  width: 100%;\n  height: 25px;\n  padding: 0 5px;\n  background: #f1f9ff;\n  /* -webkit-border-radius: 35px;\n  -moz-border-radius: 35px; */\n  border-radius: 10px;\n  border: #17334a solid 3px;\n  @media screen and (max-width: 650px) {\n    bottom: -4px;\n    width: 30px;\n    height: 20px;\n  }\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-width: 10px 15px 0;\n    border-color: #f1f9ff transparent;\n    display: block;\n    width: 0;\n    z-index: 1;\n    bottom: -4px;\n    left: 15px;\n    @media screen and (max-width: 650px) {\n      bottom: -4px;\n      left: 5px;\n    }\n  }\n\n  ::before {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-width: 8px 12px 0;\n    border-color: #17334a transparent;\n    display: block;\n    width: 0;\n    z-index: 0;\n    bottom: -8px;\n    left: 18px;\n    @media screen and (max-width: 650px) {\n      left: 8px;\n    }\n  }\n`;\n\nexport default Progress;\n","/* eslint-disable */\r\nimport { NoEncryption } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid } from \"../elements/Index\";\r\nconst ImgType = props => {\r\n  const {\r\n    margin,\r\n    width,\r\n    height,\r\n    _onClick,\r\n    cursor,\r\n    object_fit,\r\n    position,\r\n    right,\r\n    bottom,\r\n  } = props;\r\n  const styles = {\r\n    margin,\r\n    width,\r\n    height,\r\n    cursor,\r\n    object_fit,\r\n    position,\r\n    right,\r\n    bottom,\r\n  };\r\n  const [imges, setImges] = React.useState([\r\n    {\r\n      id: \"tiger\",\r\n      type: \"LVG\",\r\n      img: \"/img/호랑이.png\",\r\n    },\r\n    {\r\n      id: \"wolf\",\r\n      type: \"LVP\",\r\n      img: \"/img/늑대.png\",\r\n    },\r\n    {\r\n      id: \"fox\",\r\n      type: \"LHG\",\r\n      img: \"/img/여우.png\",\r\n    },\r\n    {\r\n      id: \"panda\",\r\n      type: \"LHP\",\r\n      img: \"/img/판다.png\",\r\n    },\r\n    {\r\n      id: \"rabbit\",\r\n      type: \"FVG\",\r\n      img: \"/img/토끼.png\",\r\n    },\r\n    {\r\n      id: \"dog\",\r\n      type: \"FVP\",\r\n      img: \"/img/개.png\",\r\n    },\r\n    {\r\n      id: \"cat\",\r\n      type: \"FHG\",\r\n      img: \"/img/고양이.png\",\r\n    },\r\n    {\r\n      id: \"seal\",\r\n      type: \"FHP\",\r\n      img: \"/img/물개.png\",\r\n    },\r\n    {\r\n      id: \"raccoons\",\r\n      type: \"RHP\",\r\n      img: \"/img/너구리.png\",\r\n    },\r\n  ]);\r\n  const [result, setResult] = React.useState();\r\n  React.useEffect(() => {\r\n    imges.map(item => {\r\n      if (item.type === props.type) {\r\n        setResult(item.img);\r\n        return item;\r\n      }\r\n    });\r\n  }, [props.type]);\r\n\r\n  return (\r\n    <>\r\n      {result && (\r\n        <Img key={imges.id} {...styles} src={result} onClick={_onClick} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nImgType.defaultProps = {\r\n  margin: \"6px\",\r\n  width: \"48px\",\r\n  height: \"48px\",\r\n  object_fit: null,\r\n  position: null,\r\n  right: null,\r\n  bottom: null,\r\n  _onClick: () => {},\r\n};\r\n\r\nconst Img = styled.img`\r\n  width: ${props => props.width};\r\n  height: ${props => props.height};\r\n  margin: ${props => props.margin};\r\n  cursor: ${props => props.cursor};\r\n  object-fit: ${props => props.object_fit};\r\n  position: ${props => props.position};\r\n  right: ${props => (props.src === \"LVP\" ? \"0px\" : props.right)};\r\n  bottom: ${props => (props.src === \"LVP\" ? \"50px\" : null)};\r\n`;\r\nexport default ImgType;\r\n","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TestResult from \"./TestResult\";\nimport Test from \"./Test\";\nimport TestData from \"./Testdata.json\";\nimport Progress from \"./Progress\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, Button, Image, Text } from \"../../elements/Index\";\nimport { userCreators } from \"../../redux/modules/user\";\nimport { history } from \"../../redux/configureStore\";\nimport ImgType from \"../../shared/ImgType\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst PropensityTest = props => {\n  const isToken = document.cookie.split(\"=\")[1];\n  const dispatch = useDispatch();\n  const userInfo = useSelector(state => state.user);\n  const userType = useSelector(state => state.user.userPropensityType);\n  const memberType = useSelector(state => state.user.memberPropensityType);\n  // const [active, setActive] = React.useState(preUserPropensityType);\n  const [isChecked, setIsChecked] = React.useState(\"#fff\");\n  const ToggleButton = answer => {\n    isChecked === \"#fff\" ? setIsChecked(\"#170184\") : setIsChecked(\"#fff\");\n  };\n\n  //스텝별로 스테이트 변화값에 따라 텍스트가 바뀌는지 먼저 확인\n  const [page, setpage] = useState(1);\n  // console.log(page, TestData.teststep);\n\n  // 최종 장소\n  const [userPropensityType, setUserPropensityType] = useState([]);\n  const [memberPropensityType, setMemberPropensityType] = useState([]);\n  //임시 장소\n  const [preUserPropensityType, setPreUserPropensityType] = useState(\"\");\n  const [preMemberPropensityType, setPreMemberPropensityType] = useState(\"\");\n\n  //자식요소의 밸류값을 가져와 임시에 저장\n  const handleUserCreate = answer => {\n    setPreUserPropensityType(answer);\n    // console.log(\"나의항목 임시저장\", answer);\n  };\n  const handleMemberCreate = answer => {\n    setPreMemberPropensityType(answer);\n    // console.log(\"상대방의 항목 임시저장\", answer);\n  };\n\n  //스테이트값에 변화를 버튼에 달아줌\n  //다음버튼 누를시에 변화된 값을 스테이트에 담아줌\n  const nextStep = () => {\n    //나에대한 항목\n    let preMy = userPropensityType;\n    let preYou = memberPropensityType;\n    // console.log(preUserPropensityType, preMemberPropensityType);\n\n    if (preUserPropensityType === \"\" || preMemberPropensityType === \"\") {\n      return window.alert(\"문항을 선택해주세요!\");\n      // Swal.fire(\n      //   '문항을 선택해주세요!',\n      //   '',\n      //   'info'\n      // )\n    } else {\n      setpage(page => page + 1);\n      setPreUserPropensityType(\"\");\n      setPreMemberPropensityType(\"\");\n      preMy.push(preUserPropensityType);\n      setUserPropensityType(preMy);\n      // console.log(\"내꺼 잘 들어감?\", userPropensityType);\n      //상대에 다한 항목\n\n      preYou.push(preMemberPropensityType);\n      setMemberPropensityType(preYou);\n      // console.log(\"너꺼 잘 들어감?\", memberPropensityType);\n    }\n  };\n\n  //이전버튼 누를시에 마지막으로 저장된값을 스테이트에 삭제함\n  const preStep = () => {\n    setpage(page => page - 1);\n\n    // 이전으로가면 마지막항목 제거 (나의것)\n    let toPopMy = userPropensityType;\n    toPopMy.pop();\n    setUserPropensityType(toPopMy);\n    // console.log(\"마지막 항목이 사라짐?\", userPropensityType);\n    //이전으로 가면 마지막 항목 제거 (상대방의 것)\n    let topopYou = memberPropensityType;\n    topopYou.pop();\n    setMemberPropensityType(topopYou);\n    // console.log(\"마지막 항목이 사라짐?\", memberPropensityType);\n  };\n\n  //회원가입\n  const register = () => {\n    setPreUserPropensityType(\"\");\n    setPreMemberPropensityType(\"\");\n    //나에대한 항목\n    let preMy = userPropensityType;\n    preMy.push(preUserPropensityType);\n    setUserPropensityType(preMy);\n    // console.log(\"내꺼 잘 들어감?\", userPropensityType);\n\n    //상대에 다한 항목\n    let preYou = memberPropensityType;\n    preYou.push(preMemberPropensityType);\n    setMemberPropensityType(preYou);\n    // console.log(\"너꺼 잘 들어감?\", memberPropensityType);\n\n    let realSnsId = String(userInfo.snsId);\n    let realUserId = userInfo.userId;\n\n    const registerInfo = {\n      snsId: realSnsId,\n      email: userInfo.email,\n      nickname: userInfo.nickName,\n      techStack: userInfo.techStack,\n      userPropensityType: userPropensityType,\n      memberPropensityType: memberPropensityType,\n    };\n    const testUpdateInfo = {\n      userPropensityType: userPropensityType,\n      memberPropensityType: memberPropensityType,\n    };\n\n    if (isToken) {\n      dispatch(userCreators.editTestMiddleware(realUserId, testUpdateInfo));\n      return setpage(page => page + 1);\n    } else {\n      dispatch(userCreators.signupMiddleware(registerInfo));\n      setpage(page => page + 1);\n    }\n  };\n\n  const exitResult = () => {\n    if (!props.mypage) {\n      // console.log(\"여기1\");\n      dispatch(userCreators.modal());\n      history.push(\"/\");\n      return props.TestClose();\n    }\n    // console.log(\"여기2\");\n    dispatch(userCreators.modal());\n    props.TestClose();\n  };\n\n  return (\n    <Grid>\n      {/* 상단헤더 */}\n      <Header>\n        <CloseBox\n          position=\"absolute\"\n          top=\"5px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n          height=\"100%\"\n          bg=\"111\"\n        >\n          <CloseIcon\n            sx={{ color: \"#fff\", fontSize: 30 }}\n            onClick={() => {\n              props.TestClose();\n            }}\n            cursor=\"pointer\"\n          />\n        </CloseBox>\n        <Grid\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          height=\"100%\"\n        >\n          <Text size=\"20px\" bold color=\"#fff\">\n            협업테스트\n          </Text>\n        </Grid>\n      </Header>\n\n      {/* 프로그래스바 */}\n      <Grid width=\"70%\" margin=\"15px auto\" height=\"10%\">\n        <Progress page={page} />\n      </Grid>\n\n      {/* 이미지결과 */}\n      <StepImgBox>\n        {TestData.teststep.map(step => {\n          if (step.step === page) {\n            return <TestImg key={step.step} src={step.img} />;\n          }\n        })}\n        {page === 10 &&\n          TestData.testresult.map(result => {\n            if (result.type === userType) {\n              return <img key={result.type} width=\"40%\" src={result.img} />;\n            }\n          })}\n      </StepImgBox>\n\n      {/* 컨텐츠자리 */}\n      <Grid width=\"90%\" margin=\"auto\" height=\"42%\">\n        {page <= 9 && (\n          <Test\n            page={page}\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 10 && <TestResult userType={userType} />}\n      </Grid>\n\n      {/* 버튼 */}\n      <Grid\n        display=\"flex\"\n        width=\"90%\"\n        justifyContent=\"center\"\n        height=\"8%\"\n        margin=\"30px auto\"\n      >\n        {/* 5.다음결과값이 없을때 페이지처리 */}\n        {page !== 1 && page !== 10 && (\n          <Button width=\"40%\" margin=\"5px\" _onClick={preStep}>\n            이전버튼\n          </Button>\n        )}\n        {page < 9 && (\n          <Button width=\"40%\" margin=\"5px\" _onClick={nextStep}>\n            다음버튼\n          </Button>\n        )}\n        {page == 9 && (\n          <Button width=\"40%\" margin=\"5px\" _onClick={register}>\n            제출하기\n          </Button>\n        )}\n        {page == 10 && (\n          <Button\n            common\n            fontSize=\"11px\"\n            width=\"80%\"\n            margin=\"5px\"\n            _onClick={exitResult}\n          >\n            내 성향에 맞는 팀원을 찾으러 가볼까요?\n          </Button>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst StepImgBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 10px 0;\n  height: 25%;\n  @media (max-width: 650px) {\n    height: 15%;\n  }\n`;\n\nconst TestImg = styled.img`\n  width: 40%;\n  height: 40%;\n  @media (max-width: 650px) {\n    width: 30%;\n    height: 100%;\n  }\n`;\nconst Header = styled.div`\n  height: 50px;\n  background-color: #17334a;\n  position: relative;\n  text-align: center;\n  padding: 10px 0 10px 0;\n  @media (max-width: 650px) {\n    height: 25px;\n  }\n`;\n\nconst CloseBox = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 10px;\n  width: 20px;\n  padding: 10px;\n  height: 100%;\n  @media (max-width: 650px) {\n    top: -4px;\n  }\n`;\n\nexport default PropensityTest;\n","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { Grid, Input, Text, Button, Image } from \"../elements/Index\";\nimport { Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { userCreators } from \"../redux/modules/user\";\nimport Select from \"react-select\";\n\nimport PropensityTest from \"./propensityTest/PropensityTest\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst LoginModal = (props) => {\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.user);\n  const sigunupModalState = useSelector(\n    (state) => state.user.sigunupModalState\n  );\n\n  var regExpNick = /^[a-zA-Z0-9ㄱ-ㅎ|ㅏ-ㅣ|가-힣]{2,5}$/;\n  var regExpEmail =\n    /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n\n  //테크스택 옵션\n  const techStackOption = [\n    { value: \"React\", label: \"React\" },\n    { value: \"Java\", label: \"Java\" },\n    { value: \"Spring\", label: \"Spring\" },\n    { value: \"JavaScript\", label: \"JavaScript\" },\n    { value: \"Python\", label: \"Python\" },\n    { value: \"Node\", label: \"Node\" },\n    { value: \"cpp\", label: \"C++\" },\n    { value: \"Flask\", label: \"Flask\" },\n    { value: \"Django\", label: \"Django\" },\n    { value: \"Vue\", label: \"Vue\" },\n    { value: \"php\", label: \"php\" },\n    { value: \"Swift\", label: \"Swift\" },\n    { value: \"Kotlin\", label: \"Kotlin\" },\n    { value: \"TypeScript\", label: \"TypeScript\" },\n  ];\n\n  //모달\n  const { showModal, setShowModal } = props;\n\n  const TestClose = () => {\n    setShowModal(false);\n  };\n  const modalClose = () => {\n    setShowModal(false);\n  };\n\n  //입력부분\n  const [nickName, setNickName] = useState();\n  const [email, setEmail] = useState(userInfo.email);\n  const [techStack, setTeckstack] = useState([]);\n  const [emailDup, setEmailDup] = useState(false);\n  const [nameDup, setNameDup] = useState(false);\n  const [test, setTest] = useState(false);\n\n  // console.log(\"닉네임\", nickName);\n  // console.log(\"이메일\", email);\n  // console.log(\"기술스택\", techStack);\n  // console.log(\"sns아이디\", userInfo.snsId);\n\n  //닉네임 체크 미들웨어\n  const nickCheck = (nickName) => {\n    if (nickName === undefined) {\n      alert(\"닉네임을 입력 해주세요.\");\n      return false;\n    }\n\n    if (!regExpNick.test(nickName)) {\n      alert(\"닉네임은 2~5자 숫자 조합만 가능합니다.\");\n      return false;\n    }\n    dispatch(userCreators.nickCheckMiddleWare(nickName));\n  };\n\n  //이메일 체크 미들웨어\n  const emailCheck = (email) => {\n    if (nickName === \"\") {\n      alert(\"이메일을 입력 해주세요.\");\n      return false;\n    }\n\n    if (!regExpEmail.test(email)) {\n      alert(\"이메일 형식을 확인해주세요.\");\n      return false;\n    }\n    dispatch(userCreators.emailCheckMiddleWare(email));\n  };\n\n  //테스트 마친 회원가입 api\n  const preSignUP = () => {\n    if (techStack.length === 0) {\n      alert(\"기술스택을 선택 해주세요.\");\n      return false;\n    }\n    if (techStack.length > 8) {\n      alert(\"기술선택을 7개 이하로 입력해주세요.\");\n      return false;\n    }\n    if (nameDup === false) {\n      alert(\"닉네임 중복확인을 해주세요.\");\n      return false;\n    }\n    const registerInfo = {\n      snsId: userInfo.snsId,\n      // email: userInfo.email,\n      nickName: nickName,\n      techStack: techStack,\n    };\n    // console.log(registerInfo);\n    dispatch(userCreators.testUserMiddleWare(registerInfo));\n    setTest(true);\n  };\n\n  const customStyles = {\n    control: (styles) => ({\n      ...styles,\n      backgroundColor: \"white\",\n      borderRadius: \"20px\",\n      fontSize: \"12px\",\n      textAlign: \"left\",\n      padding: \"0 0 0 12px\",\n    }),\n    multiValue: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: \"#17334a\",\n      color: \"white\",\n      borderRadius: \"20px\",\n    }),\n    multiValueLabel: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n    }),\n    multiValueRemove: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      \":hover\": {\n        backgroundColor: data.color,\n        color: \"white\",\n      },\n    }),\n  };\n  //회원가입이 필요한 유저일경우 모달창 활성화\n  React.useLayoutEffect(() => {\n    if (sigunupModalState) {\n      setShowModal(true);\n    }\n  }, [sigunupModalState]);\n\n  //개선해야됨\n  // const openWindow = () => {\n  //   let customWindow = window.open(\n  //     \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\",\n  //     \"\",\n  //     \"_blank\"\n  //   );\n\n  //   // setTimeout(() => {\n  //   //   customWindow.close();\n  //   // }, 5000);\n\n  //   //   //s3\n  //   //   // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://kbumsoo.s3-website.ap-northeast-2.amazonaws.com/user/kakao/callback&response_type=code\";\n\n  //   //   //local\n  //   //   // (\"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\");\n\n  //   //   // 최종 주소\n  //   //   // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=https://scopewith.com/user/kakao/callback&response_type=code\";\n  // };\n\n  const closeWindow = () => {\n    setTimeout(() => {\n      window.close();\n    }, 500);\n  };\n\n  //회원이 아닐경우 회원가입, 회원일 경우 메인으로 이동\n  if (sigunupModalState == true) {\n    return (\n      <Dialog\n        maxWidth={\"sm\"}\n        scroll=\"paper\"\n        open={showModal}\n        onClose={modalClose}\n      >\n        <SignupModalWrap>\n          {/* 테스트가 필요한경우 */}\n          {!test ? (\n            <Grid>\n              {/* 헤더 */}\n              <Grid\n                height=\"7%\"\n                bg=\"#17334a\"\n                position=\"relative\"\n                textAlign=\"center\"\n                padding=\"10px 0 10px 0\"\n              >\n                <Grid\n                  position=\"absolute\"\n                  top=\"0px\"\n                  right=\"10px\"\n                  width=\"20px\"\n                  padding=\"10px\"\n                >\n                  <CloseIcon\n                    sx={{ color: \"#fff\", fontSize: 35 }}\n                    onClick={TestClose}\n                    cursor=\"pointer\"\n                  />\n                </Grid>\n                <Grid\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  height=\"40px\"\n                >\n                  <Text size=\"15px\" bold color=\"#fff\">\n                    회원가입\n                  </Text>\n                </Grid>\n              </Grid>\n              {/* 타이틀 */}\n              <Grid height=\"3%\" textAlign=\"center\" margin=\"30px 0 10px 0\">\n                <Text bold=\"bold\" size=\"21px\">\n                  Welcome to Scope!\n                </Text>\n              </Grid>\n              {/* 입력부분 */}\n              <Grid\n                display=\"flex\"\n                justifyContent=\"center\"\n                height=\"58%\"\n                textAlign=\"center\"\n                padding=\"10px 0\"\n                margin=\"auto\"\n              >\n                <Grid width=\"90%\" height=\"70%\" display=\"flex\">\n                  {/* 라벨 */}\n                  <Grid\n                    width=\"15%\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"top\"\n                    margin=\"5px auto\"\n                    height=\"280px\"\n                  >\n                    <Grid\n                      height=\"25%\"\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                      margin=\"23px 0 15px 0\"\n                    >\n                      <Text color=\"#111\">닉네임</Text>\n                    </Grid>\n                    <Grid padding=\"10px 0 0 0\">\n                      <Text color=\"#111\">기술스택</Text>\n                    </Grid>\n                  </Grid>\n                  {/* 입력부분 */}\n                  <Grid\n                    width=\"60%\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"top\"\n                    margin=\"15px auto\"\n                    height=\"280px\"\n                  >\n                    <Grid height=\"13%\" margin=\"16px 0 20px\">\n                      <Input\n                        borderRadius=\"25px\"\n                        border=\"1px solid #ddd\"\n                        fontSize=\"12px\"\n                        padding=\"0 0 0 23px\"\n                        height=\"100%\"\n                        placeholder=\"닉네임을 입력해주세요\"\n                        _onChange={(e) => {\n                          setNickName(e.target.value);\n                        }}\n                      >\n                        닉네임\n                      </Input>\n                      {!regExpNick.test(nickName) && (\n                        <Grid\n                          width=\"170px\"\n                          margin=\"0 0 0 20px\"\n                          textAlign=\"left\"\n                        >\n                          <Text size=\"9px\" color=\"red\">\n                            ※ 2~5자 한글,영문,숫자 조합\n                          </Text>\n                        </Grid>\n                      )}\n                      {regExpNick.test(nickName) && (\n                        <Grid\n                          width=\"170px\"\n                          margin=\"0 0 0 20px\"\n                          textAlign=\"left\"\n                        >\n                          <Text size=\"9px\" color=\"green\">\n                            ※ 올바른 닉네임입니다!\n                          </Text>\n                        </Grid>\n                      )}\n                    </Grid>\n\n                    <Grid height=\"45%\" padding=\"0 0 10px 0\">\n                      <Select\n                        styles={customStyles}\n                        placeholder=\"보유중인 기술을 선택해주세요!\"\n                        isMulti\n                        name=\"techStack\"\n                        options={techStackOption}\n                        className=\"basic-multi-select\"\n                        classNamePrefix=\"select\"\n                        onChange={(e) => {\n                          let techStack = [];\n                          let arr = e;\n                          let idx = 0;\n                          for (idx = 0; idx < e.length; idx++) {\n                            techStack.push(arr[idx][\"value\"]);\n                          }\n                          setTeckstack(techStack);\n                        }}\n                      >\n                        기술스택\n                      </Select>\n                      {techStack.length <= 7 && (\n                        <Grid\n                          width=\"180px\"\n                          margin=\"0 0 0 20px\"\n                          textAlign=\"left\"\n                        >\n                          <Text size=\"9px\" color=\"green\">\n                            ※ 기술스택은 7개까지 가능\n                          </Text>\n                        </Grid>\n                      )}\n                      {techStack.length > 7 && (\n                        <Grid\n                          width=\"180px\"\n                          margin=\"0 0 0 20px\"\n                          textAlign=\"left\"\n                        >\n                          <Text size=\"9px\" color=\"red\">\n                            ※ 기술스택이 초과되었습니다.\n                          </Text>\n                        </Grid>\n                      )}\n                    </Grid>\n                  </Grid>\n                  {/* 중복체크 */}\n                  <Grid\n                    width=\"20%\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"center\"\n                    margin=\"10px auto\"\n                    height=\"280px\"\n                  >\n                    <Grid height=\"85%\">\n                      <Button\n                        height=\"35px\"\n                        fontSize=\"10px\"\n                        text=\"닉네임 중복\"\n                        _onClick={() => {\n                          nickCheck(nickName);\n                          setNameDup(true);\n                        }}\n                      ></Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              {/* 버튼 */}\n              <Grid width=\"50%\" margin=\"auto\" height=\"10%\">\n                <Button\n                  text=\"성향테스트\"\n                  margin=\"30px 0\"\n                  _onClick={() => {\n                    preSignUP();\n                  }}\n                ></Button>\n              </Grid>\n            </Grid>\n          ) : (\n            <PropensityTest TestClose={TestClose} />\n          )}\n        </SignupModalWrap>\n      </Dialog>\n    );\n  } else {\n    return (\n      <Dialog maxWidth={\"md\"} scroll=\"paper\" open={showModal}>\n        <LoginModalWrap>\n          <Grid\n            height=\"15%\"\n            bg=\"#17334a\"\n            position=\"relative\"\n            padding=\"10px 0 10px 0\"\n            boxShadow=\"0 5px 25px rgb(0 0 0 / 15%)\"\n          >\n            <Grid\n              position=\"absolute\"\n              top=\"0px\"\n              right=\"6%\"\n              width=\"3%\"\n              padding=\"10px\"\n            >\n              <CloseIcon\n                sx={{ color: \"#fff\", fontSize: 35 }}\n                onClick={modalClose}\n                cursor=\"pointer\"\n              />\n            </Grid>\n            <Grid\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              height=\"40px\"\n            >\n              <Text size=\"25px\" bold color=\"#fff\">\n                로그인\n              </Text>\n            </Grid>\n          </Grid>\n\n          <Grid height=\"80%\" padding=\"20px 0\">\n            <Grid\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              position=\"relative\"\n              justifyContent=\"center\"\n            >\n              <Grid margin=\"20px 0\" display=\"flex\" justifyContent=\"center\">\n                <img width=\"40%\" src=\"/img/호랑이.png\" />\n              </Grid>\n              <Title>Welcome to Scope!</Title>\n              <Grid display=\"flex\" flexDirection=\"column\">\n                <GithubBtn\n                  onClick={() => {\n                    setShowModal(true);\n                    window.location.href =\n                      // window.open(\"\", \"\", \"_blank\")\n                      //s3\n                      // \"https://github.com/login/oauth/authorize?client_id=5bb2c0fab941fb5b8f9f&scope=repo:status read:repo_hook user:email&redirect_uri=http://kbumsoo.s3-website.ap-northeast-2.amazonaws.com/user/github/callback\";\n\n                      //local\n                      // \"https://github.com/login/oauth/authorize?client_id=5bb2c0fab941fb5b8f9f&scope=repo:status read:repo_hook user:email&redirect_uri=http://localhost:3000/user/github/callback\";\n\n                      // 최종 주소\n\n                      \"https://github.com/login/oauth/authorize?client_id=5bb2c0fab941fb5b8f9f&scope=repo:status read:repo_hook user:email&redirect_uri=https://scopewith.com/user/github/callback\";\n                  }}\n                >\n                  깃허브로그인\n                </GithubBtn>\n                <KakaoBtn\n                  onClick={() => {\n                    setShowModal(true);\n                    // openWindow();\n                    window.location.href =\n                      // window.open(\n                      //   \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\",\n                      //   \"\",\n                      //   \"_blank\"\n                      // );\n\n                      //s3\n                      // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://kbumsoo.s3-website.ap-northeast-2.amazonaws.com/user/kakao/callback&response_type=code\";\n\n                      //local\n                      // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\";\n\n                      // 최종 주소\n                      \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=https://scopewith.com/user/kakao/callback&response_type=code\";\n                    closeWindow();\n                  }}\n                >\n                  카카오로그인\n                </KakaoBtn>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid display=\"flex\" justifyContent=\"center\" margin=\"10px 0 30px 0\">\n            <Grid width=\"20%\" backgroundColor=\"#17334a\" height=\"3px\"></Grid>\n          </Grid>\n        </LoginModalWrap>\n      </Dialog>\n    );\n  }\n};\n\nconst Title = styled.h1`\n  @media (max-width: 620px) {\n    font-size: 20px;\n  }\n`;\nconst LoginModalWrap = styled.div`\n  width: 550px;\n  height: 100%;\n  @media (max-width: 620px) {\n    width: 310px;\n  }\n  /* @media (max-width: 375px) {\n    width: 250px;\n  } */\n`;\n\nconst SignupModalWrap = styled.div`\n  height: 100%;\n  width: 550px;\n\n  @media (max-width: 650px) {\n    width: 310px;\n    height: 550px;\n    font-size: 11px;\n  }\n`;\n\nconst GithubBtn = styled.div`\n  display: flex;\n  width: 282px;\n  height: 50px;\n  margin: 5px auto;\n  border-radius: 25px;\n  font-size: 14px;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  background-color: #272e33;\n  box-shadow: 0 5px 25px rgb(0 0 0 / 15%);\n  cursor: pointer;\n  @media (max-width: 620px) {\n    width: 170px;\n    font-size: 12px;\n  }\n`;\n\nconst KakaoBtn = styled.div`\n  display: flex;\n  width: 282px;\n  height: 50px;\n  margin: 5px auto;\n  border-radius: 25px;\n  font-size: 14px;\n  justify-content: center;\n  align-items: center;\n  color: #606060;\n  cursor: pointer;\n  background-color: #fae100;\n  box-shadow: 0 5px 25px rgb(0 0 0 / 15%);\n\n  @media (max-width: 620px) {\n    width: 170px;\n    font-size: 12px;\n  }\n`;\n\nexport default LoginModal;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Button } from \"../elements/Index\";\nimport LoginModal from \"./LoginModal\";\nimport { userCreators } from \"../redux/modules/user\";\nimport { deleteCookie } from \"../shared/Cookie\";\nimport ImgType from \"../shared/ImgType\";\n\nconst HeaderRight = props => {\n  const dispatch = useDispatch();\n  const isToken = document.cookie;\n  const userInfo = useSelector(state => state.user);\n  // console.log(userInfo);\n  const [showModal, setShowModal] = React.useState(false);\n  const [doLogout, setDoLogOut] = React.useState(false);\n\n  const sigunupModalState = useSelector(state => state.user.sigunupModalState);\n  const modalOpen = () => {\n    setShowModal(true);\n  };\n  // console.log(userInfo.userPropensityType);\n\n  const logOut = () => {\n    deleteCookie(\"ScopeUser\");\n    dispatch(userCreators.logOut());\n    history.replace(\"/\");\n    setDoLogOut(!doLogout);\n  };\n  React.useLayoutEffect(() => {}, [\n    isToken,\n    doLogout,\n    userInfo.userPropensityType,\n  ]);\n\n  const goMypage = () => {\n    history.push(`/`);\n    setTimeout(() => {\n      history.push(`/mypage/${userInfo.userId}`);\n    }, 50);\n  };\n\n  if (isToken) {\n    return (\n      <>\n        {userInfo && (\n          <Grid>\n            <HeaderWrapper>\n              {/* <Message\n            onClick={() => {\n              history.push(`/message`);\n            }}\n          >\n            <i class=\"far fa-envelope\"></i>\n          </Message>\n          <Bell>\n            <i class=\"far fa-bell\"></i>\n          </Bell> */}\n              <IconWrap>\n                <Grid\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  margin=\"0 20px\"\n                  _onClick={() => {\n                    goMypage();\n                    // history.push(`/mypage/${userInfo.userId}`);\n                    // location.href = `/mypage/${userInfo.userId}`;\n                  }}\n                >\n                  {userInfo.userPropensityType === \"LVG\" && (\n                    <UserImg size=\"50\" src=\"/img/호랑이.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"LVP\" && (\n                    <UserImg src=\"/img/늑대.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"LHG\" && (\n                    <UserImg src=\"/img/여우.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"LHP\" && (\n                    <UserImg src=\"/img/판다.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FVG\" && (\n                    <UserImg src=\"/img/토끼.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FVP\" && (\n                    <UserImg src=\"/img/개.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FHG\" && (\n                    <UserImg src=\"/img/고양이.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FHP\" && (\n                    <UserImg src=\"/img/물개.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"RHP\" && (\n                    <UserImg src=\"/img/너구리.png\"></UserImg>\n                  )}\n                </Grid>\n              </IconWrap>\n              <ButtonWrap>\n                <Button\n                  common\n                  width=\"100px\"\n                  text=\"로그아웃\"\n                  _onClick={logOut}\n                ></Button>\n              </ButtonWrap>\n            </HeaderWrapper>\n          </Grid>\n        )}\n      </>\n    );\n  } else {\n    return (\n      <HeaderWrapper>\n        <ButtonWrap>\n          <Btn onClick={modalOpen}>로그인</Btn>\n        </ButtonWrap>\n\n        <LoginModal showModal={showModal} setShowModal={setShowModal} />\n      </HeaderWrapper>\n    );\n  }\n};\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  padding-right: 0px;\n  justify-content: space-between;\n  @media screen and (max-width: 595px) {\n    width: 100px;\n  } ;\n`;\n\nconst Message = styled.div`\n  font-size: 30px;\n  margin-top: 8px;\n  margin-right: 16px;\n  cursor: pointer;\n`;\nconst Bell = styled.div`\n  margin-top: 8px;\n  font-size: 30px;\n  cursor: pointer;\n`;\n\nconst ButtonWrap = styled.div`\n  @media screen and (max-width: 595px) {\n    margin: auto 2px auto auto;\n  } ;\n`;\n\nconst IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  margin: auto 10px auto auto;\n  cursor: pointer;\n  @media screen and (max-width: 767px) {\n    display: none;\n  } ;\n`;\n\nconst UserImg = styled.img`\n  object-fit: cover;\n  width: 50px;\n  border-radius: 50px;\n  box-shadow: 0 0 3px #ddd;\n  cursor: pointer;\n`;\n\nconst Btn = styled.button`\n  background-color: #fff;\n  color: #17334a;\n  border-radius: 25px;\n  border: 1px solid #17334a;\n  cursor: pointer;\n  height: 50px;\n  width: 120px;\n  &:hover {\n    background-color: #17334a;\n    color: #fff;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  font-family: \"GmarketSans\";\n  @media screen and (max-width: 425px) {\n    height: 35px;\n    width: 80px;\n    font-size: 12px;\n  }\n`;\n\nexport default HeaderRight;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid } from \"../elements/Index\";\nimport styled from \"styled-components\";\nimport HeaderLeft from \"../components/HeaderLeft\";\nimport HeaderRight from \"./HeaderRight\";\n\nconst Header = (props) => {\n  //로고를 망원경 하나로 바꾸고 , 닉네임 없애고, 로그아웃을 삼단선으로\n  return (\n    <>\n      <Wrap>\n        <Grid width=\"auto\" height=\"auto\" margin=\"0 0 0 20px\">\n          <HeaderLeft />\n        </Grid>\n        <Grid width=\"auto\" height=\"auto\" margin=\"0 20px 0 0 \">\n          <HeaderRight />\n        </Grid>\n      </Wrap>\n    </>\n  );\n};\n\nconst Wrap = styled.div`\n  max-width: 1400px;\n  width: 100vw;\n  margin: auto;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0);\n  /* background-color: white; */\n  padding: 20px 0;\n  z-index: 10;\n  position: relative;\n  /* left: 50%;\n  transform: translate(-50%, 0); */\n`;\n\nexport default Header;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst LogoButton = (props) => {\r\n  return (\r\n    <BorderRadius>\r\n      <IMGS\r\n        id={props.item.id}\r\n        src={props.item.img}\r\n        active={props.item.active}\r\n        title={props.item.title}\r\n        onClick={() => {\r\n          props.onClick();\r\n        }}\r\n      ></IMGS>\r\n    </BorderRadius>\r\n  );\r\n};\r\nconst BorderRadius = styled.div`\r\n  border-radius: 250px;\r\n  margin: auto;\r\n`;\r\n\r\nconst IMGS = styled.img`\r\n  cursor: pointer;\r\n  width: 68px;\r\n  margin: 10px 15px;\r\n  opacity: ${(props) => (props.active ? 1 : 0.2)};\r\n  transition: all 0.1s linear;\r\n  :hover {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  @media screen and (max-width: 750px) {\r\n    width: 30px;\r\n  }\r\n`;\r\n\r\nexport default LogoButton;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid } from \"../elements/Index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postActions } from \"../redux/modules/post\";\r\nimport { stackAction } from \"../redux/modules/stack\";\r\nimport LogoButton from \"../elements/LogoButton\";\r\n\r\nconst Stack = (props) => {\r\n  const dispatch = useDispatch();\r\n  const stack = useSelector((state) => state.stack.stack);\r\n  const stack2 = useSelector((state) => state.stack.stacks);\r\n  //필터 클릭\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"Java\",\r\n      img: \"/img/java.png\",\r\n      active: false,\r\n      title: \"Java\",\r\n    },\r\n    {\r\n      id: \"JavaScript\",\r\n      img: \"/img/javascript.png\",\r\n      active: false,\r\n      title: \"JavaScript\",\r\n    },\r\n    {\r\n      id: \"Python\",\r\n      img: \"/img/python.png\",\r\n      active: false,\r\n      title: \"Python\",\r\n    },\r\n    {\r\n      id: \"Node\",\r\n      img: \"/img/node.js.png\",\r\n      active: false,\r\n      title: \"Node.js\",\r\n    },\r\n    {\r\n      id: \"React\",\r\n      img: \"/img/react.png\",\r\n      active: false,\r\n      title: \"React\",\r\n    },\r\n    {\r\n      id: \"C++\",\r\n      img: \"/img/c__.png\",\r\n      active: false,\r\n      title: \"C++\",\r\n    },\r\n    {\r\n      id: \"Flask\",\r\n      img: \"/img/flask.png\",\r\n      active: false,\r\n      title: \"Flask\",\r\n    },\r\n    {\r\n      id: \"Django\",\r\n      img: \"/img/django.png\",\r\n      active: false,\r\n      title: \"Django\",\r\n    },\r\n    {\r\n      id: \"Vue\",\r\n      img: \"/img/vue.png\",\r\n      active: false,\r\n      title: \"Vue\",\r\n    },\r\n    {\r\n      id: \"Spring\",\r\n      img: \"/img/spring.png\",\r\n      active: false,\r\n      title: \"Spring\",\r\n    },\r\n    {\r\n      id: \"php\",\r\n      img: \"/img/php.png\",\r\n      active: false,\r\n      title: \"php\",\r\n    },\r\n    {\r\n      id: \"Swift\",\r\n      img: \"/img/swift.png\",\r\n      active: false,\r\n      title: \"Swift\",\r\n    },\r\n    {\r\n      id: \"Kotlin\",\r\n      img: \"/img/kotlin.png\",\r\n      active: false,\r\n      title: \"Kotlin\",\r\n    },\r\n    {\r\n      id: \"TypeScript\",\r\n      img: \"/img/typescript.png\",\r\n      active: false,\r\n      title: \"TypeScript\",\r\n    },\r\n  ]);\r\n  React.useEffect(() => {\r\n    const stacks = Object.entries(stack);\r\n    // console.log(stacks);\r\n    setArr((state) => {\r\n      return state.map((stateItem, idx) => {\r\n        if (stateItem.id === stacks[idx][1]) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n\r\n    // arr.map((arrItem, idx) => {\r\n    //   if (arrItem.id === stacks[idx][1]) {\r\n    //     setArr({ ...arrItem, active: !arrItem.active });\r\n    //   }\r\n    // });\r\n  }, []);\r\n\r\n  const Filter = (item) => {\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id === item.id) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n\r\n    const result = Object.values(stack).find((r) => r === item.id);\r\n    // console.log(\"이 값이 있으면 지워줘야함\", result);\r\n    if (result) {\r\n      dispatch(postActions.isMainPage(true));\r\n      dispatch(stackAction.setStack(item.id));\r\n    } else {\r\n      dispatch(postActions.isMainPage(true));\r\n      dispatch(stackAction.getStack(item.id));\r\n    }\r\n    const result2 = stack2.find((r) => r === item.id);\r\n    if (result2) {\r\n      dispatch(stackAction.setStack2(item.id));\r\n    } else {\r\n      dispatch(stackAction.getStack2(item.id));\r\n    }\r\n\r\n    // console.log(\"dodo\", stack2);\r\n  };\r\n\r\n  const arrStack = (item) => {\r\n    const nowStack = props.stacks;\r\n    const alreadyChecked = nowStack.find((p) => p === item.id);\r\n    // console.log(alreadyChecked);\r\n    if (!alreadyChecked) {\r\n      props.setStacks(nowStack.concat(item.id));\r\n    }\r\n    if (alreadyChecked) {\r\n      const deleteCheck = nowStack.filter((p) => p !== alreadyChecked);\r\n      props.setStacks(deleteCheck);\r\n    }\r\n\r\n    // console.log(nowStack);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      height=\"75%\"\r\n      margin=\"25px auto 20px auto\"\r\n      boxShadow=\"0px 0px 10px #ddd\"\r\n      padding=\"5px 10px\"\r\n      borderRadius=\"20px\"\r\n      overflow=\"auto\"\r\n      alignItems=\"center\"\r\n      maxWidth=\"1400px\"\r\n    >\r\n      {arr.map((item) => {\r\n        return (\r\n          <LogoButton\r\n            item={item}\r\n            key={item.id}\r\n            onClick={() => {\r\n              if (props.do === \"StacksComponent\") {\r\n                Filter(item);\r\n                arrStack(item);\r\n              }\r\n            }}\r\n          ></LogoButton>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Stack;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { history } from \"../redux/configureStore\";\r\nimport { Grid, Image, Progress } from \"../elements/Index\";\r\nimport Img from \"../images/flutter.png\";\r\n\r\nconst PostStacks = (props) => {\r\n  // console.log(props);\r\n  const whatPage = useSelector((state) => state.post.whatPage);\r\n  const reduxstack = useSelector((state) => state.stack.stack);\r\n  const [stacks, setStacks] = React.useState(9);\r\n  const [Stack, setStack] = React.useState([\r\n    {\r\n      id: \"React\",\r\n      img: \"/img/react.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Java\",\r\n      img: \"/img/java.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"JavaScript\",\r\n      img: \"/img/javascript.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Python\",\r\n      img: \"/img/python.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Node\",\r\n      img: \"/img/node.js.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"C++\",\r\n      img: \"/img/c__.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Flask\",\r\n      img: \"/img/flask.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Django\",\r\n      img: \"/img/django.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Vue\",\r\n      img: \"/img/vue.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Spring\",\r\n      img: \"/img/spring.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"php\",\r\n      img: \"/img/php.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Swift\",\r\n      img: \"/img/swift.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Kotlin\",\r\n      img: \"/img/kotlin.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"TypeScript\",\r\n      img: \"/img/typescript.png\",\r\n      active: false,\r\n    },\r\n  ]);\r\n  let stack = props.stack;\r\n  // console.log(stack);\r\n  // console.log(\"-----\");\r\n\r\n  React.useEffect(() => {\r\n    // let stack = props.stack;\r\n    // setStacks(stack);\r\n    Stack.map((item) => {\r\n      if (item.id === props.stack) {\r\n        setStacks(item.img);\r\n        return item;\r\n      }\r\n      return item;\r\n    });\r\n  }, [whatPage, reduxstack]);\r\n\r\n  return (\r\n    <div>\r\n      {stacks && (\r\n        <Grid\r\n          display=\"flex\"\r\n          width=\"80%\"\r\n          height=\"85%\"\r\n          borderRadius=\"100%\"\r\n          bg=\"#fff\"\r\n          margin=\"-33px 0px\"\r\n          boxShadow=\"0 0 2px #ccc\"\r\n        >\r\n          <IMGS src={stacks}></IMGS>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst IMGS = styled.img`\r\n  width: 70%;\r\n  margin: auto;\r\n  padding: 5px;\r\n  align-items: center;\r\n`;\r\n\r\nexport default PostStacks;\r\n","import React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst Apply = (props) => {\n  const dispatch = useDispatch();\n  const [comment, setComment] = React.useState();\n  const { modalClose, postId } = props;\n  const apply = () => {\n    const applyComment = {\n      comment: comment,\n    };\n    dispatch(applyCreators.applyProjectAPI(postId, applyComment));\n    modalClose(\"신청\");\n  };\n  return (\n    <React.Fragment>\n      <ModalWrap>\n        <Grid height=\"10%\" position=\"relative\">\n          <Grid\n            position=\"absolute\"\n            top=\"0px\"\n            right=\"10px\"\n            width=\"20px\"\n            padding=\"10px\"\n          >\n            <CloseIcon fontSize=\"large\" onClick={modalClose} />\n          </Grid>\n        </Grid>\n        <Grid margin=\"auto\" height=\"90%\" width=\"80%\" alignItems=\"center\">\n          <Grid height=\"20%\" textAlign=\"center\">\n            <Text size=\"30px\" bold>\n              지원신청\n            </Text>\n          </Grid>\n          <Grid height=\"22%\" margin=\"10px 0\" textAlign=\"center\">\n            <Input\n              padding=\"0 0 0 20px\"\n              borderRadius=\"25px\"\n              border=\"1px solid #eee\"\n              height=\"100%\"\n              backgroundColor=\"#fff\"\n              placeholder=\"간단한 본인의 기술스택 및 자기소개\"\n              _onChange={(e) => {\n                // console.log(e.target.value);\n                setComment(e.target.value);\n              }}\n            ></Input>\n          </Grid>\n          <Grid height=\"10%\">\n            <Button borderRadius=\"25px\" _onClick={apply}>\n              지원신청\n            </Button>\n          </Grid>\n        </Grid>\n      </ModalWrap>\n    </React.Fragment>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 300px;\n  position: relative;\n  /* @media (max-width: 620px) {\n    margin: auto;\n    margin-top: 30px;\n    width: 90%;\n  } */\n  @media (max-width: 400px) {\n    width: 300px;\n  }\n`;\n\n// const Contents = styled.div`\n//   margin: auto;\n//   height: 90%;\n//   width: 320px;\n//   text-align: center;\n//   @media (max-width: 620px) {\n//     margin: auto;\n//     margin-top: 30px;\n//     width: 90%;\n//   }\n// `;\n\nexport default Apply;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst Cancel = props => {\n  const dispatch = useDispatch();\n  const { modalClose, postId } = props;\n  const cancel = () => {\n    dispatch(applyCreators.cancelProjectAPI(postId));\n    modalClose(\"취소\");\n  };\n  return (\n    <ModalWrap>\n      <Grid height=\"10%\" position=\"relative\">\n        <Grid\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n        >\n          <CloseIcon fontSize=\"large\" onClick={modalClose} />\n        </Grid>\n      </Grid>\n\n      <Contents\n        margin=\"auto\"\n        height=\"90%\"\n        width=\"320px\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n      >\n        <Grid height=\"20%\">\n          <Text size=\"30px\" bold>\n            지원취소\n          </Text>\n        </Grid>\n        <Grid height=\"25%\" margin=\"10px 0\">\n          <Text size=\"14px\">지원취소를 원하시면 아래 버튼을 클릭해주세요</Text>\n        </Grid>\n        <Grid height=\"10%\">\n          <Button borderRadius=\"25px\" _onClick={cancel}>\n            지원취소\n          </Button>\n        </Grid>\n      </Contents>\n    </ModalWrap>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 300px;\n  position: relative;\n  @media (max-width: 620px) {\n    margin: auto;\n    margin-top: 20px;\n    width: 90%;\n  }\n`;\nconst Contents = styled.div`\n  margin: auto;\n  height: 90%;\n  width: 320px;\n\n  text-align: center;\n  @media (max-width: 620px) {\n    margin: auto;\n    margin-top: 30px;\n    width: 90%;\n  }\n`;\n\nexport default Cancel;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst TeamExit = props => {\n  const dispatch = useDispatch();\n  const { modalClose, postId } = props;\n  const exitTeam = () => {\n    const isPostId = {\n      postId: postId,\n    };\n    dispatch(applyCreators.exitTeamAPI(isPostId));\n    modalClose(\"탈퇴\");\n  };\n  return (\n    <ModalWrap>\n      <Grid height=\"10%\" position=\"relative\">\n        <Grid\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n        >\n          <CloseIcon fontSize=\"large\" onClick={modalClose} />\n        </Grid>\n      </Grid>\n\n      <Grid\n        margin=\"auto\"\n        height=\"90%\"\n        width=\"320px\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n      >\n        <Grid height=\"20%\" textAlign=\"center\">\n          <Text size=\"30px\" bold>\n            팀탈퇴\n          </Text>\n        </Grid>\n        <Grid height=\"25%\" margin=\"10px 0\">\n          <Text size=\"14px\">\n            정말로 탈퇴하시겠습니까? <br /> 한번 탈퇴하면 다시 신청이 불가능할\n            수 있습니다.\n          </Text>\n        </Grid>\n        <Grid height=\"10%\">\n          <Button borderRadius=\"25px\" _onClick={exitTeam}>\n            팀탈퇴\n          </Button>\n        </Grid>\n      </Grid>\n    </ModalWrap>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 300px;\n  position: relative;\n`;\n\nexport default TeamExit;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst SubmitUrl = props => {\n  const dispatch = useDispatch();\n  const [front, setFront] = React.useState();\n  const [back, setBack] = React.useState();\n  const { modalClose, postId } = props;\n  let regex =\n    /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n  const submitUrl = () => {\n    if (regex.test(front) && regex.test(back)) {\n      const github = {\n        frontUrl: front,\n        backUrl: back,\n      };\n      dispatch(applyCreators.submitUrlAPI(postId, github));\n      modalClose(\"제출\");\n      return;\n    }\n\n    return window.alert(\"올바른 URL 주소가 필요합니다.\");\n  };\n\n  return (\n    <ModalWrap>\n      <Grid height=\"10%\" position=\"relative\">\n        <Grid\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n        >\n          <CloseIcon fontSize=\"large\" onClick={modalClose} />\n        </Grid>\n      </Grid>\n      <Grid\n        margin=\"auto\"\n        height=\"90%\"\n        // justifyContent=\"center\"\n        width=\"90%\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n      >\n        <Grid height=\"10%\" textAlign=\"center\">\n          <Text bold=\"bold\" size=\"30px\">\n            프로젝트 소개\n          </Text>\n        </Grid>\n        <Grid height=\"10%\" margin=\"10px 0\">\n          <Text size=\"14px\">\n            완료된 프로젝트를 소개해주시겠어요? <br />\n          </Text>\n        </Grid>\n        <Grid display=\"flex\" height=\"40%\" width=\"90%\" margin=\"auto\">\n          <Grid\n            display=\"flex\"\n            flexDirection=\"column\"\n            height=\"80%\"\n            width=\"30%\"\n            margin=\"auto\"\n          >\n            <Grid\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              margin=\"0 0 2px 0\"\n              bg=\"#878787\"\n            >\n              <Text color=\"#fff\">프론트엔드</Text>\n            </Grid>\n            <Grid\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              bg=\"#878787\"\n            >\n              <Text color=\"#fff\">백엔드</Text>\n            </Grid>\n          </Grid>\n          <Grid\n            display=\"flex\"\n            flexDirection=\"column\"\n            height=\"80%\"\n            width=\"70%\"\n            margin=\"auto auto auto 2px\"\n            alignItems=\"center\"\n          >\n            <Grid margin=\"0 0 2px 0\">\n              <Input\n                border=\"1px solid #878787\"\n                height=\"100%\"\n                padding=\"0 0 0 10px\"\n                placeholder=\"프론트엔드 깃허브 주소를 입력해주세요!\"\n                _onChange={e => {\n                  // console.log(e.target.value);\n                  setFront(e.target.value);\n                }}\n              ></Input>\n            </Grid>\n            <Grid>\n              <Input\n                border=\"1px solid #878787\"\n                height=\"100%\"\n                padding=\"0 0 0 10px\"\n                placeholder=\"백엔드 깃허브 주소를 입력해주세요!\"\n                _onChange={e => {\n                  // console.log(e.target.value);\n                  setBack(e.target.value);\n                }}\n              ></Input>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid display=\"flex\" height=\"15%\" margin=\"20px auto\" width=\"70%\">\n          <Grid>\n            <Button borderRadius=\"25px\" _onClick={submitUrl}>\n              제출하기\n            </Button>\n          </Grid>\n          <Grid>\n            <Button borderRadius=\"25px\" _onClick={modalClose}>\n              다음에제출\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </ModalWrap>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 400px;\n  position: relative;\n`;\n\nexport default SubmitUrl;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ImgType from \"../../shared/ImgType\";\n\nconst Liked = (props) => {\n  const dispatch = useDispatch();\n  const [likes, setLikes] = React.useState();\n  const {\n    modalClose,\n    postId,\n    passdedMenber,\n    isMe,\n    projectStatus,\n    statusCheck,\n    myPage,\n    toggleModal,\n  } = props;\n\n  React.useEffect(() => {\n    setLikes(\n      passdedMenber?.map((stateItem) => {\n        let newStateItem = { ...stateItem, active: false };\n        return newStateItem;\n      })\n    );\n  }, [passdedMenber, projectStatus]);\n\n  //색상 기능 눌렀는지 안눌렀는지 (버튼색상)\n  const toggleLike = (a) => {\n    setLikes((state) => {\n      return state.map((val) => {\n        if (val.userId === Number(a)) {\n          return { ...val, active: !val.active };\n        }\n        return val;\n      });\n    });\n  };\n  // console.log(postId);\n\n  //팀원평가\n  const userLiked = () => {\n    // console.log(likes);\n    // console.log(myPage);\n    const likeMember = likes.filter((user) => user.active == true);\n    const result = likeMember.map((a) => a.userId);\n    const likeUsers = {\n      userIds: result,\n    };\n    // console.log(likeUsers);\n    if (!myPage) {\n      dispatch(applyCreators.starterLikeAPI(postId, likeUsers));\n      modalClose(\"종료\");\n      return;\n    }\n    console.log(\"여기4\");\n\n    dispatch(applyCreators.starterLikeAPI(postId, likeUsers));\n    toggleModal();\n    props.doSetAssessment();\n    return;\n  };\n  // console.log(likes);\n\n  return (\n    <>\n      {likes && (\n        <Grid _onClick={(e) => e.stopPropagation()}>\n          <ModalWrap>\n            <Grid height=\"10%\" position=\"relative\">\n              <Grid\n                position=\"absolute\"\n                top=\"0px\"\n                right=\"10px\"\n                width=\"20px\"\n                padding=\"10px\"\n              >\n                <CloseIcon\n                  fontSize=\"large\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    modalClose();\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid\n              margin=\"auto\"\n              height=\"90%\"\n              // justifyContent=\"center\"\n              width=\"90%\"\n              alignItems=\"center\"\n              textAlign=\"center\"\n            >\n              <Grid height=\"10%\" textAlign=\"center\">\n                <Text size=\"30px\" bold=\"bold\">\n                  프로젝트 마감\n                </Text>\n              </Grid>\n\n              <Grid height=\"14%\" margin=\"10px 0\">\n                <Text size=\"14px\">\n                  프로젝트는 어떠셨나요? <br /> 각 팀원들이 어떠셨는지\n                  평가해주시면 추천알고리즘이 정교해집니다.\n                </Text>\n              </Grid>\n              {/* 유저평가부분 */}\n\n              <Grid height=\"50%\" width=\"90%\" margin=\"auto\" overflow=\"auto\">\n                {passdedMenber?.map((user, idx) => (\n                  <Grid\n                    margin=\"10px auto\"\n                    height=\"100px\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-around\"\n                    width=\"100%\"\n                    key={user.userId}\n                    {...user}\n                  >\n                    <Grid margin=\"auto\" width=\"20%\">\n                      <ImgType type={passdedMenber[idx].userPropensityType} />\n                    </Grid>\n                    <Grid height=\"100%\" width=\" 70%\" margin=\"auto\">\n                      <Grid display=\"flex\" height=\"60%\" margin=\"auto\">\n                        <Grid\n                          margin=\"auto\"\n                          height=\"50px\"\n                          display=\"flex\"\n                          justifyContent=\"space-between\"\n                          margin=\"auto 20px\"\n                        >\n                          <Grid height=\"100%\" textAlign=\"center\" width=\"60%\">\n                            <Grid\n                              borderRadius=\"20px 0 0 20px\"\n                              bg=\"#172d408f\"\n                              height=\"50%\"\n                              margin=\"0 0 3px 0 \"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <Text size=\"12px\" color=\"#fff\">\n                                닉네임\n                              </Text>\n                            </Grid>\n                            <Grid\n                              borderRadius=\"20px 0 0 20px\"\n                              bg=\"#172d408f\"\n                              height=\"50%\"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <Text size=\"12px\" color=\"#fff\">\n                                타입\n                              </Text>\n                            </Grid>\n                          </Grid>\n                          <Grid\n                            margin=\"auto\"\n                            height=\"100%\"\n                            textAlign=\"center\"\n                            width=\"50%\"\n                          >\n                            <Grid\n                              height=\"50%\"\n                              borderRadius=\"0 20px 20px 0\"\n                              bg=\"#eee\"\n                              margin=\"0 0 3px 0 \"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <Text size=\"12px\">\n                                {passdedMenber[idx].nickname}{\" \"}\n                              </Text>\n                            </Grid>\n                            <Grid\n                              height=\"50%\"\n                              borderRadius=\"0 20px 20px 0\"\n                              bg=\"#eee\"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <Text size=\"12px\">\n                                {passdedMenber[idx].userPropensityType}\n                              </Text>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Grid\n                          margin=\"auto auto auto 1px\"\n                          height=\"50px\"\n                          width=\"70%\"\n                        >\n                          {passdedMenber[idx].userId !== isMe && (\n                            <Button\n                              common\n                              isActive={likes[idx]?.active}\n                              isValue={passdedMenber[idx]?.userId}\n                              _onClick={(e) => {\n                                e.stopPropagation();\n                                // console.log(\n                                //   likes[idx]?.userId,\n                                //   likes[idx].active\n                                // );\n                                toggleLike(e.target.value);\n                              }}\n                            >\n                              좋았어요!\n                            </Button>\n                          )}\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n\n              <Grid height=\"10%\">\n                <Button\n                  borderRadius=\"25px\"\n                  _onClick={(e) => {\n                    e.stopPropagation();\n                    userLiked();\n                  }}\n                >\n                  팀원평가\n                </Button>\n              </Grid>\n            </Grid>\n          </ModalWrap>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nconst ModalWrap = styled.div`\n  margin: 30px auto;\n  width: 550px;\n  height: 100%;\n  position: relative;\n  @media (max-width: 620px) {\n    width: 90%;\n  }\n`;\n\nexport default Liked;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { Grid, Input, Text, Button } from \"../elements/Index\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Apply,\n  Cancel,\n  TeamExit,\n  SubmitUrl,\n  Liked,\n} from \"./applyUserModal/ApplyIndex\";\nconst ApplyUserModal = props => {\n  const {\n    applyUserModal,\n    setApplyUserModal,\n    applyValue,\n    postId,\n    passdedMenber,\n    passedUserStatus,\n    projectStatus,\n    statusCheck,\n    myPage,\n    toggleModal,\n    applyUserModalOpen,\n  } = props;\n  const isMe = useSelector(state => state.user.userId);\n  const [page, setPage] = React.useState(1);\n\n  const modalClose = status => {\n    if (\n      status === \"종료\" ||\n      status === \"신청\" ||\n      status === \"취소\" ||\n      status === \"탈퇴\" ||\n      status === \"제출\"\n    ) {\n      statusCheck(status);\n      // applyUserModalOpen();\n      return setApplyUserModal(false);\n    }\n    // applyUserModalOpen();\n\n    setApplyUserModal(false);\n\n    return;\n  };\n\n  return (\n    <Grid _onClick={e => e.stopPropagation()}>\n      <Dialog\n        maxWidth={\"sm\"}\n        scroll=\"paper\"\n        open={applyUserModal}\n        onClose={e => {\n          e.stopPropagation();\n          modalClose();\n        }}\n      >\n        {applyValue === \"apply\" && (\n          <Apply modalClose={modalClose} postId={postId} />\n        )}{\" \"}\n        {applyValue === \"cancel\" && (\n          <Cancel modalClose={modalClose} postId={postId} />\n        )}\n        {applyValue === \"teamExit\" && (\n          <TeamExit modalClose={modalClose} postId={postId} />\n        )}\n        {applyValue === \"end\" && page === 1 && (\n          <Liked\n            modalClose={modalClose}\n            postId={postId}\n            passdedMenber={passdedMenber}\n            projectStatus={projectStatus}\n            isMe={isMe}\n            page={page}\n            setPage={setPage}\n            statusCheck={statusCheck}\n            doSetAssessment={props.doSetAssessment}\n          />\n        )}\n        {/* {applyValue === \"end\" && page === 2 && (\n          <SubmitUrl modalClose={modalClose} postId={postId} />\n        )} */}\n        {applyValue === \"submit\" && passdedMenber[0].userId === isMe && (\n          <SubmitUrl modalClose={modalClose} postId={postId} />\n        )}\n        {applyValue === \"starterLiked\" && (\n          <Liked\n            modalClose={modalClose}\n            postId={postId}\n            passdedMenber={passdedMenber}\n            isMe={isMe}\n            page={page}\n            setPage={setPage}\n            myPage={myPage}\n            doSetAssessment={props.doSetAssessment}\n          />\n        )}\n        {applyValue === \"memberLiked\" && (\n          <Liked\n            modalClose={modalClose}\n            postId={postId}\n            passdedMenber={passdedMenber}\n            isMe={isMe}\n            page={page}\n            setPage={setPage}\n            myPage={myPage}\n            toggleModal={toggleModal}\n            doSetAssessment={props.doSetAssessment}\n          />\n        )}\n      </Dialog>\n    </Grid>\n  );\n};\n\nexport default React.memo(ApplyUserModal);\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PostStacks from \"./PostStacks\";\r\nimport ApplyUserModal from \"./ApplyUserModal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { apis } from \"../lib/axios\";\r\nimport { history } from \"../redux/configureStore\";\r\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Post의 함수형 컴포넌트를 만든다.\r\nconst Post = props => {\r\n  // console.log(props);\r\n  // console.log(props);\r\n  const dispatch = useDispatch();\r\n  const myPage = useSelector(state => state.post.whatPage.now);\r\n  // const myUserId = useSelector((state) => state.user.userId);\r\n  const userId = Number(props.userId.id);\r\n  const myUserId = Number(props.myUserId);\r\n  const [applyUserModal, setApplyUserModal] = React.useState(false); //지원취소/팀탈퇴/프로젝트마감\r\n  const [applyValue, setApplyValue] = React.useState();\r\n  const [member, setMember] = React.useState();\r\n  const [assessment, setAssessment] = React.useState(\r\n    props.memberIdAndAssessment[myUserId]\r\n  );\r\n\r\n  let totalmember = props.totalMember;\r\n  let recruitmentMember = props.recruitmentMember;\r\n  let isWriter = props.writerEquals;\r\n\r\n  const modalOpen = (value, postId) => {\r\n    setApplyValue(value);\r\n    setApplyUserModal(!applyUserModal);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setApplyUserModal(!applyUserModal);\r\n  };\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (myPage !== \"myPage\") {\r\n      return;\r\n    }\r\n    let postId = props.postId;\r\n    const getMembers = async () => {\r\n      try {\r\n        const result = await apis.getMember(postId);\r\n        // console.log(\"호출되나\", result);\r\n        setMember(result.data.data);\r\n      } catch (err) {\r\n        // console.log(err.response);\r\n      }\r\n    };\r\n    getMembers();\r\n  }, [assessment, props.assessment]);\r\n\r\n  React.useLayoutEffect(() => {}, [assessment]);\r\n  // let as = member?.find((e) => e.userId === myUserId);\r\n  // console.log(assessment);\r\n  // console.log(typeof myUserId);\r\n  // console.log(isWriter);\r\n  // console.log(props);\r\n  // console.log(member);\r\n\r\n  // console.log(as);\r\n  // console.log(myPage, myUserId);\r\n\r\n  const didAssessment = e => {\r\n    e.stopPropagation();\r\n    // console.log(e.target.value, props.postId);\r\n    modalOpen(e.target.value, props.postId);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ProductImgWrap\r\n        onClick={() => {\r\n          history.push({\r\n            pathname: `/postdetail/${props.postId}`,\r\n          });\r\n        }}\r\n      >\r\n        {props.mypage &&\r\n          userId === myUserId &&\r\n          props.projectStatus === \"종료\" &&\r\n          !isWriter &&\r\n          !assessment && (\r\n            <Grid\r\n              bg=\"#111\"\r\n              width=\"100%\"\r\n              position=\"absolute\"\r\n              zIndex=\"11\"\r\n              borderRadius=\"20px\"\r\n              opacity=\"0.8\"\r\n              display=\"flex\"\r\n            >\r\n              <Button\r\n                isValue=\"memberLiked\"\r\n                backgroundColor=\"#fff\"\r\n                width=\"50%\"\r\n                color=\"#111\"\r\n                hoverBg=\"#2699FB\"\r\n                hoverCl=\"#fff\"\r\n                _onClick={e => {\r\n                  didAssessment(e);\r\n                }}\r\n              >\r\n                팀원평가하기\r\n              </Button>\r\n              <Grid width=\"0px\" height=\"0px\">\r\n                <ApplyUserModal\r\n                  applyUserModal={applyUserModal}\r\n                  setApplyUserModal={setApplyUserModal}\r\n                  applyValue={applyValue}\r\n                  passdedMenber={member}\r\n                  postId={props.postId}\r\n                  myPage={props.mypage}\r\n                  toggleModal={toggleModal}\r\n                  doSetAssessment={props.doSetAssessment}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        {/* 전체크기 */}\r\n        <DDescriptionBox>\r\n          <CardHeader\r\n            projectStatus={props.projectStatus}\r\n            id=\"headerOne\"\r\n            className=\"headerOne\"\r\n          >\r\n            <Grid>{/* <TitleDate>D-2</TitleDate> */}</Grid>\r\n            <Grid\r\n              position=\"relative\"\r\n              zIndex=\"10\"\r\n              display=\"flex\"\r\n              width=\"80%\"\r\n              margin=\"auto\"\r\n            >\r\n              {props.techStack.map((p, idx) => {\r\n                return (\r\n                  <Grid margin=\"4% 0 0 -1% \" width=\"20%\" key={idx}>\r\n                    <PostStacks stack={p}></PostStacks>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </CardHeader>\r\n\r\n          <DescriptionBox>\r\n            <ProjectState projectStatus={props.projectStatus}>\r\n              <Text>{props.projectStatus}</Text>\r\n            </ProjectState>\r\n\r\n            <Title>{props.title}</Title>\r\n            {/* <Summary>{props.summary}</Summary> */}\r\n            <Date>\r\n              {props.startDate} ~ {props.endDate}\r\n            </Date>\r\n\r\n            {/* 프로그래스바 */}\r\n            <Grid\r\n              display=\"flex\"\r\n              width=\"100%\"\r\n              justifyContent=\"space-between\"\r\n              height=\"20%\"\r\n            >\r\n              <ProgressBar projectStatus={props.projectStatus}>\r\n                <HighLight\r\n                  projectStatus={props.projectStatus}\r\n                  width={(recruitmentMember / totalmember) * 100 + \"%\"}\r\n                />\r\n              </ProgressBar>\r\n              <Grid width=\"43%\" textAlign=\"right\">\r\n                <Text size=\"12px\" margin=\"0 0 0 10px\" bold=\"500\">\r\n                  {recruitmentMember + \"/\" + totalmember} 명 참여중\r\n                </Text>\r\n              </Grid>\r\n            </Grid>\r\n            {/* 프로그래스바까지 */}\r\n          </DescriptionBox>\r\n        </DDescriptionBox>\r\n      </ProductImgWrap>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst DescriptionBox = styled.div`\r\n  position: relative;\r\n  margin: 25px 20px;\r\n  padding: 10px;\r\n  height: 60%;\r\n`;\r\nconst DDescriptionBox = styled.div`\r\n  /* background-color: #fff5f9; */\r\n  border-radius: 21px;\r\n  margin: auto;\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\n//카드 헤더\r\nconst CardHeader = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 55px;\r\n  border-radius: 21px 21px 0px 0px;\r\n  background-color: #ecc0f1;\r\n  ${props => props.projectStatus === \"모집중\" && `background-color: #17334A;`};\r\n  ${props => props.projectStatus === \"진행중\" && `background-color: #17334A;`};\r\n  ${props => props.projectStatus === \"종료\" && `background-color: #878787;`};\r\n`;\r\n\r\n//헤더 까지\r\n\r\nconst Title = styled.span`\r\n  margin-top: 8%;\r\n  margin-bottom: 14%;\r\n  font-size: 20px;\r\n  width: 100%;\r\n  font-weight: 500;\r\n  /* white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: #606060; */\r\n  white-space: normal;\r\n  line-height: 1.2;\r\n  height: 2.4em;\r\n  text-align: left;\r\n  word-wrap: break-word;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n`;\r\n\r\nconst Date = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  margin: 8% auto 15% auto;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  text-overflow: ellipsis;\r\n  @media (max-width: 750px) {\r\n    font-size: 14px;\r\n    margin-left: 0%;\r\n  }\r\n  @media (max-width: 450px) {\r\n    font-size: 10px;\r\n    margin: 0% auto 1% auto;\r\n  }\r\n`;\r\n\r\nconst ProjectState = styled.div`\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  width: 58px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  height: 24px;\r\n  margin: 4% 0;\r\n  padding: 1% 0 0 0;\r\n  font-size: 13px;\r\n  ${props => props.projectStatus === \"모집중\" && `background-color: #2699FB;`};\r\n  ${props => props.projectStatus === \"진행중\" && `background-color: #15B915;`};\r\n  ${props => props.projectStatus === \"종료\" && `background-color: #878787;`};\r\n  @media (max-width: 450px) {\r\n    margin: 0 0 10% 0;\r\n  }\r\n`;\r\n\r\nconst ProductImgWrap = styled.div`\r\n  cursor: pointer;\r\n  z-index: 1;\r\n  position: relative;\r\n  background-color: white;\r\n  width: 330px;\r\n  height: 330px;\r\n  max-width: 350px;\r\n  margin: 30px auto;\r\n  border-radius: 20px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.12), 0 2px 5px rgba(0, 0, 0, 0.24);\r\n  transition: all 0.2s linear;\r\n  :hover {\r\n    transform: scale(1.03);\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    margin: auto;\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n    width: 270px;\r\n    height: 270px;\r\n  }\r\n`;\r\n//프로그래스바\r\nconst ProgressBar = styled.div`\r\n  border: 1px solid #111;\r\n  background: #f6f4f6;\r\n  width: 55%;\r\n  height: 15px;\r\n  border: none;\r\n  ${props => props.projectStatus === \"모집중\" && `background-color: #BCE0FD;`};\r\n  ${props => props.projectStatus === \"진행중\" && `background-color: #DFDFDF;`};\r\n  ${props => props.projectStatus === \"종료\" && `background-color: #DFDFDF;`};\r\n`;\r\n\r\nconst HighLight = styled.div`\r\n  transition: 1s;\r\n  width: ${props => props.width};\r\n  ${props => props.projectStatus === \"모집중\" && `background-color: #2699FB;`};\r\n  ${props => props.projectStatus === \"진행중\" && `background-color: #878787 ;`};\r\n  ${props => props.projectStatus === \"종료\" && `background-color: #878787;`};\r\n  height: 15px;\r\n`;\r\n\r\n//프로그래스바 까지\r\n\r\nexport default Post;\r\n","/* eslint-disable */\r\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid width=\"100%\" margin=\"auto\">\r\n        <IMG src=\"/img/호랭이.gif\" alt=\"spinner\"></IMG>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst IMG = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  margin: auto;\r\n`;\r\n\r\nexport default Spinner;\r\n","/* eslint-disable */\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"./Post\";\nimport PostTest from \"./PostTest\";\nimport { postActions } from \"../redux/modules/post\";\nimport styled from \"styled-components\";\n// import { useInView } from \"react-intersection-observer\";\n\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\nimport Spinner from \"../shared/Spinner\";\n\nconst PostList = props => {\n  const dispatch = useDispatch();\n  const [post, setPost] = React.useState();\n  const [allPost, setAllPost] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n\n  // let paging = useSelector((state) => state?.infinity.paging.next);\n  let paging = props.paging;\n  let reBook = useSelector(state => state.rebook.reBook);\n  let sort = useSelector(state => state.sort.sort);\n  let post_list = useSelector(state => state.post.posts);\n  let stacks = useSelector(state => state.stack.stacks);\n  let Render = props.Render;\n  let isLogin = props.isLogin;\n\n  // let stacks = props.stacks;\n  // console.log(stackss);\n\n  const findStack = item => {\n    const itemStack = item.techStack;\n    if (stacks) {\n      for (let i = 0; i < stacks.length; i++) {\n        for (let j = 0; j < itemStack.length; j++) {\n          if (stacks[i] === itemStack[j]) {\n            return true;\n          }\n        }\n      }\n    }\n  };\n\n  // let post_list = props.post;\n  React.useEffect(() => {\n    setPost();\n    if (stacks.length !== 0) {\n      const postList = props.post.filter(findStack);\n      let posts = postList.slice(0, paging);\n      setPost(posts);\n    }\n    if (stacks.length === 0) {\n      let posts = props.post.slice(0, paging);\n      setPost(posts);\n    }\n    setLoading(false);\n  }, [stacks, paging, sort, reBook, Render, isLogin]);\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          {post && (\n            <>\n              <PostWrap>\n                {post.map(item => {\n                  return <Post key={item.postId} {...item} />;\n                })}\n              </PostWrap>\n              {post.length === 0 && (\n                <Grid justifyContent=\"center\" margin=\"10px auto\" width=\"100%\">\n                  <NoIntroduction src=\"/img/너구리.png\"></NoIntroduction>\n                  <NoIntroductionText>\n                    아직 포스트가 없습니다.\n                  </NoIntroductionText>\n                </Grid>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst PostWrap = styled.div`\n  max-width: 100%;\n  margin: auto;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n  row-gap: 5px;\n  column-gap: 5px;\n  /* grid-gap: 1px; */\n  @media (max-width: 420px) {\n    grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\n    row-gap: 5px;\n    column-gap: 5px;\n  }\n`;\nconst NoIntroduction = styled.img`\n  width: 500px;\n  margin: auto;\n  display: flex;\n  justify-content: center;\n  @media screen and (max-width: 600px) {\n    width: 100px;\n    height: 100px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst NoIntroductionText = styled.p`\n  color: #737373;\n  font-size: 25px;\n  text-align: center;\n`;\n\nexport default PostList;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Button, Input, Text } from \"../elements/Index\";\nimport styled from \"styled-components\";\nimport { Dialog } from \"@material-ui/core\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { apis } from \"../lib/axios\";\nimport Swal from \"sweetalert2\";\n\nconst EmailAuth = (props) => {\n  const [email, setEmail] = React.useState();\n  const { modal, setModal } = props;\n  // console.log(props);\n  const modalClose = () => {\n    setModal(false);\n  };\n\n  const EmailInput = (data) => {\n    setEmail(data);\n  };\n\n  const EmailSend = () => {\n    const fetchData = async () => {\n      const result = await apis.authEmail(email);\n      try {\n        props.setModal();\n        // window.alert(result.data.msg);\n        Swal.fire(`${result.data.msg}`, \"\", \"success\");\n      } catch (err) {\n        // console.log(err.response);\n      }\n    };\n    fetchData();\n  };\n  return (\n    <Dialog maxWidth={\"sm\"} scroll=\"paper\" open={modal} onClose={modalClose}>\n      <ModalWrap>\n        <Grid>\n          {/* 헤더 */}\n          <Grid\n            width=\"100%\"\n            height=\"13%\"\n            // bg=\"#B29CF4\"\n            position=\"relative\"\n            textAlign=\"center\"\n            padding=\"10px 0 10px 0\"\n          >\n            <Grid\n              position=\"absolute\"\n              top=\"0px\"\n              right=\"20px\"\n              width=\"20px\"\n              padding=\"10px\"\n            >\n              <CloseIcon fontSize=\"large\" onClick={modalClose} />\n            </Grid>\n            <Grid margin=\"20px 0 0 0\">\n              <Text size=\"30px\" bold=\"bold\" color=\"#08061D\">\n                이메일 인증\n              </Text>\n            </Grid>\n          </Grid>\n          {/* 내용작성 */}\n          <Grid height=\"45%\">\n            <Dec>이메일 인증을 하고 이메일 알림을 받아 보세요!</Dec>\n\n            <Input\n              padding=\"10px\"\n              placeholder=\"이메일을 입력해 주세요.\"\n              margin=\"10px 0 0 16%\"\n              fontSize=\"15px\"\n              border=\"1px solid #C9C9C9\"\n              borderRadius=\"8px\"\n              width=\"70%\"\n              height=\"40px\"\n              _onChange={(e) => {\n                EmailInput(e.target.value);\n              }}\n            ></Input>\n\n            <Button\n              width=\"70%\"\n              height=\"50px\"\n              margin=\"-90px 0 0 16%\"\n              _onClick={() => {\n                EmailSend();\n              }}\n            >\n              인증하기\n            </Button>\n          </Grid>\n        </Grid>\n      </ModalWrap>\n    </Dialog>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 500px;\n  height: 300px;\n  border-radius: 20px;\n  @media screen and (max-width: 560px) {\n    width: 300px;\n    height: 280px;\n  } ;\n`;\nconst Dec = styled.p`\n  color: #08061d;\n  font-size: 14px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n`;\n\nexport default EmailAuth;\n","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport \"./MainSlide.css\";\nimport { history } from \"../../redux/configureStore\";\nimport styled from \"styled-components\";\nimport Slider from \"react-slick\";\n\nimport PropensityTest from \"../propensityTest/PropensityTest\";\nimport LoginModal from \"../LoginModal\";\nimport { Dialog } from \"@material-ui/core\";\nimport Slide from \"./SlideData.json\";\nimport EmailAuth from \"../EmailAuth\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst MainSlide = () => {\n  const [imageIndex, setImageIndex] = useState(0);\n  const [showModal, setShowModal] = React.useState(false);\n  const [loginShowModal, setLoginShowModal] = React.useState(false);\n  const [emailShowModal, setEmailShowModal] = React.useState(false);\n  const userInfo = useSelector(state => state.user);\n  const isToken = document.cookie;\n\n  const history = useHistory();\n\n  const NextArrow = ({ onClick }) => {\n    return (\n      <div className=\"arrow next\" onClick={onClick}>\n        <KeyboardArrowRightIcon sx={{ color: \"transparent\", fontSize: 10 }} />\n      </div>\n    );\n  };\n\n  const PrevArrow = ({ onClick }) => {\n    return (\n      <div className=\"arrow prev\" onClick={onClick}>\n        <KeyboardArrowLeftIcon sx={{ color: \"transparent\", fontSize: 10 }} />\n      </div>\n    );\n  };\n\n  const settings = {\n    dots: true, //화면아래 컨텐츠 갯수 표시\n    autoplay: true, // 자동 스크롤 사용 여부\n    autoplaySpeed: 5000, // 자동 스크롤 시 다음으로 넘어가는데 걸리는 시간 (ms)\n    draggable: true, //드래그 가능 여부\n    infinite: true, //무한반복옵션\n    lazyLoad: true,\n    speed: 400, //다음버튼 누르고 다음화면 뜨는데까지 걸리는 시간\n    slidesToShow: 1, //화면에 보여질 개수\n    centerMode: true, //활성화 된 슬라이드 가운데 배치\n    centerPadding: 0, //center 슬라이드 패딩값\n    nextArrow: <NextArrow />, //다음 화살표 모양 설정\n    prevArrow: <PrevArrow />, //다음 화살표 모양 설정\n    // beforeChange: (current, next) => setImageIndex(next), // beforeChange(slick, currentSlide)\t슬라이드 전 호출\n    // responsive: [\n    //   //반응형웹구현 옵션\n    //   {\n    //     breakpoint: 768, //화면사이즈\n    //     settings: {\n    //       centerMode: true,\n    //       centerPadding: \"40px\",\n    //       slidesToShow: 1,\n    //     },\n    //   },\n    // ],\n  };\n\n  const ClickEvent = item => {\n    if (!isToken && item.division !== null) {\n      setLoginShowModal(true);\n    }\n    if (item.division === \"test\" && isToken) {\n      setShowModal(true);\n    }\n    if (item.division === \"email\" && isToken) {\n      setEmailShowModal(true);\n    }\n    if (item.division === \"mypage\" && isToken) {\n      history.push(`/mypage/${userInfo.userId}`);\n    }\n  };\n\n  const TestClose = () => {\n    setShowModal(false);\n  };\n  const EmailClose = () => {\n    setEmailShowModal(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"Container\" style={{ width: \"100%\" }}>\n        <Slider {...settings}>\n          {Slide.slide.map(item => (\n            <div key={item.id} className=\"slide\">\n              <img\n                src={item.img}\n                alt={item.img}\n                onClick={() => {\n                  ClickEvent(item);\n                }}\n              />\n            </div>\n          ))}\n        </Slider>\n        <Dialog\n          maxWidth={\"sm\"}\n          scroll=\"paper\"\n          open={showModal}\n          onClose={TestClose}\n        >\n          <SignupModalWrap>\n            <PropensityTest TestClose={TestClose} />\n          </SignupModalWrap>\n        </Dialog>\n        <LoginModal\n          showModal={loginShowModal}\n          setShowModal={setLoginShowModal}\n        />\n        <EmailAuth\n          modal={emailShowModal}\n          setModal={setEmailShowModal}\n          EmailClose={EmailClose}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst SignupModalWrap = styled.div`\n  height: 100%;\n  width: 550px;\n  @media (max-width: 650px) {\n    width: 310px;\n    font-size: 11px;\n  }\n`;\n\nexport default MainSlide;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Button } from \"../../elements/Index\";\r\nconst SortText = (props) => {\r\n  //   console.log(\"소트\", props);\r\n  return (\r\n    <Filtering\r\n      id={props.item.id}\r\n      active={props.item.active}\r\n      onClick={() => {\r\n        props.onClick();\r\n      }}\r\n    >\r\n      {props.item.id}\r\n    </Filtering>\r\n  );\r\n};\r\n\r\nconst Filtering = styled.p`\r\n  margin: 25px 10px 25px 10px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  border-bottom: ${(props) =>\r\n    props.active ? \"1mm ridge rgb(170, 50, 220, .6)\" : null};\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    -webkit-transform: scale(1.05);\r\n    -moz-transform: scale(1.05);\r\n    -ms-transform: scale(1.05);\r\n    -o-transform: scale(1.05);\r\n    /* text-decoration: underline; */\r\n    color: #dacceb;\r\n  }\r\n`;\r\nexport default SortText;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport SortText from \"./SortText\";\r\nimport { Grid, Button } from \"../../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport { postActions } from \"../../redux/modules/post\";\r\nimport { sortAction } from \"../../redux/modules/sort\";\r\nimport { bookRecommendAction } from \"../../redux/modules/bookRecommend\";\r\nimport { pageAction } from \"../../redux/modules/infinity\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Sort = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isLoginUser = useSelector((state) => state.user.userId);\r\n  const [clickCheck, setClickCheck] = React.useState();\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"최신\",\r\n      status: \"createdAt\",\r\n      active: true,\r\n    },\r\n    {\r\n      id: \"마감순\",\r\n      status: \"deadline\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"북마크\",\r\n      status: \"bookmark\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"추천\",\r\n      status: \"recommend\",\r\n      active: false,\r\n    },\r\n  ]);\r\n\r\n  const onclickSort = (data) => {\r\n    // console.log(\"최신 마감순\", data);\r\n    dispatch(postActions.isMainPage(true));\r\n    dispatch(sortAction.getSort(data));\r\n    dispatch(bookRecommendAction.getRb(\"\"));\r\n    props.setPaging(12);\r\n  };\r\n  //bookmark,recommend\r\n  const onclickRb = (data) => {\r\n    // console.log(\"북마크 추천\", data);\r\n    dispatch(postActions.isMainPage(true));\r\n    dispatch(bookRecommendAction.getRb(data));\r\n    dispatch(sortAction.getSort(\"\"));\r\n    // if (paging > 0) {\r\n    //   setPaging(paging - 1);\r\n    // }\r\n    props.setPaging(12);\r\n  };\r\n\r\n  const Filter = (getItem) => {\r\n    if (!isLoginUser && (getItem.id === \"북마크\" || getItem.id === \"추천\")) {\r\n      return;\r\n    }\r\n    if (clickCheck === getItem.id) {\r\n      return;\r\n    }\r\n    const checked = arr.find((e) => e.active === true);\r\n    // console.log(\"ddddd\", checked);\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id === getItem.id) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id !== getItem.id && stateItem.active === true) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {arr && (\r\n        <FilterBox>\r\n          {arr.map((item) => {\r\n            return (\r\n              <SortText\r\n                item={item}\r\n                key={item.id}\r\n                page={props.page}\r\n                onClick={() => {\r\n                  Filter(item);\r\n                  if (item.id === \"최신\" || item.id === \"마감순\") {\r\n                    onclickSort(item.status);\r\n                  }\r\n                  if (\r\n                    isLoginUser &&\r\n                    (item.id === \"북마크\" || item.id === \"추천\")\r\n                  ) {\r\n                    onclickRb(item.status);\r\n                  }\r\n                  if (\r\n                    !isLoginUser &&\r\n                    (item.id === \"북마크\" || item.id === \"추천\")\r\n                  ) {\r\n                    // console.log(\"나는 유저\", isLoginUser);\r\n                    Swal.fire(\r\n                      \"로그인 후 이용하실 수 있습니다!\",\r\n                      \"로그인하고 프로젝트를 추천받아 보세요!\",\r\n                      \"warning\"\r\n                    );\r\n                  }\r\n                  setClickCheck(item.id);\r\n                }}\r\n              ></SortText>\r\n            );\r\n          })}\r\n        </FilterBox>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst FilterBox = styled.div`\r\n  display: flex;\r\n  font-size: 20px;\r\n  margin: 10px auto;\r\n  justify-content: flex-end;\r\n  width: 75%;\r\n  max-width: 1920px;\r\n  @media screen and (max-width: 1850px) {\r\n    justify-content: center;\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    justify-content: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\nexport default Sort;\r\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header\";\nimport TopBanner from \"../components/carousel/TopBanner\";\nimport { Grid, Button } from \"../elements/Index\";\nimport Stack from \"../components/Stack\";\nimport PostList from \"../components/PostList\";\nimport { postActions } from \"../redux/modules/post\";\nimport { sortAction } from \"../redux/modules/sort\";\nimport { bookRecommendAction } from \"../redux/modules/bookRecommend\";\nimport { pageAction } from \"../redux/modules/infinity\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MainSlide from \"../components/carousel/MainSlide\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Tune } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router\";\nimport Sort from \"../components/filter/Sort\";\nimport { apis } from \"../lib/axios\";\nimport useScrollMove from \"../components/useScrollMove\";\nimport Spinner from \"../shared/Spinner\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nconst MainPage = () => {\n  // const { scrollOnceMove } = useScrollMove();\n  // let refs = React.useRef();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const stack = useSelector((state) => state.stack.stack);\n  const sortC = useSelector((state) => state.sort.sort);\n  const isToken = document.cookie;\n  // const cards = useSelector((state) => state.post.posts);\n  const reBookC = useSelector((state) => state.rebook.reBook);\n  const pageCheck = useSelector((state) => state.post.pageCheck);\n  const infinity = useSelector((state) => state.infinity.paging);\n  const Render = useSelector((state) => state.post.render);\n  const [ref, inView] = useInView();\n  const [paging, setPaging] = React.useState(infinity.next);\n  const [pPaging, setPPaging] = React.useState(12);\n  const [nowFilter, setNowFilter] = React.useState(\"최신\");\n  const [post, setPost] = React.useState();\n\n  //프론트쪽에서 필터\n  const [stacks, setStacks] = React.useState([]);\n  const [sorts, setSrots] = React.useState();\n  const [reBooks, setReBookss] = React.useState();\n\n  const postList = useSelector((state) => state.post.posts);\n  const isLoginUser = useSelector((state) => state.user.userId);\n  const isLogin = useSelector((state) => state.user.isLogin);\n\n  // let container = React.useRef();\n  React.useLayoutEffect(() => {\n    setPost();\n    dispatch(postActions.whatPage(\"mainPage\"));\n\n    const fetchData = async () => {\n      try {\n        const result = await apis.getPost(stack, sortC, reBookC);\n        setPost(result.data.data);\n        // console.log(result);\n        // container.current.scrollTo(0, lastScroll);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n  }, [sortC, reBookC, Render, isToken, Render, isLogin]);\n\n  React.useEffect(() => {\n    if (inView === true) {\n      // setPaging(paging + 12);\n      setPPaging(pPaging + 12);\n      // console.log(\"내가 페이지\", infinity);\n      // dispatch(pageAction.getPage(paging));\n      if (postList.length === 0 && pageCheck === false) {\n        dispatch(postActions.pageCheck(true));\n      }\n    } // 옵저버를 좀 더 위로\n    // console.log(pPaging);\n  }, [inView]);\n\n  React.useLayoutEffect(() => {\n    setPost();\n    dispatch(postActions.whatPage(\"mainPage\"));\n\n    const fetchData = async () => {\n      try {\n        const result = await apis.getPost(stack, sortC, reBookC);\n        setPost(result.data.data);\n        // console.log(result);\n        // container.current.scrollTo(0, lastScroll);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n  }, [sortC, reBookC, Render, isToken, Render, isLogin]);\n\n  const goPage = () => {\n    window.open(\n      \"https://docs.google.com/forms/u/0/d/e/1FAIpQLSfl6t0O_P5mXR6wo1cqIZ7TWkYduTkZiNlx0r5HynoArgS9Tg/formResponse\",\n      \"_blank\"\n    );\n  };\n\n  const ScrollTop = () => {\n    window.scrollTo({\n      behavior: \"smooth\",\n      left: 0,\n      top: 0,\n    });\n  };\n\n  return (\n    <OutWrap>\n      {/* <Grid\n        maxWidth=\"1400px\"\n        height=\"100%\"\n        bg=\"#ffff\"\n        padding=\"0px 0px 10px 0\"\n      ></Grid> */}\n      <Grid margin=\"0px 0 0 0 \">\n        <Inside>\n          <MainSlide />\n          <Stacks>\n            <Stack\n              do={\"StacksComponent\"}\n              setStacks={setStacks}\n              stacks={stacks}\n            />\n          </Stacks>\n          <Sort setPaging={setPaging} page=\"mainPage\"></Sort>\n          {post && (\n            <>\n              <InsideCard>\n                <PostList\n                  post={post}\n                  paging={pPaging}\n                  stacks={stacks}\n                  Render={Render}\n                  isLogin={isLogin}\n                ></PostList>\n              </InsideCard>\n\n              {nowFilter !== \"bookmark\" && (\n                <Grid margin=\"-550px 0 0 0\">\n                  <div\n                    ref={ref}\n                    style={{\n                      height: \"500px\",\n                      backgroundColor: \"white\",\n                    }}\n                  ></div>\n                </Grid>\n              )}\n            </>\n          )}\n          {!post && (\n            <SpinnerLocation>\n              <Spinner />\n            </SpinnerLocation>\n          )}\n          <Scrollup\n            onClick={() => {\n              ScrollTop();\n            }}\n          >\n            <ArrowUpwardIcon\n              sx={{ fontSize: \"60px\", color: \"#c4c4c4\" }}\n            ></ArrowUpwardIcon>\n          </Scrollup>\n          {isLoginUser && (\n            <Btn\n              onClick={() => {\n                history.push(\"/postadd\");\n              }}\n            >\n              <i\n                style={{\n                  fontSize: \"25px\",\n                  margin: \"auto\",\n                  color: \"white\",\n                }}\n                className=\"fas fa-plus\"\n              ></i>\n            </Btn>\n          )}\n\n          <BtnFeedback\n            src=\"/img/FeedbackBox.png\"\n            onClick={() => {\n              goPage();\n            }}\n          ></BtnFeedback>\n        </Inside>\n        <Grid height=\"600px\"></Grid>\n      </Grid>\n    </OutWrap>\n  );\n};\nconst OutWrap = styled.div`\n  max-width: 1400px;\n  width: 100%;\n  margin: auto;\n`;\n\nconst Inside = styled.div`\n  @media screen and (max-width: 750px) {\n  } ;\n`;\n\nconst InsideCard = styled.div`\n  margin: 10px auto;\n  width: 75%;\n  max-width: 1920px;\n  @media screen and (max-width: 750px) {\n    margin: auto;\n  } ;\n`;\n\nconst Stacks = styled.div`\n  display: flex;\n  font-size: 50px;\n  margin-top: 20px;\n`;\n\nconst Btn = styled.button`\n  position: fixed;\n  bottom: 70px;\n  border: 1px solid #c4c4c4;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  right: 50px;\n  margin: auto;\n  background: #c4c4c4;\n  cursor: pointer;\n  z-index: 999;\n  &:hover {\n    background: #172d40;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n\n  @media screen and (max-width: 750px) {\n    position: fixed;\n    display: none;\n    border: 1px solid #42309b;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    text-align: center;\n    right: 5px;\n    bottom: 5px;\n    margin: auto;\n    background: #42309b;\n    cursor: pointer;\n    z-index: 999;\n  } ;\n`;\n\nconst BtnFeedback = styled.img`\n  position: fixed;\n  bottom: 70px;\n  /* border: 1px solid #c4c4c4; */\n  /* border-radius: 50%; */\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  left: 50px;\n  margin: auto;\n  /* background: #c4c4c4; */\n  cursor: pointer;\n  z-index: 999;\n  transition: all ease 0.3s;\n  &:hover {\n    transform: rotate(45deg);\n  }\n\n  @media screen and (max-width: 767px) {\n    position: fixed;\n\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    left: 5px;\n    bottom: 120px;\n    margin: auto;\n    cursor: pointer;\n    z-index: 999;\n  } ;\n`;\n\nconst SpinnerLocation = styled.div`\n  margin: -250px 0 0 0;\n  @media screen and (max-width: 767px) {\n    margin: 0px 0 0 0;\n  } ;\n`;\n\nconst Scrollup = styled.div`\n  background-color: transparent;\n  border-radius: 50px;\n\n  position: fixed;\n  bottom: 150px;\n  /* border: 1px solid #c4c4c4; */\n  /* border-radius: 50%; */\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  right: 50px;\n  margin: auto;\n  /* background: #c4c4c4; */\n  cursor: pointer;\n  z-index: 999;\n\n  @media screen and (max-width: 767px) {\n    /* position: fixed;\n\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    right: 25px;\n    bottom: 120px;\n    margin: auto;\n    cursor: pointer;\n    z-index: 999; */\n    display: none;\n  } ;\n`;\n\nexport default MainPage;\n","/* eslint-disable */\nimport React from \"react\";\n\nimport { userCreators } from \"../redux/modules/user\";\nimport Spinner from \"./Spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst KakaoRedirect = (props) => {\n  const dispatch = useDispatch();\n  const pageGo = useSelector((state) => state.pagecheck);\n\n  // 인가코드\n  let code = new URL(window.location.href).searchParams.get(\"code\");\n\n  React.useEffect(() => {\n    if (pageGo) {\n      // console.log(pageGo);\n      dispatch(userCreators.kakaologinMiddleware(code, pageGo));\n    }\n  }, []);\n\n  return <Spinner />;\n};\n\nexport default KakaoRedirect;\n","/* eslint-disable */\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { userCreators } from \"../redux/modules/user\";\nimport Spinner from \"./Spinner\";\n\nconst KakaoRedirect = (props) => {\n  const dispatch = useDispatch();\n\n  // 인가코드\n  let code = new URL(window.location.href).searchParams.get(\"code\");\n\n  React.useEffect(() => {\n    dispatch(userCreators.githubLoginMiddleware(code));\n  }, []);\n\n  return <Spinner />;\n};\n\nexport default KakaoRedirect;\n","/* eslint-disable */\r\nimport React from \"react\";\r\n// import MypagePost from \"./MypagePost\";\r\nimport Post from \"../Post\";\r\nimport { Grid, Image } from \"../../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst MypagePostList = props => {\r\n  // console.log(props);\r\n  const userId = useParams();\r\n\r\n  // console.log(props);\r\n  const mypage = true;\r\n\r\n  const myCards = props.post;\r\n  const newMyCards = Object.values(myCards);\r\n  // console.log(myCards);\r\n  // console.log(newMyCards);\r\n\r\n  return (\r\n    <>\r\n      {newMyCards && (\r\n        <React.Fragment>\r\n          <PostWrap>\r\n            {newMyCards.map(p => {\r\n              return (\r\n                <Post\r\n                  mypage={mypage}\r\n                  key={p.postId}\r\n                  {...p}\r\n                  userId={userId}\r\n                  myUserId={props.myUserId}\r\n                  assessment={props.assessment}\r\n                  doSetAssessment={props.doSetAssessment}\r\n                ></Post>\r\n              );\r\n            })}\r\n          </PostWrap>\r\n        </React.Fragment>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst PostWrap = styled.div`\r\n  width: 750px;\r\n  margin: 0 0 0 38.5%;\r\n  display: grid;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\r\n  grid-gap: 1px;\r\n  @media (max-width: 1200px) {\r\n    grid-gap: 10px;\r\n    margin: auto;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 90vw;\r\n    grid-gap: 10px;\r\n    margin: auto;\r\n  }\r\n  @media (max-width: 420px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\r\n  }\r\n`;\r\n\r\nexport default MypagePostList;\r\n","/* eslint-disable */\r\nimport { Container } from \"@material-ui/core\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\";\r\nimport { Viewer } from \"@toast-ui/react-editor\";\r\n\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ContentPage(props) {\r\n  // console.log(props);\r\n  const textData = props.introduction;\r\n  return (\r\n    <>\r\n      {textData && (\r\n        <>\r\n          <MarkdownWrap>\r\n            <Viewer initialValue={textData} />\r\n          </MarkdownWrap>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst MarkdownWrap = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n`;\r\nexport default ContentPage;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport EmailAuth from \"../EmailAuth\";\r\nconst Banners = (props) => {\r\n  //   console.log(props);\r\n  const [myData, setMyData] = React.useState();\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"LVG\",\r\n      name: \"호랑이\",\r\n      img: \"/img/호랑이배너.jpg\",\r\n      color: \"#eed691\",\r\n    },\r\n    {\r\n      id: \"LVP\",\r\n      name: \"늑대\",\r\n      img: \"/img/늑대배너.jpg\",\r\n      color: \"#afa9a0\",\r\n    },\r\n    {\r\n      id: \"LHG\",\r\n      name: \"여우\",\r\n      img: \"/img/여우배너.jpg\",\r\n      color: \"#e4812a\",\r\n    },\r\n    {\r\n      id: \"LHP\",\r\n      name: \"팬더\",\r\n      img: \"/img/팬더배너.jpg\",\r\n      color: \"#e4812a\",\r\n    },\r\n    {\r\n      id: \"FVG\",\r\n      name: \"토끼\",\r\n      img: \"/img/토끼배너.jpg\",\r\n      color: \"#998fc9\",\r\n    },\r\n    {\r\n      id: \"FVP\",\r\n      name: \"강아지\",\r\n      img: \"/img/강아지배너.jpg\",\r\n      color: \"#e8ddb8\",\r\n    },\r\n    {\r\n      id: \"FHG\",\r\n      name: \"고양이\",\r\n      img: \"/img/고양이배너.jpg\",\r\n      color: \"#6d6e72\",\r\n    },\r\n    {\r\n      id: \"FHP\",\r\n      name: \"물개\",\r\n      img: \"/img/물개배너.jpg\",\r\n      color: \"#a9adb3\",\r\n    },\r\n    {\r\n      id: \"RHP\",\r\n      name: \"너구리\",\r\n      img: \"/img/너구리배너.jpg\",\r\n      color: \"#926D41\",\r\n    },\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    arr.map((item) => {\r\n      if (props.type === item.id) {\r\n        setMyData(item);\r\n      }\r\n    });\r\n    // console.log(myData);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {myData && (\r\n        <BannerAnimals color={myData.color}>\r\n          <BannerImg src={myData.img}></BannerImg>\r\n        </BannerAnimals>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst BannerImg = styled.img`\r\n  object-fit: cover;\r\n`;\r\n\r\nconst BannerAnimals = styled.div`\r\n  width: 100%;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n\r\n  background-color: ${(props) => (props.color ? props.color : \"#white\")};\r\n  z-index: 0;\r\n`;\r\n\r\nexport default Banners;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport ImgType from \"../../../shared/ImgType\";\r\n\r\nconst CardImgs = props => {\r\n  return (\r\n    <div>\r\n      <ImgType\r\n        type={props.myType}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        object_fit=\"cover\"\r\n        position=\"relative\"\r\n\r\n        // right=\"60px\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default CardImgs;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport { Grid, Button, Input, Text } from \"../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { apis } from \"../lib/axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { userCreators } from \"../redux/modules/user\";\r\nimport { deleteCookie } from \"../shared/Cookie\";\r\nimport { useHistory } from \"react-router\";\r\nconst EmailAuth = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { modal, setModal } = props;\r\n  const modalClose = () => {\r\n    setModal(false);\r\n  };\r\n  // console.log(props);\r\n\r\n  const UserDelete = () => {\r\n    const fetchData = async () => {\r\n      const result = await apis.deleteUser(props.userId);\r\n      try {\r\n        // console.log(result);\r\n        // window.alert(result.data.msg);\r\n        Swal.fire(`${result.data.msg}`, \"\", \"info\");\r\n        deleteCookie(\"ScopeUser\");\r\n        history.push(\"/\");\r\n\r\n        dispatch(userCreators.logOut());\r\n        setModal(false);\r\n      } catch (err) {\r\n        console.log(err.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  };\r\n  return (\r\n    <Dialog maxWidth={\"sm\"} scroll=\"paper\" open={modal}>\r\n      <ModalWrap>\r\n        <Grid>\r\n          {/* 헤더 */}\r\n          <Grid\r\n            width=\"100%\"\r\n            height=\"13%\"\r\n            // bg=\"#B29CF4\"\r\n            position=\"relative\"\r\n            textAlign=\"center\"\r\n            padding=\"10px 0 10px 0\"\r\n          >\r\n            <Grid\r\n              position=\"absolute\"\r\n              top=\"0px\"\r\n              right=\"20px\"\r\n              width=\"20px\"\r\n              padding=\"10px\"\r\n            >\r\n              <CloseIcon fontSize=\"large\" onClick={modalClose} />\r\n            </Grid>\r\n            <Grid margin=\"20px 0 0 0\">\r\n              <Text size=\"30px\" bold color=\"#08061D\">\r\n                회원 탈퇴\r\n              </Text>\r\n            </Grid>\r\n          </Grid>\r\n          {/* 내용작성 */}\r\n          <Grid margin=\"60px 0 0 0\">\r\n            <Dec>정말 탈퇴 하시겠습니까?</Dec>\r\n            <Dec>게시자가 회원 탈퇴시 작성된 포스트는 모두 제거됩니다.</Dec>\r\n            <Dec>지원한 프로젝트는 모두 탈퇴됩니다.</Dec>\r\n\r\n            {/* <Grid margin=\"10px 0 0 18%\" width=\"320px\"></Grid> */}\r\n\r\n            <Button\r\n              width=\"320px\"\r\n              // height=\"50px\"\r\n              margin=\"50px 0 0 21%\"\r\n              _onClick={() => {\r\n                UserDelete();\r\n              }}\r\n            >\r\n              회원 탈퇴하기\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </ModalWrap>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ModalWrap = styled.div`\r\n  width: 550px;\r\n  height: 350px;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n`;\r\nconst Dec = styled.p`\r\n  color: #08061d;\r\n  font-size: 14px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  /* margin-top: 80px; */\r\n`;\r\n\r\nexport default EmailAuth;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../../elements/Index\";\r\n\r\nconst CardUserInfo = props => {\r\n  const [techStack, setTeckstack] = React.useState([]);\r\n  const [nickName, setNickName] = React.useState();\r\n  const [email, setEmail] = React.useState();\r\n\r\n  return (\r\n    <div>\r\n      {props.nickName && props.email && (\r\n        <>\r\n          <MyInfoText1>\r\n            <div style={{ width: \"95px\", marginLeft: \"25px\" }}>\r\n              <p>NickName </p>\r\n            </div>\r\n            <div style={{ width: \"100px\" }}>\r\n              <p>{props.nickName}</p>\r\n            </div>\r\n          </MyInfoText1>\r\n          {/* Email */}\r\n          <MyInfoText1>\r\n            <div\r\n              style={{\r\n                width: \"95px\",\r\n                marginLeft: \"25px\",\r\n              }}\r\n            >\r\n              <p>E-mail </p>\r\n            </div>\r\n            <div style={{ width: \"90px\" }}>\r\n              <p style={{ fontWeight: \"bold\" }}>{props.email}</p>\r\n            </div>\r\n          </MyInfoText1>\r\n        </>\r\n      )}\r\n\r\n      {/* 기술 스텍 */}\r\n      <MyInfoText1>\r\n        <div\r\n          style={{\r\n            width: \"95px\",\r\n            marginLeft: \"25px\",\r\n            height: \"150px\",\r\n          }}\r\n        >\r\n          <p>TechStack </p>\r\n        </div>\r\n        {props.techStack && (\r\n          <>\r\n            <div style={{ width: \"120px\" }}>\r\n              {props.techStack?.map((p, idx) => {\r\n                return <p key={idx}>{p}</p>;\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </MyInfoText1>\r\n      <Line></Line>\r\n      {/* 진행 프로젝트 */}\r\n      <MyInfoText2>\r\n        <div style={{ width: \"300px\", marginLeft: \"30px\" }}>\r\n          <p>모집 프로젝트 </p>\r\n        </div>\r\n        <div style={{ width: \"50px\", marginLeft: \"100px\" }}>\r\n          <p>{props.mydata.recruitment.length}</p>\r\n        </div>\r\n      </MyInfoText2>\r\n      {/* 참여 프로젝트 */}\r\n      <MyInfoText2>\r\n        <div style={{ width: \"300px\", marginLeft: \"30px\" }}>\r\n          <p>진행 프로젝트 </p>\r\n        </div>\r\n        <div style={{ width: \"50px\", marginLeft: \"100px\" }}>\r\n          <p>{props.mydata.inProgress.length}</p>\r\n        </div>\r\n      </MyInfoText2>\r\n      {/* 마감 프로젝트 */}\r\n      <MyInfoText2>\r\n        <div style={{ width: \"300px\", marginLeft: \"30px\" }}>\r\n          <p>완료 프로젝트 </p>\r\n        </div>\r\n        <div style={{ width: \"50px\", marginLeft: \"100px\" }}>\r\n          <p>{props.mydata.end.length}</p>\r\n        </div>\r\n      </MyInfoText2>\r\n      {props.mydata?.isMyMypage === true && (\r\n        <>\r\n          <Button\r\n            margin=\"15px auto 15px 30%\"\r\n            height=\"40px\"\r\n            width=\"132px\"\r\n            text=\"프로필 수정하기\"\r\n            _onClick={() => {\r\n              props.onClick();\r\n            }}\r\n          ></Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MyInfoText1 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\nconst MyInfoText2 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n  width: 90%;\r\n`;\r\n\r\nconst Line = styled.hr`\r\n  width: 80%;\r\n  color: black;\r\n`;\r\nexport default CardUserInfo;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport CardImgs from \"./card/CardImgs\";\r\nimport Select from \"react-select\";\r\nimport DeleteUserModal from \"../../modal/DeleteUserModal\";\r\nimport Swal from \"sweetalert2\";\r\nimport { apis } from \"../../lib/axios\";\r\nimport CardUserInfo from \"./card/CardUserInfo\";\r\n\r\nconst MypageCard = (props) => {\r\n  // console.log(props);\r\n  const [editMyProfile, setEditMyProfile] = React.useState(false); //\r\n  const [checkEmail, setCheckEmail] = React.useState();\r\n  const [deleteModal, setDeleteModal] = React.useState(false);\r\n  const [techStack, setTeckstack] = React.useState([]);\r\n  const [nickName, setNickName] = React.useState(props.nickName);\r\n  const [email, setEmail] = React.useState(props.email);\r\n\r\n  const styles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      boxShadow: state.isFocused ? 0 : 0,\r\n      borderWidth: 2,\r\n      minHeight: 40,\r\n      borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\r\n      \"&:hover\": {\r\n        borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\r\n      },\r\n    }),\r\n  };\r\n\r\n  function fn_submit(data) {\r\n    let userData = {\r\n      nickname: nickName,\r\n      // email: email,\r\n      userTechStack: techStack,\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        // console.log(userData);\r\n        const result = await apis.editUserInfo(props.userId, userData);\r\n        // console.log(result);\r\n        setEditMyProfile(false);\r\n        props.onClick2();\r\n        Swal.fire(\"수정 완료!\", \"\", \"success\");\r\n      } catch (err) {\r\n        // console.log(err.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  }\r\n\r\n  const setEditProfile = () => {\r\n    if (nickName.length < 2 || nickName.length > 5) {\r\n      Swal.fire(\"닉네임은 2자~5자 까지 입력 가능합니다.\", \"\", \"warning\");\r\n    }\r\n    if (techStack.length > 8) {\r\n      Swal.fire(\"기술은 7개 까지 선택 가능합니다.\", \"\", \"warning\");\r\n      return;\r\n    }\r\n    fn_submit(email);\r\n  };\r\n  const deleteUser = () => {\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  //테크스택 옵션\r\n  const techStackOption = [\r\n    { value: \"React\", label: \"React\" },\r\n    { value: \"Java\", label: \"Java\" },\r\n    { value: \"JavaScript\", label: \"JavaScript\" },\r\n    { value: \"Python\", label: \"Python\" },\r\n    { value: \"Spring\", label: \"Spring\" },\r\n    { value: \"Node\", label: \"Node\" },\r\n    { value: \"C++\", label: \"C++\" },\r\n    { value: \"Flask\", label: \"Flask\" },\r\n    { value: \"Django\", label: \"Django\" },\r\n    { value: \"Vue\", label: \"Vue\" },\r\n    { value: \"php\", label: \"php\" },\r\n    { value: \"Swift\", label: \"Swift\" },\r\n    { value: \"Kotlin\", label: \"Kotlin\" },\r\n    { value: \"TypeScript\", label: \"TypeScript\" },\r\n  ];\r\n\r\n  return (\r\n    <Cards>\r\n      <CardImgs myType={props.myType} />\r\n\r\n      {props.editMyProfile === false && (\r\n        <CardUserInfo\r\n          editMyProfile={props.editMyProfile}\r\n          setEditMyProfile={props.setEditMyProfile}\r\n          mydata={props.mydata}\r\n          myType={props.myType}\r\n          myUserId={props.myUserId}\r\n          userId={props.userId}\r\n          nickName={props.nickName}\r\n          email={props.email}\r\n          techStack={props.techStack}\r\n          onClick={props.onClick}\r\n        />\r\n      )}\r\n      {props.editMyProfile === true && (\r\n        <>\r\n          {/* 닉네임 */}\r\n          <MyInfoText1>\r\n            <div style={{ width: \"90px\", marginLeft: \"30px\" }}>\r\n              <p>NickName </p>\r\n            </div>\r\n            <div style={{ width: \"150px\", alignItems: \"center\" }}>\r\n              <input\r\n                style={{\r\n                  borderRadius: \"5px\",\r\n                  borderColor: \"#707070\",\r\n                  WebkitAppearance: \"none\",\r\n                  MozAppearance: \"none\",\r\n                  appearance: \"none\",\r\n                  color: \"#707070\",\r\n                  border: \"1px solid #707070\",\r\n                  outlineStyle: \"none\",\r\n                  margin: \"13px 0 0 0\",\r\n                  width: \"150px\",\r\n                  padding: \"7px\",\r\n                }}\r\n                defaultValue={props.nickName}\r\n                onChange={(e) => {\r\n                  setNickName(e.target.value);\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </MyInfoText1>\r\n\r\n          <MyInfoText1>\r\n            <div\r\n              style={{\r\n                width: \"90px\",\r\n                marginLeft: \"30px\",\r\n                height: \"80px\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <p style={{}}>TechStack </p>\r\n            </div>\r\n            <Grid width=\"167px\" margin=\"20px 0 0 0\">\r\n              <Select\r\n                isMulti\r\n                name=\"techStack\"\r\n                options={techStackOption}\r\n                styles={styles}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={(e) => {\r\n                  let techStack = [];\r\n                  let arr = e;\r\n                  let idx = 0;\r\n                  for (idx = 0; idx < e.length; idx++) {\r\n                    techStack.push(arr[idx][\"value\"]);\r\n                  }\r\n                  setTeckstack(techStack);\r\n                  // console.log(techStack);\r\n                }}\r\n              >\r\n                기술스택\r\n              </Select>\r\n            </Grid>\r\n          </MyInfoText1>\r\n          <Line></Line>\r\n          {/* 진행 프로젝트 */}\r\n          <MyInfoText2>\r\n            <div style={{ width: \"150px\", marginLeft: \"30px\" }}></div>\r\n            <div style={{ width: \"50px\", marginLeft: \"100px\" }}></div>\r\n          </MyInfoText2>\r\n          {/* 참여 프로젝트 */}\r\n          <MyInfoText2>\r\n            <div style={{ width: \"150px\", marginLeft: \"30px\" }}></div>\r\n            <div style={{ width: \"50px\", marginLeft: \"100px\" }}></div>\r\n          </MyInfoText2>\r\n          {/* 마감 프로젝트 */}\r\n          <MyInfoText2>\r\n            <div style={{ width: \"150px\", marginLeft: \"30px\" }}></div>\r\n            <div style={{ width: \"50px\", marginLeft: \"100px\" }}></div>\r\n          </MyInfoText2>\r\n\r\n          <div style={{ display: \"flex\" }}>\r\n            <Button\r\n              margin=\"15px auto 15px 6%\"\r\n              height=\"40px\"\r\n              width=\"132px\"\r\n              text=\"프로필 저장하기\"\r\n              _onClick={setEditProfile}\r\n            ></Button>\r\n            <Button\r\n              margin=\"15px auto 15px -4%\"\r\n              height=\"40px\"\r\n              width=\"132px\"\r\n              text=\"취소하기\"\r\n              _onClick={() => {\r\n                props.onClick2();\r\n              }}\r\n            ></Button>\r\n\r\n            <DeleteUserModal\r\n              modal={deleteModal}\r\n              setModal={setDeleteModal}\r\n              userId={props.myUserId}\r\n            />\r\n          </div>\r\n          <Exit onClick={deleteUser}> 회원탈퇴 </Exit>\r\n        </>\r\n      )}\r\n    </Cards>\r\n  );\r\n};\r\n\r\nconst Cards = styled.div`\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\r\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\r\n\r\n  width: 90%;\r\n  height: 900px;\r\n  /* background-color: rgba(255, 255, 255, 0); */\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n\r\n  position: absolute;\r\n  right: -15%;\r\n  top: -600%;\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst MyInfoText1 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\nconst MyInfoText2 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\nconst Line = styled.hr`\r\n  width: 80%;\r\n  color: black;\r\n`;\r\nconst Exit = styled.button`\r\n  margin: 0px auto 15px 28%;\r\n  height: 40px;\r\n  width: 132px;\r\n  background-color: white;\r\n  border: 1px solid #d1d1d1;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: black;\r\n    background-color: #d1d1d1;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\nexport default MypageCard;\r\n","/* eslint-disable */\r\n\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport PropensityTest from \"../propensityTest/PropensityTest\";\r\nimport styled from \"styled-components\";\r\nimport { map, stubFalse } from \"lodash\";\r\nimport { Grid4x4 } from \"@mui/icons-material\";\r\nimport EmailAuth from \"../EmailAuth\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst TypeResultTest = props => {\r\n  const [myData, setMyData] = React.useState();\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"LVG\",\r\n      name: \"호랑이\",\r\n      type: \"리더\",\r\n      type2: \"수직\",\r\n      type3: \"결과\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수직적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"LVP\",\r\n      name: \"늑대\",\r\n      type: \"리더\",\r\n      type2: \"수직\",\r\n      type3: \"과정\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수직적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \" 결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"LHG\",\r\n      name: \"여우\",\r\n      type: \"리더\",\r\n      type2: \"수평\",\r\n      type3: \"결과\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수평적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"LHP\",\r\n      name: \"팬더\",\r\n      type: \"리더\",\r\n      type2: \"수평\",\r\n      type3: \"과정\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수평적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FVG\",\r\n      name: \"토끼\",\r\n      type: \"팔로워\",\r\n      type2: \"수직\",\r\n      type3: \"결과\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수직적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FVP\",\r\n      name: \"강아지\",\r\n      type: \"팔로워\",\r\n      type2: \"수직\",\r\n      type3: \"과정\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수직적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FHG\",\r\n      name: \"고양이\",\r\n      type: \"팔로워\",\r\n      type2: \"수평\",\r\n      type3: \"결과\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수평적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FHP\",\r\n      name: \"물개\",\r\n      type: \"팔로워\",\r\n      type2: \"수평\",\r\n      type3: \"과정\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수평적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"RHP\",\r\n      name: \"너구리\",\r\n      type: \"팔로워\",\r\n      type2: \"수평\",\r\n      type3: \"과정\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수평적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n  ]);\r\n  const params = useParams();\r\n  // console.log(params.id, props.nickName);\r\n\r\n  React.useEffect(() => {\r\n    // console.log(\"테스트결과\", props);\r\n    arr.map(item => {\r\n      if (item.id === props.myType) {\r\n        setMyData(item);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Wrap>\r\n      {myData && (\r\n        <Grid\r\n          zIndex=\"1\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid\r\n            display=\"flex\"\r\n            // border=\"1px solid #333\"\r\n            borderRadius=\"15px\"\r\n            height=\"1%\"\r\n          >\r\n            <MyResultDiv>\r\n              <MyResultText>#{myData.type}</MyResultText>\r\n              <MyResultText>#{myData.type2}</MyResultText>\r\n              <MyResultText>#{myData.type3}</MyResultText>\r\n            </MyResultDiv>\r\n          </Grid>\r\n          <Grid height=\"23%\">\r\n            <WhiteP>\r\n              {myData.id} / {myData.name}\r\n            </WhiteP>\r\n          </Grid>\r\n\r\n          <Grid margin=\"0 0 0 20px\" height=\"11%\">\r\n            <Grid display=\"flex\" height=\"80%\">\r\n              <MyResultText2>{myData.text1}</MyResultText2>\r\n              <MyResultTextBold>{myData.text2}</MyResultTextBold>\r\n              <MyResultText2>{myData.text3}</MyResultText2>\r\n            </Grid>\r\n            <Grid display=\"flex\">\r\n              <MyResultText2>{myData.text4}</MyResultText2>\r\n            </Grid>\r\n\r\n            {props.userId == props.myUserId &&\r\n              props.mydata?.isMyMypage === true && (\r\n                <Grid\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  height=\"100%\"\r\n                  position=\"relative\"\r\n                  margin=\"15px 0 0 0\"\r\n                  width=\"94%\"\r\n                  maxWidth=\"750px\"\r\n                >\r\n                  <GotoTest\r\n                    onClick={() => {\r\n                      props.EditTest();\r\n                    }}\r\n                  >\r\n                    성향 테스트 다시하기⇀\r\n                  </GotoTest>\r\n\r\n                  <ConfirmEmail\r\n                    onClick={() => {\r\n                      props.onClick();\r\n                    }}\r\n                  >\r\n                    이메일 인증하기\r\n                  </ConfirmEmail>\r\n                  <EmailAuth\r\n                    modal={props.modal}\r\n                    setModal={props.setModal}\r\n                  ></EmailAuth>\r\n                </Grid>\r\n              )}\r\n            {params.id != props.myUserId && (\r\n              <YourName> Nikname | {props.nickName}</YourName>\r\n            )}\r\n            <Dialog\r\n              scroll=\"paper\"\r\n              open={props.testmodal}\r\n              onClose={props.TestClose}\r\n            >\r\n              <TestWrap>\r\n                <PropensityTest\r\n                  mypage={props.mypage}\r\n                  TestClose={props.TestClose}\r\n                />\r\n              </TestWrap>\r\n            </Dialog>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  max-width: 1400px;\r\n  height: 100%;\r\n  width: 60vw;\r\n  margin-left: 35%;\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    width: 90vw;\r\n    margin: auto;\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    width: 90vw;\r\n    margin: auto;\r\n  } ;\r\n`;\r\nconst MyResultDiv = styled.div`\r\n  display: flex;\r\n  width: auto;\r\n  align-items: center;\r\n`;\r\n\r\nconst MyResultText = styled.div`\r\n  width: auto;\r\n  height: 32px;\r\n\r\n  color: white;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst GotoTest = styled.p`\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  /* float: right; */\r\n  margin-right: 10px;\r\n  margin-top: 30px;\r\n  position: relative;\r\n  z-index: 999;\r\n  @media screen and (max-width: 370px) {\r\n    font-size: 12px;\r\n  } ;\r\n`;\r\nconst MyResultText2 = styled.p`\r\n  color: white;\r\n  font-size: 17px;\r\n  height: 17px;\r\n  width: auto;\r\n  @media screen and (max-width: 670px) {\r\n    display: none;\r\n  } ;\r\n`;\r\nconst MyResultTextBold = styled.p`\r\n  color: white;\r\n  font-size: 17px;\r\n  height: 17px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ConfirmEmail = styled.button`\r\n  width: 160px;\r\n  height: 35px;\r\n  padding: 8px 20px;\r\n  border: 1px solid white;\r\n  background-color: transparent;\r\n  color: white;\r\n  border-radius: 10px;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: black;\r\n    background-color: white;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  @media screen and (max-width: 750px) {\r\n    color: black;\r\n  } ;\r\n`;\r\n\r\nconst WhiteP = styled.p`\r\n  font-size: 30px;\r\n  color: white;\r\n  font-weight: bold;\r\n  width: 300px;\r\n  margin-left: 13px;\r\n`;\r\n\r\nconst TestWrap = styled.div`\r\n  height: 100%;\r\n  width: 550px;\r\n\r\n  @media (max-width: 650px) {\r\n    width: 310px;\r\n    height: 550px;\r\n    font-size: 11px;\r\n  }\r\n`;\r\nconst YourName = styled.div`\r\n  display: none;\r\n  @media screen and (max-width: 1200px) {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-weight: 500;\r\n    margin: 10px 0;\r\n    height: 40px;\r\n    width: 200px;\r\n    color: #333;\r\n\r\n    background-color: #fff;\r\n    border-radius: 11px;\r\n    box-shadow: 0 5px 5px #aaa;\r\n    opacity: 0.8;\r\n  } ;\r\n`;\r\nexport default TypeResultTest;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../../elements/Index\";\r\n\r\nconst MyFilter = (props) => {\r\n  return (\r\n    <>\r\n      {props && (\r\n        <Grid>\r\n          <FilterDiv active={props.active}>\r\n            <Filter\r\n              id={props.id}\r\n              active={props.active}\r\n              onClick={() => {\r\n                props.setStatus(props.id);\r\n                props.onClick(props.id);\r\n              }}\r\n            >\r\n              {props.id}\r\n            </Filter>\r\n          </FilterDiv>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst FilterDiv = styled.div`\r\n  align-items: center;\r\n  margin: 50px auto;\r\n  width: 80%;\r\n  height: 35px;\r\n\r\n  /* background-color: ${(props) => (props.active ? \"black\" : \" yellow\")}; */\r\n  border-bottom: ${(props) =>\r\n    props.active ? \"1mm ridge rgb(170, 50, 220, .6)\" : null};\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    -webkit-transform: scale(1.05);\r\n    -moz-transform: scale(1.05);\r\n    -ms-transform: scale(1.05);\r\n    -o-transform: scale(1.05);\r\n    /* text-decoration: underline; */\r\n    color: #dacceb;\r\n  }\r\n`;\r\n\r\nconst Filter = styled.p`\r\n  text-align: center;\r\n  cursor: pointer;\r\n  width: auto;\r\n  font-weight: 500;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    -webkit-transform: scale(1.05);\r\n    -moz-transform: scale(1.05);\r\n    -ms-transform: scale(1.05);\r\n    -o-transform: scale(1.05);\r\n\r\n    color: #737373;\r\n  }\r\n  @media screen and (max-width: 1400px) {\r\n    /* margin-top: 1050px; */\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    /* margin-top: 1050px; */\r\n  } ;\r\n`;\r\nexport default MyFilter;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport MyFilter from \"./filter/MyFilter\";\r\n\r\nconst MypageFilter = props => {\r\n  // console.log(props);\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"소개\",\r\n      active: true,\r\n    },\r\n    {\r\n      id: \"진행\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"관심\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"완료\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"모집\",\r\n      active: false,\r\n    },\r\n  ]);\r\n  const filters = item => {\r\n    setArr(state => {\r\n      return state.map(stateItem => {\r\n        if (stateItem.id === item.id) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n    setArr(state => {\r\n      return state.map(stateItem => {\r\n        if (stateItem.id !== item.id && stateItem.active === true) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {arr && (\r\n        <Wrap>\r\n          {arr.map(item => {\r\n            return (\r\n              <MyFilter\r\n                onClick={() => {\r\n                  if (item.id !== props.filter) {\r\n                    filters(item);\r\n                  }\r\n                }}\r\n                key={item.id}\r\n                {...item}\r\n                setStatus={props.onClicks}\r\n              ></MyFilter>\r\n            );\r\n          })}\r\n        </Wrap>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  width: 60vw;\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-around;\r\n  max-width: 850px;\r\n`;\r\n\r\nexport default MypageFilter;\r\n","/* eslint-disable */\n\n// 나의 마이페이지에서 뜨는 버튼들과 다른사람 마이페이지에서 뜨는 버튼들\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\nimport { postActions } from \"../redux/modules/post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { apis } from \"../lib/axios\";\nimport MypagePostList from \"./mypagePost/MypagePostList\";\nimport MarkdownRead from \"./MarkdownRead\";\nimport { history } from \"../redux/configureStore\";\nimport Spinner from \"../shared/Spinner\";\nimport Banners from \"./myPage/Banners\";\nimport MypageCard from \"./myPage/MypageCard\";\nimport TypeResultTest from \"./myPage/TypeResultTest\";\nimport MypageFilter from \"./myPage/MypageFilter\";\nimport { userCreators } from \"../redux/modules/user\";\nimport { pageCheckAction } from \"../redux/modules/pageCheck\";\n\n// MyPageInfo의 함수형 컴포넌트를 만든다.\nconst MyPageInfo = (props) => {\n  const dispatch = useDispatch();\n  const userId = props.match.params.id;\n  const myUserId = useSelector((state) => state.user.userId);\n  const checkApply = useSelector((state) => state.apply);\n  const [myUrl, setMyUrl] = React.useState();\n  const [filter, setFilter] = React.useState(\"소개\");\n  const [mydata, setMydata] = React.useState();\n  const [editMyProfile, setEditMyProfile] = React.useState(false); // 내려줘야함\n  const [techStack, setTeckstack] = React.useState([]); //\n  const [nickName, setNickName] = React.useState(); //\n  const [email, setEmail] = React.useState(); //\n  const [myType, setMyType] = React.useState(); ////////////\n  // const myType = mydata?.user.userPropensityType;\n  const [modal, setModal] = React.useState(false);\n  const [testmodal, setTestModal] = React.useState(false);\n  const [assessment, setAssessment] = React.useState(false);\n\n  const [memberId, setMemberId] = React.useState(); //멤버아이디\n  const [writerEquals, setWriterEquals] = React.useState(); //포스트의 작성자확인\n\n  const pageCheck = useSelector((state) => state.pagecheck.pageGo);\n\n  ////\n  const [introduction, setIntroduction] = React.useState(); //포스트의 작성자확인\n\n  const [recruitmentProject, setRecruitmentProject] = React.useState(); //멤버아이디\n  const [inProgressProject, setInProgressProject] = React.useState(); //포스트의 작성자확인\n  const [bookMarkProject, setBookMarkProject] = React.useState(); //멤버아이디\n  const [endProject, setEndProject] = React.useState(); //포스트의 작성자확인\n  ////\n\n  //click\n  // const introduction = mydata?.user.introduction ? true : false;\n\n  // const recruitmentProject = mydata?.recruitment;\n  // const inProgressProject = mydata?.inProgress;\n  // const bookMarkProject = mydata?.bookmark;\n  // const endProject = mydata?.end;\n  // console.log(mydata);\n\n  const [loading, setLoading] = React.useState(true);\n\n  const doSetAssessment = () => {\n    // console.log(\"실행됨\");\n    setAssessment(!assessment);\n  };\n\n  const SetFilter = (data) => {\n    setFilter(data);\n  };\n\n  React.useEffect(() => {\n    // console.log(\"뭐고\");\n    setMydata(null);\n    setEndProject(null);\n    setMyType(null);\n    dispatch(postActions.isMainPage(false));\n    dispatch(postActions.whatPage(\"myPage\"));\n    const fetchData = async () => {\n      try {\n        const result = await apis.getMypage(userId);\n        // console.log(result);\n\n        setEndProject(result.data.data.end);\n        setMyType(result.data.data.user.userPropensityType);\n        setMydata(result.data.data);\n        dispatch(pageCheckAction.getPageCheck(`/mypage/${userId}`));\n\n        setLoading(false);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n    // console.log(mydata);\n  }, [assessment, testmodal, checkApply]);\n\n  React.useLayoutEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await apis.getMypage(userId);\n\n        setNickName(result.data.data.user.nickname);\n        setEmail(result.data.data.user.email);\n        setTeckstack(result.data.data.user.techStackList);\n\n        // setLoading(false);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n  }, [editMyProfile]);\n\n  React.useLayoutEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await apis.getMypage(userId);\n        setRecruitmentProject(result.data.data.recruitment);\n        setInProgressProject(result.data.data.inProgress);\n        setBookMarkProject(result.data.data.bookmark);\n        setEndProject(result.data.data.end);\n        setIntroduction(result.data.data.user.introduction);\n        setMyType(result.data.data.user.userPropensityType);\n\n        setMydata(result.data.data);\n        dispatch(pageCheckAction.getPageCheck(`/mypage/${userId}`));\n\n        setLoading(false);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n    // console.log(mydata);\n  }, [filter]);\n\n  const EmailConfirm = () => {\n    setModal(true);\n  };\n\n  const EditTest = () => {\n    setTestModal(true);\n  };\n\n  const TestClose = () => {\n    setTestModal(false);\n  };\n\n  const EditProfile = () => {\n    setEditMyProfile(true);\n  };\n\n  const editProfileCancle = () => {\n    setEditMyProfile(false);\n  };\n\n  React.useLayoutEffect(() => {}, [props.goMypage]);\n\n  return (\n    <Grid margin=\"0 0 250px 0\">\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          {mydata && myType && endProject && (\n            <Grid className=\"전체페이지\" maxWidth=\"1400px\" margin=\"auto\">\n              <Grid height=\"30%\" position=\"relative\">\n                <Banner>\n                  <Banners\n                    type={myType}\n                    myPage={mydata?.isMyMypage}\n                    // setModal={setModal}\n                    // modal={modal}\n                    // onClick={() => {\n                    //   EmailConfirm();\n                    // }}\n                  ></Banners>\n                  <Grid position=\"absolute\" top=\"120px\" height=\"75%\">\n                    <TypeResultTest\n                      myType={myType}\n                      userId={userId}\n                      myUserId={myUserId}\n                      mydata={mydata}\n                      testmodal={testmodal}\n                      EditTest={EditTest}\n                      TestClose={TestClose}\n                      setModal={setModal}\n                      nickName={nickName}\n                      modal={modal}\n                      mypage={mydata.isMyMypage}\n                      onClick={() => {\n                        EmailConfirm();\n                      }}\n                    />\n                  </Grid>\n                </Banner>\n              </Grid>\n              <Grid width=\"340px\" height=\"10px\" position=\"relative\">\n                <MypageCard\n                  setEditMyProfile={setEditMyProfile}\n                  editMyProfile={editMyProfile}\n                  mydata={mydata}\n                  myType={myType}\n                  myUserId={myUserId}\n                  userId={userId}\n                  nickName={nickName}\n                  email={email}\n                  techStack={techStack}\n                  onClick={EditProfile}\n                  onClick2={editProfileCancle}\n                />\n              </Grid>\n              <Grid margin=\"100px 0 0 0 \">\n                <FilterWrap>\n                  <MypageFilter filter={filter} onClicks={SetFilter} />\n                </FilterWrap>\n\n                {filter === \"모집\" && (\n                  <MypagePostList post={recruitmentProject}></MypagePostList>\n                )}\n\n                <IntroduceWrap>\n                  {filter === \"모집\" && recruitmentProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </IntroduceWrap>\n\n                {filter === \"진행\" && (\n                  <MypagePostList post={inProgressProject}></MypagePostList>\n                )}\n                <IntroduceWrap>\n                  {filter === \"진행\" && inProgressProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </IntroduceWrap>\n                {filter === \"관심\" && (\n                  <MypagePostList post={bookMarkProject}></MypagePostList>\n                )}\n                <IntroduceWrap>\n                  {filter === \"관심\" && bookMarkProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </IntroduceWrap>\n                {filter === \"완료\" && (\n                  <MypagePostList\n                    post={endProject}\n                    myUserId={myUserId}\n                    assessment={assessment}\n                    doSetAssessment={doSetAssessment}\n                  ></MypagePostList>\n                )}\n                <IntroduceWrap margin=\"0 0 0 25%\" width=\"49%\">\n                  {filter === \"완료\" && endProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </IntroduceWrap>\n\n                <IntroduceWrap>\n                  {filter === \"소개\" &&\n                    mydata?.isMyMypage === true &&\n                    introduction !== \"\" && (\n                      <button\n                        style={{\n                          float: \"right\",\n                          margin: \"1% 1% 0 0\",\n                          border: \"none\",\n                          borderRadius: \"15px\",\n                          cursor: \"pointer\",\n                          backgroundColor: \" #fff \",\n                          position: \"relative\",\n                        }}\n                        onClick={() => {\n                          history.push({\n                            pathname: \"/addmarkdown\",\n                            state: { userId: userId },\n                          });\n                        }}\n                      >\n                        <img\n                          src=\"/img/소개글.png\"\n                          style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}\n                        />\n                      </button>\n                    )}\n                  {filter === \"소개\" && introduction !== \"\" && (\n                    <Grid margin=\"50px 0 0 0\" border=\"1px solid #707070 \">\n                      <MarkdownRead\n                        introduction={mydata?.user.introduction}\n                      ></MarkdownRead>\n                    </Grid>\n                  )}\n                </IntroduceWrap>\n                <IntroduceWrap>\n                  {filter === \"소개\" && introduction === \"\" && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        작성된 소개가 없네요.\n                      </NoIntroductionText>\n                      <NoIntroductionText2>\n                        소개글 작성은 PC환경에서 가능합니다.\n                      </NoIntroductionText2>\n                      {mydata?.isMyMypage === true && (\n                        <>\n                          <IntroduceBtn>\n                            <Button\n                              _onClick={() => {\n                                history.push({\n                                  pathname: \"/addmarkdown\",\n                                  state: { userId: userId },\n                                });\n                              }}\n                            >\n                              {\" \"}\n                              소개글 작성하기\n                            </Button>\n                          </IntroduceBtn>\n                          {/* <NoticeText>\n                            소개 작성은 PC환경에서 작성 가능합니다.\n                          </NoticeText> */}\n                        </>\n                      )}\n                    </>\n                  )}\n                </IntroduceWrap>\n              </Grid>\n              {/* 소개글 있거나 없거나 */}\n            </Grid>\n          )}\n          {/* //  mydata와 myType가 있을때 */}\n        </>\n        // 스피너를 감싸는 친구\n      )}\n      {/* 스피너를 감싸는 괄호 */}\n    </Grid>\n  );\n};\n\nconst Banner = styled.div`\n  width: 100%;\n  max-width: 1920px;\n  margin: -100px auto;\n  display: flex;\n  height: 457px;\n  overflow: hidden;\n`;\n\nconst FilterWrap = styled.div`\n  display: flex;\n  margin-left: 35%;\n  width: 870px;\n  max-width: 1400px;\n  z-index: 999;\n\n  @media screen and (max-width: 1200px) {\n    width: 90vw;\n    justify-content: center;\n    margin: auto;\n  }\n`;\n\nconst IntroduceWrap = styled.div`\n  margin-left: 37%;\n  width: 60vw;\n  max-width: 780px;\n\n  @media screen and (max-width: 1200px) {\n    width: 90vw;\n    justify-content: center;\n    margin: auto;\n  }\n`;\n\nconst NoIntroduction = styled.img`\n  width: 40%;\n  height: 40%;\n  object-fit: cover;\n  position: relative;\n  margin-left: 27%;\n  display: flex;\n  justify-content: center;\n`;\nconst NoIntroductionText = styled.p`\n  color: #737373;\n  font-size: 25px;\n  width: auto;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n`;\nconst NoIntroductionText2 = styled.p`\n  display: none;\n  @media screen and (max-width: 375px) {\n    color: #737373;\n    font-size: 12px;\n    width: auto;\n    align-items: center;\n    display: flex;\n    justify-content: center;\n  } ;\n`;\n\nconst IntroduceBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: auto;\n  width: 150px;\n  @media screen and (max-width: 400px) {\n    display: none;\n  } ;\n`;\n\nexport default MyPageInfo;\n","export default __webpack_public_path__ + \"static/media/PostAdd.2b16c1a9.jpg\";","// LeftBanner.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Img from \"../../images/PostAdd.jpg\";\n\n// LeftBanner의 함수형 컴포넌트를 만든다..\nconst LeftBanner = (props) => {\n  return (\n    <React.Fragment>\n      <SideBarImg src={Img} />\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SideBarImg = styled.img`\n  width: 650px;\n  max-width: 100%;\n  height: 1008px;\n  border-radius: 26px 0px 0px 26px;\n  margin-top: 1.5px;\n  margin-left: 1px;\n  @media screen and (max-width: 1600px) {\n    max-width: 80%;\n  }\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`;\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default LeftBanner;\n","// TitleWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Input, Text } from \"../../../elements/Index\";\n\n// TitleWrite의 함수형 컴포넌트를 만든다.\nconst TitleWrite = (props) => {\n  return (\n    <React.Fragment>\n      <Grid>\n        <TitleMedia>\n          <Text color=\"#4e442d\">제목</Text>\n        </TitleMedia>\n        <Input\n          width=\"100%\"\n          height=\"40px\"\n          padding=\"10px\"\n          margin=\"4px auto\"\n          border=\"1px solid #C4C4C4\"\n          borderRadius=\"10px\"\n          placeholder=\"제목을 입력해주세요.\"\n          boxShadow=\"0px 0px 10px #ddd\"\n          type=\"text\"\n          maxLength=\"34\"\n          inputFocusOutline=\"none\"\n          _onChange={(e) => {\n            props.setTitle(e.target.value);\n          }}\n        ></Input>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    margin: auto;\n    font-size: 10px;\n  }\n`;\n\nconst InputMedia = styled.input`\n  @media screen and (max-width: 600px) {\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TitleWrite;\n","// StackWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// StackWrite 함수형 컴포넌트를 만든다.\nconst StackWrite = (props) => {\n  const stackSelect = [\n    { value: \"React\", label: \"React\" },\n    { value: \"Java\", label: \"Java\" },\n    { value: \"JavaScript\", label: \"JavaScript\" },\n    { value: \"Python\", label: \"Python\" },\n    { value: \"Node\", label: \"Node\" },\n    { value: \"Flask\", label: \"Flask\" },\n    { value: \"C++\", label: \"C++\" },\n    { value: \"Django\", label: \"Django\" },\n    { value: \"php\", label: \"php\" },\n    { value: \"Vue\", label: \"Vue\" },\n    { value: \"Spring\", label: \"Spring\" },\n    { value: \"Swift\", label: \"Swift\" },\n    { value: \"Kotlin\", label: \"Kotlin\" },\n    { value: \"TypeScript\", label: \"TypeScript\" },\n  ];\n\n  const handleChange = useCallback(\n    (inputValue, { action, removedValue }) => {\n      if (props.techstack.length < 4) {\n        props.setTectstack(inputValue);\n      } else {\n        if (removedValue !== undefined) {\n          let temp = props.techstack.filter(\n            (item) => item[\"value\"] !== removedValue[\"value\"]\n          );\n          props.setTectstack(temp);\n        } else {\n          window.alert(\"최대 4가지만 선택 가능합니다.\");\n        }\n      }\n    },\n    [stackSelect]\n  );\n\n  const formatTech = () => {\n    let tamarray = [];\n    let index;\n    for (index = 0; index < props.techstack.length; index++) {\n      tamarray.push(props.techstack[index][\"label\"]);\n    }\n    props.setTechStackList(tamarray);\n  };\n\n  useEffect(() => {\n    formatTech();\n  }, [props.techstack]);\n\n  return (\n    <React.Fragment>\n      <Grid margin=\"10px auto\">\n        <StackMedia>\n          <Text color=\"#4e442d\">\n            기술스택 선택\n            <SubDescription> *(최대 4개)</SubDescription>\n          </Text>\n          <Select\n            isMulti\n            value={props.techstack}\n            components={props.animatedComponents}\n            styles={props.styles}\n            options={stackSelect}\n            onChange={handleChange}\n            placeholder={<div>기술 스택을 선택해주세요.</div>}\n          />\n        </StackMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SubDescription = styled.span`\n  color: red;\n  font-size: 12px;\n`;\n\nconst StackMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    margin: auto;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StackWrite;\n","// DateWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport DatePicker from \"react-datepicker\";\nimport { ko } from \"date-fns/esm/locale\";\n\n// DateWrite의 함수형 컴포넌트를 만든다.\nconst DateWrite = (props) => {\n  const startDate = (date) => {\n    props.setStartdate(date);\n    // if (date <= props.endDate) {\n    //   props.setStartdate(date);\n    // } else {\n    //   window.alert(\"시작일을 잘못 설정했습니다.\");\n    // }\n  };\n\n  const endDate = (date) => {\n    if (date > props.startDate) {\n      props.setEnddate(date);\n    } else {\n      window.alert(\"종료일을 잘못 설정했습니다.\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <DateMedia>\n        <Text color=\"#4e442d\">기간설정</Text>\n        <Grid display=\"flex\" textAlign=\"center\" margin=\"10px auto\">\n          {/* 시작 일*/}\n          <Grid>\n            <Text color=\"#4e442d\">프로젝트 시작일</Text>\n            <SDatePicker\n              dateFormat=\"yyyy - MM - dd\"\n              selected={props.startDate}\n              onChange={startDate}\n              locale={ko}\n              minDate={new Date()}\n            />\n          </Grid>\n          {/* 종료 일*/}\n          <Grid>\n            <Text color=\"#4e442d\">프로젝트 종료일</Text>\n            <SDatePicker\n              dateFormat=\"yyyy - MM - dd\"\n              selected={props.endDate}\n              onChange={endDate}\n              locale={ko}\n              minDate={new Date()}\n            />\n          </Grid>\n        </Grid>\n      </DateMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SDatePicker = styled(DatePicker)`\n  box-sizing: border-box;\n  width: 98%;\n  height: 40px;\n  border-radius: 10px;\n  border: 1px solid #c4c4c4;\n  color: black;\n  font-size: 16px;\n  text-align: center;\n  margin-top: 0.6rem;\n  outline: none;\n  box-shadow: 0px 0px 10px #ddd;\n`;\n\nconst DateMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default DateWrite;\n","// TotalMenber.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// TotalMember의 함수형 컴포넌트를 만든다.\nconst TotalMember = (props) => {\n  const projectMembers = [\n    { value: 2, label: 2 },\n    { value: 3, label: 3 },\n    { value: 4, label: 4 },\n    { value: 5, label: 5 },\n    { value: 6, label: 6 },\n  ];\n\n  return (\n    <React.Fragment>\n      <Grid margin=\"10px auto\">\n        <TotalMemberMedia>\n          <Text color=\"#4e442d\">프로젝트 총 인원</Text>\n          <Select\n            options={projectMembers}\n            styles={props.styles}\n            onChange={(e) => {\n              let b;\n              b = e[\"label\"];\n              props.setTotalmember(b);\n            }}\n            placeholder={<div>총 인원을 선택해주세요.</div>}\n          ></Select>\n        </TotalMemberMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst TotalMemberMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    margin: auto;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TotalMember;\n","// ContentWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// ContentWrite의 함수형 컴포넌트를 만든다.\nconst ContentWrite = (props) => {\n  return (\n    <React.Fragment>\n      <ContentMedia>\n        <Grid margin=\"10px auto\">\n          <Text color=\"#4e442d\">프로젝트 내용적기</Text>\n\n          <TextArea\n            placeholder=\"프로젝트 내용을 입력해주세요.\"\n            onChange={(e) => {\n              props.setContents(e.target.value);\n            }}\n          ></TextArea>\n        </Grid>\n      </ContentMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst TextArea = styled.textarea`\n  width: 97%;\n  height: 300px;\n  padding: 10px;\n  font-size: 15px;\n  margin: 4px auto;\n  border: 1px solid #c4c4c4;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px #ddd;\n  outline: none;\n  @media screen and (max-width: 600px) {\n    height: 200px;\n    width: 99%;\n  }\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    font-size: 10px;\n  }\n  @media screen and (max-width: 500px) {\n    width: 330px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ContentWrite;\n","// GenerateButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../../../elements/Index\";\n\n// GenerateButton의 함수형 컴포넌트를 만든다..\nconst GenerateButton = (props) => {\n  return (\n    <React.Fragment>\n      <Grid>\n        <Btn\n          onClick={() => {\n            props.submitHandler();\n          }}\n        >\n          프로젝트 생성하기\n        </Btn>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 140px;\n  height: 35px;\n  border: 1px solid #4e442d;\n  border-radius: 50px;\n  box-shadow: 0px 0px 10px #ddd;\n  color: #4e442d;\n  margin: 10px auto 10px auto;\n  cursor: pointer;\n  background-color: white;\n  &:hover {\n    color: white;\n    background-color: #4e442d;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default GenerateButton;\n","// TitleWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Input, Text } from \"../../../elements/Index\";\n\n// TitleWrite의 함수형 컴포넌트를 만든다.\nconst UrlWrite = (props) => {\n  return (\n    <React.Fragment>\n      <Grid>\n        <TitleMedia>\n          <Text color=\"#4e442d\">\n            오픈채팅 URL\n            <SubDescription> *(URL을 정확히 입력해주세요.)</SubDescription>\n          </Text>\n        </TitleMedia>\n        <Input\n          width=\"100%\"\n          height=\"40px\"\n          padding=\"10px\"\n          margin=\"4px auto\"\n          border=\"1px solid #C4C4C4\"\n          borderRadius=\"10px\"\n          placeholder=\"오픈채팅방 URL을 입력해주세요.\"\n          maxLength=\"35\"\n          boxShadow=\"0px 0px 10px #ddd\"\n          inputFocusOutline=\"none\"\n          _onChange={(e) => {\n            props.setChatUrl(e.target.value);\n          }}\n        ></Input>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    margin: auto;\n    font-size: 10px;\n  }\n`;\n\nconst SubDescription = styled.span`\n  color: red;\n  font-size: 12px;\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default UrlWrite;\n","// RightWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { postAddActions } from \"../../redux/modules/postadd\";\nimport { postActions } from \"../../redux/modules/post\";\nimport makeAnimated from \"react-select/animated\";\nimport TitleWrite from \"./rightContents/TitleWrite\";\nimport StackWrite from \"./rightContents/StackWrite\";\nimport DateWrite from \"./rightContents/DateWrite\";\nimport TotalMember from \"./rightContents/TotalMember\";\nimport ContentWrite from \"./rightContents/ContentWrite\";\nimport GenerateButton from \"./rightContents/GenerateButton\";\nimport UrlWrite from \"./rightContents/UrlWrite\";\n\n// RightWrite의 함수형 컴포넌트를 만든다.\nconst RightWrite = (props) => {\n  React.useEffect(() => {\n    dispatch(postActions.isMainPage(false));\n    dispatch(postActions.whatPage(\"addPostPage\"));\n  }, []);\n\n  const dispatch = useDispatch();\n  const animatedComponents = makeAnimated();\n  const [title, setTitle] = React.useState(\"\");\n  const [chatUrl, setChatUrl] = React.useState();\n  const [techstack, setTectstack] = React.useState([]);\n  const [techStackList, setTechStackList] = React.useState();\n  const date = new Date();\n  const [startDate, setStartdate] = React.useState(\n    date.setDate(date.getDate())\n  );\n  const [endDate, setEnddate] = React.useState(\n    date.setDate(date.getDate() + 1)\n  );\n  const [totalMember, setTotalmember] = React.useState();\n  const [projectStatus, setProjectstatus] = React.useState(\"모집중\");\n  const [contents, setContents] = React.useState(\"\");\n\n  // 예외처리\n  const submitHandler = () => {\n    if (\n      title.length > 0 &&\n      techstack.length > 0 &&\n      totalMember > 0 &&\n      contents.length > 0 &&\n      startDate < endDate\n    ) {\n      window.alert(\"프로젝트가 생성되었습니다.\");\n      scopeIndex();\n    } else {\n      window.alert(\"값을 다시 입력해주세요.\");\n    }\n  };\n\n  const scopeIndex = () => {\n    const card = {\n      title: title,\n      techStackList: techStackList,\n      startDate: startDate,\n      endDate: endDate,\n      totalMember: totalMember,\n      projectStatus: projectStatus,\n      chatUrl: chatUrl,\n      contents: contents,\n    };\n    // console.log(card);\n    dispatch(postAddActions.addPostAPI(card));\n  };\n\n  // Select 공통 스타일\n  const styles = {\n    control: (base, state) => ({\n      ...base,\n      boxShadow: state.isFocused ? 0 : 0,\n      borderWidth: 1,\n      borderRadius: 10,\n      fontSize: 14,\n      marginTop: 4,\n      minHeight: 40,\n      boxShadow: \"0px 0px 10px #ddd\",\n      borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      \"&:hover\": {\n        borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      },\n    }),\n  };\n\n  return (\n    <React.Fragment>\n      <Grid margin=\"18px 80px\">\n        <TitleMedia>\n          <Title>게시글 작성하기</Title>\n        </TitleMedia>\n\n        <Grid margin=\"40px auto\">\n          <TitleWrite setTitle={setTitle} />\n          <StackWrite\n            animatedComponents={animatedComponents}\n            styles={styles}\n            setTectstack={setTectstack}\n            techstack={techstack}\n            setTechStackList={setTechStackList}\n          />\n          <DateWrite\n            setStartdate={setStartdate}\n            startDate={startDate}\n            setEnddate={setEnddate}\n            endDate={endDate}\n          />\n          <TotalMember setTotalmember={setTotalmember} styles={styles} />\n          <UrlWrite setChatUrl={setChatUrl} />\n\n          <ContentWrite setContents={setContents} />\n\n          <GenerateButton submitHandler={submitHandler} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Title = styled.div`\n  color: #4e442d;\n  font-size: 32px;\n  font-weight: 800;\n  margin-top: 50px;\n  text-decoration: solid underline #544c398a 4px;\n  text-underline-position: under;\n`;\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 1000px) {\n    width: 350px;\n    margin: auto;\n    text-align: center;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default RightWrite;\n","// AddPost.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid } from \"../elements/Index\";\nimport styled from \"styled-components\";\nimport LeftBanner from \"../components/postWrite/LeftBanner\";\nimport RightWrite from \"../components/postWrite/RightWrite\";\n\n// WritePost의 함수형 컴포넌트를 만든다.\nconst WritePost = (props) => {\n  return (\n    <React.Fragment>\n      <AddMedia>\n        <Grid\n          display=\"flex\"\n          justifyContent=\"center\"\n          border=\"3px solid #C4C4C4\"\n          borderRadius=\"30px\"\n          maxWidth=\"1400px\"\n          margin=\"40px auto\"\n          boxShadow=\"0px 0px 10px #C4C4C4\"\n        >\n          <LeftBanner />\n          <RightWrite />\n        </Grid>\n      </AddMedia>\n    </React.Fragment>\n  );\n};\n\nconst AddMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 98%;\n  } ;\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default WritePost;\n","// PostWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport AddPost from \"../components/AddPost\";\nimport { postActions } from \"../redux/modules/post\";\nimport { useDispatch } from \"react-redux\";\n\n// PostWrite의 함수형 컴포넌트를 만든다.\nconst PostWrite = (props) => {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(postActions.isMainPage(false));\n  }, []);\n\n  return (\n    <React.Fragment>\n      <AddPost />\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PostWrite;\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../lib/axios\";\nimport Swal from \"sweetalert2\";\n// 수정\nconst EDIT_POST = \"EDIT_POST\";\n// 삭제\nconst DELETE_POST = \"DELETE_POST\";\n// 상태 체크\nconst STATUS_POST = \"STATUS_POST\";\n\n// 포스트 수정 액션생성함수 생성\nconst editPost = createAction(EDIT_POST, (editcard) => ({ editcard }));\n// 포스트 삭제 액션생성함수 생성\nconst deletePost = createAction(DELETE_POST, (postId) => ({ postId }));\n// 포스트 상태체크 액션생성함수 생성\nconst statusPost = createAction(STATUS_POST, (postId) => ({ postId }));\n\n// 초기값\nconst initialState = {\n  list: [],\n};\n\n// 포스트 수정\nexport const editPostAPI = (post_id, editcard) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .editPost(post_id, editcard)\n      .then((res) => {\n        history.goBack();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        window.alert(err.response.data.msg);\n      });\n  };\n};\n\n// 포스트 삭제\nexport const deletePostAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .deletePost(postId)\n      .then((res) => {\n        history.goBack();\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n\n// 포스트 상태체크\nexport const statusPostAPI = (post_id, editstatus) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .statusPost(post_id, editstatus)\n      .then((res) => {\n        // history.goBack();\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n\n//북마크 전송\nconst bookMarkAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .bookMarkChecked(postId)\n      .then((res) => {\n        console.log(res);\n        // console.log(res.data.data.isBookmarkChecked);\n        if (res.data.msg == \"북마크 추가 성공\") {\n          return Swal.fire(\"관심 프로젝트에 추가되었습니다!\", \"\", \"success\");\n        }\n        if (res.data.msg == \"북마크 삭제 성공\") {\n          return Swal.fire(\"관심 프로젝트 에서 삭제되었습니다!\", \"\", \"success\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        if (err.response.data.msg == \"해당 유저를 찾을 수 없습니다.\") {\n          return Swal.fire(\"해당 유저를 찾을 수 없습니다!\", \"\", \"question\");\n        }\n        if (err.response.data.msg == \"해당 프로젝트를 찾을 수 없습니다.\") {\n          return Swal.fire(\"해당 프로젝트를 찾을 수 없습니다!\", \"\", \"question\");\n        }\n        if (err.response.data.msg == \"자신의 게시물은 북마크할 수 없습니다.\") {\n          return Swal.fire(\n            \"자신의 게시물은 북마크 할 수 없습니다!\",\n            \"\",\n            \"warning\"\n          );\n        }\n        if (err.response.data.msg == \"로그인 사용자만 사용할 수 있습니다.\") {\n          return Swal.fire(\n            \"로그인 사용자만 이용할 수 있습니다!\",\n            \"\",\n            \"warning\"\n          );\n        }\n        if (err.response.data.msg == \"입력 값이 잘못되었습니다.\") {\n          return Swal.fire(\n            \"로그인 사용자만 이용할 수 있습니다!\",\n            \"\",\n            \"warning\"\n          );\n        }\n      });\n  };\n};\n\n// 리듀서\nexport default handleActions(\n  {\n    [EDIT_POST]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"포스트 수정\", action.payload);\n      }),\n    [DELETE_POST]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"포스트 삭제\", action.payload);\n      }),\n    [STATUS_POST]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"포스트 상태 체크\", action.payload);\n      }),\n  },\n  initialState\n);\n\nconst postDetailActions = {\n  editPostAPI,\n  deletePostAPI,\n  statusPostAPI,\n  bookMarkAPI,\n};\n\nexport { postDetailActions };\n","export default __webpack_public_path__ + \"static/media/PostDetail.b6966a0e.png\";","// LeftBanner.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Img from \"../../images/PostDetail.png\";\n\n// LeftBanner의 함수형 컴포넌트를 만든다.\nconst LeftBanner = (props) => {\n  return (\n    <React.Fragment>\n      <SideBarImg src={Img} />\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SideBarImg = styled.img`\n  width: 650px;\n  max-width: 100%;\n  height: 1002px;\n  border-radius: 26px 0px 0px 26px;\n  margin-top: 2.5px;\n  margin-left: 1px;\n  @media screen and (max-width: 1600px) {\n    max-width: 80%;\n  }\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`;\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default LeftBanner;\n","// TitleEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text, Input } from \"../../../elements/Index\";\n\n// TitleEdit의 함수형 컴포넌트를 만든다.\nconst TitleEdit = (props) => {\n  return (\n    <React.Fragment>\n      <TitleMedia>\n        <Grid>\n          <Text color=\"#4c4759\">제목</Text>\n          <Input\n            width=\"100%\"\n            maxLength=\"35\"\n            height=\"40px\"\n            padding=\"10px\"\n            margin=\"4px auto\"\n            border=\"1px solid #C4C4C4\"\n            borderRadius=\"10px\"\n            boxShadow=\"0px 0px 10px #ddd\"\n            placeholder=\"제목을 입력해주세요.\"\n            inputFocusOutline=\"none\"\n            type=\"text\"\n            editValue={props.title}\n            _onChange={(e) => {\n              props.setTitle(e.target.value);\n            }}\n          />\n        </Grid>\n      </TitleMedia>\n    </React.Fragment>\n  );\n};\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 40px;\n    font-size: 10px;\n  }\n`;\n\n// export\nexport default TitleEdit;\n","// StackEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// StackEdit의 함수형 컴포넌트를 만든다.\nconst StackEdit = (props) => {\n  const stackSelect = [\n    { value: \"React\", label: \"React\" },\n    { value: \"Java\", label: \"Java\" },\n    { value: \"JavaScript\", label: \"JavaScript\" },\n    { value: \"Python\", label: \"Python\" },\n    { value: \"Nodejs\", label: \"Nodejs\" },\n    { value: \"Flask\", label: \"Flask\" },\n    { value: \"C++\", label: \"C++\" },\n    { value: \"Django\", label: \"Django\" },\n    { value: \"php\", label: \"php\" },\n    { value: \"Vue\", label: \"Vue\" },\n    { value: \"Spring\", label: \"Spring\" },\n    { value: \"Swift\", label: \"Swift\" },\n    { value: \"Kotlin\", label: \"Kotlin\" },\n    { value: \"Typescript\", label: \"Typescript\" },\n  ];\n\n  const orderByLabel = useCallback(\n    (a, b) => a.label.localeCompare(b.label),\n    []\n  );\n\n  const orderOptions = useCallback(\n    (values) =>\n      values\n        .filter((v) => v.isFixed)\n        .sort(orderByLabel)\n        .concat(values.filter((v) => !v.isFixed).sort(orderByLabel)),\n    [orderByLabel]\n  );\n\n  const [value, setValue] = React.useState(orderOptions(stackSelect));\n  const handleChange = useCallback(\n    (inputValue, { action, removedValue }) => {\n      switch (action) {\n        case \"remove-value\":\n        case \"pop-value\":\n          if (removedValue.isFixed) {\n            setValue(orderOptions([...inputValue, removedValue]));\n\n            return;\n          }\n          break;\n        case \"clear\":\n          setValue(stackSelect.filter((v) => v.isFixed));\n          return;\n        default:\n      }\n\n      setValue(inputValue);\n      props.setTectstack(inputValue);\n    },\n    [stackSelect, orderOptions]\n  );\n\n  const formatTech = () => {\n    let tamarray = [];\n    let index;\n    for (index = 0; index < props.techstack.length; index++) {\n      tamarray.push(props.techstack[index][\"label\"]);\n    }\n\n    props.setTest(tamarray);\n  };\n\n  useEffect(() => {\n    formatTech();\n  }, [props.techstack]);\n\n  return (\n    <React.Fragment>\n      <StackMedia>\n        <Grid margin=\"10px auto\">\n          <Text color=\"#4c4759\">\n            기술스택 선택<SubDescription> *(최대 4개)</SubDescription>\n          </Text>\n          <Select\n            isMulti\n            components={props.animatedComponents}\n            isClearable={value.some((v) => !v.isFixed)}\n            styles={props.styles}\n            value={props.techstack}\n            options={stackSelect}\n            onChange={handleChange}\n            placeholder={<div>기술 스택을 선택해주세요.</div>}\n          />\n        </Grid>\n      </StackMedia>\n    </React.Fragment>\n  );\n};\n\nconst StackMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 40px;\n    font-size: 10px;\n  }\n`;\n\nconst SubDescription = styled.span`\n  color: red;\n  font-size: 12px;\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StackEdit;\n","// totalMemberEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// totalMemberEdit의 함수형 컴포넌트를 만든다.\nconst totalMemberEdit = (props) => {\n  const projectMembers = [\n    { value: 2, label: 2 },\n    { value: 3, label: 3 },\n    { value: 4, label: 4 },\n    { value: 5, label: 5 },\n    { value: 6, label: 6 },\n  ];\n\n  return (\n    <React.Fragment>\n      <TotalMemberMedia>\n        <Grid margin=\"10px auto\">\n          <Text color=\"#4c4759\">프로젝트 총 인원</Text>\n          <Select\n            options={projectMembers}\n            styles={props.styles}\n            value={projectMembers.filter(\n              ({ value }) => value === props.totalMember\n            )}\n            defaultValue={{ value: 6, label: 6 }}\n            onChange={(data) => {\n              props.setTotalmember(data.label);\n            }}\n            placeholder={<div>총 인원을 선택해주세요.</div>}\n          ></Select>\n        </Grid>\n      </TotalMemberMedia>\n    </React.Fragment>\n  );\n};\n\nconst TotalMemberMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    font-size: 10px;\n    margin-bottom: 55px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default totalMemberEdit;\n","// StatusEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// StatusEdit의 함수형 컴포넌트를 만든다.\nconst StatusEdit = (props) => {\n  const projectStatused = [\n    { value: \"done\", label: \"모집중\" },\n    { value: \"doing\", label: \"진행중\" },\n    { value: \"ready\", label: \"종료\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <StatusMedia>\n        <Grid margin=\"10px auto\">\n          <Text color=\"#4c4759\">프로젝트 상태체크</Text>\n          <Select\n            options={projectStatused}\n            styles={props.styles}\n            value={projectStatused.filter(\n              ({ label }) => label === props.projectStatus\n            )}\n            onChange={(data) => {\n              props.setProjectstatus(data.label);\n            }}\n            placeholder={<div>상태를 설정해주세요.</div>}\n          ></Select>\n        </Grid>\n      </StatusMedia>\n    </React.Fragment>\n  );\n};\n\nconst StatusMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    font-size: 10px;\n    margin-bottom: 70px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StatusEdit;\n","// TitleWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Input, Text } from \"../../../elements/Index\";\n\n// TitleWrite의 함수형 컴포넌트를 만든다..\nconst UrlEdit = (props) => {\n  return (\n    <React.Fragment>\n      <Grid>\n        <TitleMedia>\n          <Text color=\"#4c4759\">\n            오픈채팅 URL\n            <SubDescription> *(URL을 정확히 입력해주세요.)</SubDescription>\n          </Text>\n          <Input\n            width=\"100%\"\n            height=\"40px\"\n            padding=\"10px\"\n            margin=\"4px auto\"\n            border=\"1px solid #C4C4C4\"\n            borderRadius=\"10px\"\n            placeholder=\"오픈채팅방 URL을 입력해주세요.\"\n            maxLength=\"35\"\n            boxShadow=\"0px 0px 10px #ddd\"\n            editValue={props.chatUrl}\n            inputFocusOutline=\"none\"\n            _onChange={(e) => {\n              props.setChatUrl(e.target.value);\n            }}\n          ></Input>\n        </TitleMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    margin: 10px auto 0px;\n    font-size: 10px;\n  }\n`;\n\nconst SubDescription = styled.span`\n  color: red;\n  font-size: 12px;\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default UrlEdit;\n","// ContentEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// ContentEdit의 함수형 컴포넌트를 만든다.\nconst ContentEdit = (props) => {\n  return (\n    <React.Fragment>\n      <ContentMedia>\n        <Grid margin=\"10px auto\">\n          <Text color=\"#4c4759\">프로젝트 내용적기</Text>\n          <TextArea\n            value={props.contents}\n            onChange={(e) => {\n              props.setContents(e.target.value);\n            }}\n          />\n        </Grid>\n      </ContentMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst TextArea = styled.textarea`\n  width: 97%;\n  height: 286px;\n  padding: 10px;\n  margin: 4px auto;\n  border: 1px solid #c4c4c4;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px #ddd;\n  font-size: 16px;\n  outline: none;\n  @media screen and (max-width: 600px) {\n    height: 200px;\n    width: 99%;\n  }\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    font-size: 10px;\n  }\n  @media screen and (max-width: 500px) {\n    display: flex;\n    width: 330px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ContentEdit;\n","// DateEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport DatePicker from \"react-datepicker\";\nimport { ko } from \"date-fns/esm/locale\";\n\n// DateEdit의 함수형 컴포넌트를 만든다.\nconst DateEdit = (props) => {\n  const startDate = (date) => {\n    props.setStartdate(date);\n    // if (date <= props.endDate) {\n    //   props.setStartdate(date);\n    // } else {\n    //   window.alert(\"시작일을 잘못 설정했습니다.\");\n    // }\n  };\n\n  const endDate = (date) => {\n    if (date > props.startDate) {\n      props.setEnddate(date);\n    } else {\n      window.alert(\"종료일을 잘못 설정했습니다.\");\n    }\n  };\n\n  // const endDate = (data) => {\n  //   props.setEnddate(data);\n  // };\n  return (\n    <React.Fragment>\n      <DateMedia>\n        <Grid>\n          <Text color=\"#4c4759\">기간설정</Text>\n          <Grid display=\"flex\" textAlign=\"center\" margin=\"10px auto\">\n            {/* 시작 일*/}\n            <Grid>\n              <Text color=\"#4c4759\">프로젝트 시작일</Text>\n              <SDatePicker\n                dateFormat=\"yyyy - MM - dd\"\n                selected={new Date(props.startDate)}\n                onChange={startDate}\n                startdate={props.startDate}\n                selectsStart\n                locale={ko}\n                minDate={new Date()}\n                placeholderText=\"프로젝트 시작일 입력\"\n              />\n            </Grid>\n            {/* 종료 일*/}\n            <Grid>\n              <Text color=\"#4c4759\">프로젝트 종료일</Text>\n              <SDatePicker\n                dateFormat=\"yyyy - MM - dd\"\n                selected={new Date(props.endDate)}\n                onChange={endDate}\n                startdate={props.startDate}\n                enddate={props.endDate}\n                selectsEnd\n                locale={ko}\n                minDate={new Date()}\n                placeholderText=\"프로젝트 종료일 입력\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </DateMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SDatePicker = styled(DatePicker)`\n  box-sizing: border-box;\n  width: 98%;\n  height: 35px;\n  border-radius: 10px;\n  border: 1px solid #c4c4c4;\n  color: black;\n  font-size: 16px;\n  text-align: center;\n  margin-top: 0.6rem;\n  outline: none;\n  box-shadow: 0px 0px 10px #ddd;\n`;\n\nconst DateMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 40px;\n    font-size: 10px;\n  }\n  @media screen and (max-width: 500px) {\n    display: flex;\n    width: 340px;\n    height: 30px;\n    margin-bottom: 55px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default DateEdit;\n","// EditButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../../../elements/Index\";\n\n// EditButton의 함수형 컴포넌트를 만든다.\nconst EditButton = (props) => {\n  return (\n    <React.Fragment>\n      <EditMedia>\n        <Grid display=\"flex\">\n          <Btn\n            onClick={() => {\n              props.editHandler();\n            }}\n          >\n            포스트수정 완료\n          </Btn>\n        </Grid>\n      </EditMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 140px;\n  height: 35px;\n  border: 1px solid #bbb4d9;\n  border-radius: 50px;\n  color: #fff;\n  background: white;\n  color: #bbb4d9;\n  margin: 10px auto 10px auto;\n  cursor: pointer;\n  &:hover {\n    color: white;\n    background-color: #bbb4d9;\n    border: 1px solid;\n    transition: 0.3s ease-out;\n  }\n`;\n\nconst EditMedia = styled.div`\n  display: flex;\n  @media screen and (max-width: 600px) {\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default EditButton;\n","//PostEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { apis } from \"../lib/axios\";\nimport { postDetailActions } from \"../redux/modules/postdetail\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport makeAnimated from \"react-select/animated\";\nimport LeftBanner from \"../components/postEdit/LeftBanner\";\nimport TitleEdit from \"../components/postEdit/rightContentsEdit/TitleEdit\";\nimport StackEdit from \"../components/postEdit/rightContentsEdit/StackEdit\";\nimport TotalMemberEdit from \"../components/postEdit/rightContentsEdit/TotalMemberEdit\";\nimport StatusEdit from \"../components/postEdit/rightContentsEdit/StatusEdit\";\nimport UrlEdit from \"../components/postEdit/rightContentsEdit/UrlEdit\";\nimport ContentEdit from \"../components/postEdit/rightContentsEdit/ContentEdit\";\nimport DateEdit from \"../components/postEdit/rightContentsEdit/DateEdit\";\nimport EditButton from \"../components/postEdit/rightContentsEdit/EditButton\";\nimport Swal from \"sweetalert2\";\nimport Spinner from \"../shared/Spinner\";\n// PostEdit의 함수형 컴포넌트를 만든다.\nconst PostEdit = (props) => {\n  const dispatch = useDispatch();\n  const animatedComponents = makeAnimated();\n  const [checkPost, setCheckPost] = React.useState();\n  const [postId, setPostId] = React.useState();\n  const [title, setTitle] = React.useState(\"\");\n  const [summary, setSummary] = React.useState(\"\");\n  const [techstack, setTectstack] = React.useState([]);\n  const [totalMember, setTotalmember] = React.useState();\n  const [recruitmentMember, setRecruitmentMember] = React.useState();\n  const [projectStatus, setProjectstatus] = React.useState(\"\");\n  const [startDate, setStartdate] = React.useState(new Date());\n  const [endDate, setEnddate] = React.useState(new Date());\n  const [contents, setContents] = React.useState(\"\");\n  const [techStackList, setTest] = React.useState();\n  const [loaded, setLoaded] = React.useState(false);\n  const [chatUrl, setChatUrl] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n\n  // 수정\n  let post_id = props.match.params.id;\n  const scope_edit = () => {\n    let blank_pattern = /^\\s+|\\s+$/g;\n    if (title.replace(blank_pattern, \"\") == \"\") {\n      Swal.fire(\"제목을 다시 확인해 주세요!\", \"\", \"warning\");\n      return false;\n    }\n\n    const editcard = {\n      title: title,\n      contents: contents,\n      techStackList: techStackList,\n      totalMember: totalMember,\n      projectStatus: projectStatus,\n      startDate: startDate,\n      endDate: endDate,\n      chatUrl: chatUrl,\n    };\n    dispatch(postDetailActions.editPostAPI(post_id, editcard));\n  };\n\n  const editHandler = () => {\n    if (techstack.length === 0) {\n      Swal.fire(\"기술스택을 선택해 주세요!\", \"\", \"warning\");\n      return;\n    }\n    if (techstack.length <= 4) {\n      scope_edit();\n    } else {\n      window.alert(\"기술선택은 4개까지 선택 가능합니다.\");\n    }\n  };\n\n  React.useLayoutEffect(() => {\n    const CheckPost = async () => {\n      try {\n        const result = await apis.detailPost(post_id);\n        let setValue = result.data.data.post;\n        setCheckPost(result);\n        setTitle(setValue.title);\n        setSummary(setValue.summary);\n        setContents(setValue.contents);\n        setTectstack(\n          setValue.techStack.map((value) => ({ label: value, value }))\n        );\n        setStartdate(setValue?.startDate);\n        setEnddate(setValue.endDate);\n        setTotalmember(setValue.totalMember);\n        setProjectstatus(setValue.projectStatus);\n        setChatUrl(setValue.chatUrl);\n        setLoaded(true);\n        setLoading(false);\n      } catch (err) {\n        console.log(err.response);\n\n        setLoaded(false);\n      }\n    };\n\n    if (loaded === false) CheckPost();\n  }, []);\n\n  // Select 공통 스타일\n  const styles = {\n    control: (base, state) => ({\n      ...base,\n      boxShadow: state.isFocused ? 0 : 0,\n      borderWidth: 1,\n      borderRadius: 10,\n      fontSize: 14,\n      marginTop: 4,\n      minHeight: 20,\n      boxShadow: \"0px 0px 10px #ddd\",\n      borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      \"&:hover\": {\n        borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      },\n    }),\n  };\n\n  return (\n    <React.Fragment>\n      <EditMedia>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <>\n            {checkPost && (\n              <Grid\n                display=\"flex\"\n                justifyContent=\"center\"\n                border=\"3px solid #C4C4C4\"\n                borderRadius=\"30px\"\n                maxWidth=\"1400px\"\n                margin=\"40px auto 0px\"\n                boxShadow=\"0px 0px 10px #554475\"\n              >\n                <LeftBanner />\n                <Grid margin=\"18px 80px 0px\">\n                  <TitleMedia>\n                    <Title>게시글 수정하기</Title>\n                  </TitleMedia>\n\n                  <Grid margin=\"40px auto 0px\">\n                    <TitleEdit title={title} setTitle={setTitle} />\n                    <StackEdit\n                      setTectstack={setTectstack}\n                      techstack={techstack}\n                      setTest={setTest}\n                      animatedComponents={animatedComponents}\n                      styles={styles}\n                    />\n                    <Grid>\n                      <DateEdit\n                        startDate={startDate}\n                        endDate={endDate}\n                        setStartdate={setStartdate}\n                        setEnddate={setEnddate}\n                      />\n                    </Grid>\n                    <TotalMemberEdit\n                      styles={styles}\n                      totalMember={totalMember}\n                      setTotalmember={setTotalmember}\n                    />\n                    <StatusEdit\n                      styles={styles}\n                      projectStatus={projectStatus}\n                      setProjectstatus={setProjectstatus}\n                    />\n                    <Grid>\n                      <UrlEdit chatUrl={chatUrl} setChatUrl={setChatUrl} />\n                      <ContentEdit\n                        contents={contents}\n                        setContents={setContents}\n                      />\n                      <EditButton editHandler={editHandler} />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            )}\n          </>\n        )}\n      </EditMedia>\n    </React.Fragment>\n  );\n};\n\nconst EditMedia = styled.div`\n  margin-bottom: 60px;\n  @media screen and (max-width: 500px) {\n    width: 98%;\n  }\n`;\n\n// styled-components를 사용한다.\nconst Title = styled.div`\n  color: #4c4759;\n  font-size: 32px;\n  font-weight: 800;\n  margin: 40px auto;\n  text-decoration: solid underline #8777b685 4px;\n  text-underline-position: under;\n`;\n\nconst Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 140px;\n  height: 35px;\n  border: 1px solid #bbb4d9;\n  border-radius: 50px;\n  color: #bbb4d9;\n  background: white;\n  margin: auto;\n  cursor: pointer;\n  &:hover {\n    color: white;\n    background-color: #bbb4d9;\n    border: 1px solid;\n    transition-duration: 1s;\n  }\n`;\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 1000px) {\n    width: 350px;\n    margin: auto;\n    text-align: center;\n  }\n`;\n\nconst ContainerMedia = styled.div`\n  @media screen and (max-width: 1000px) {\n    width: 600px;\n    margin: auto;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PostEdit;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button, Image } from \"../elements/Index\";\nimport { Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { applyCreators } from \"../redux/modules/applyProject\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { apis } from \"../lib/axios\";\nimport { useHistory } from \"react-router\";\nconst ApplyStatusModal = (props) => {\n  const dispatch = useDispatch();\n  const applyUsers = useSelector((state) => state.apply.applyUsers);\n  const [applyedUsers, setApplyUsers] = React.useState();\n  const [acceptButton, setAcceptButton] = React.useState();\n  const { applyStatusModal, setApplyStatusModal, postId } = props;\n  const history = useHistory();\n\n  const modalClose = () => {\n    setApplyStatusModal(false);\n  };\n\n  React.useEffect(() => {\n    // console.log(applyedUsers);\n    const fetchData = async () => {\n      try {\n        const result = await apis.applyUser(postId);\n        // console.log(result);\n        setApplyUsers(result.data.data);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n\n    // dispatch(applyCreators.applyUserAPI(postId));\n  }, [applyStatusModal, acceptButton]);\n\n  const acceptOffer = (acceptUser) => {\n    const acceptInfo = {\n      userId: acceptUser,\n      accept: true,\n    };\n    // console.log(acceptInfo);\n\n    const fetchData = async () => {\n      try {\n        const result = await apis.aceeptOffer(postId, acceptInfo);\n        // console.log(result);\n        setAcceptButton(result);\n        // window.alert(\"신청을 수락하였습니다.\");\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n    // dispatch(applyCreators.acceptOfferAPI(postId, acceptInfo));;\n  };\n\n  const cancelOffer = (cancelUser) => {\n    const acceptInfo = {\n      userId: cancelUser,\n      accept: false,\n    };\n    // console.log(acceptInfo);\n    dispatch(applyCreators.acceptOfferAPI(postId, acceptInfo));\n    // window.alert(\"신청을 취소하였습니다.\");\n  };\n\n  return (\n    <>\n      {applyedUsers && (\n        <Dialog\n          maxWidth={\"sm\"}\n          scroll=\"paper\"\n          open={applyStatusModal}\n          onClose={modalClose}\n        >\n          <ModalWrap>\n            <Grid\n              height=\"12%\"\n              bg=\"#172D40\"\n              position=\"relative\"\n              textAlign=\"center\"\n              padding=\"10px 0 0 0\"\n              boxShadow=\"0px 0px 10px #172D40\"\n            >\n              <Grid\n                position=\"absolute\"\n                top=\"0px\"\n                right=\"10px\"\n                width=\"20px\"\n                padding=\"10px\"\n              >\n                <CloseIcon\n                  sx={{ color: \"#fff\", fontSize: 35 }}\n                  onClick={modalClose}\n                  cursor=\"pointer\"\n                />\n              </Grid>\n\n              <Text size=\"40px\" bold color=\"#fff\">\n                신청현황\n              </Text>\n            </Grid>\n            {applyedUsers == \"\" && (\n              <Grid height=\"0%\" justifyContent=\"center\">\n                <Grid\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  width=\"70%\"\n                  textAlign=\"center\"\n                  margin=\"auto\"\n                >\n                  <Grid height=\"50%\" margin=\"40px auto\">\n                    <img width=\"100%\" src=\"/img/step9.png\" />\n                  </Grid>\n                  <Grid margin=\"250px 0\">지원자가 아직 없습니다!</Grid>\n                </Grid>\n              </Grid>\n            )}\n\n            <Grid display=\"flex\" height=\"85%\" justifyContent=\"center\">\n              <Grid width=\"90%\" margin=\"10px 0\">\n                {applyedUsers.map((user, idx) => (\n                  <Grid\n                    margin=\"10px auto\"\n                    height=\"auto\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-around\"\n                    padding=\"10px\"\n                    width=\"90%\"\n                    key={user.userId}\n                    borderRadius=\"10px\"\n                    boxShadow=\"0px 0px 10px #172D40\"\n                    {...user}\n                  >\n                    <Grid\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                      margin=\"auto\"\n                      width=\"100px\"\n                      _onClick={() => {\n                        history.push(`/mypage/${user.userId}`);\n                      }}\n                    >\n                      {applyedUsers[idx].userPropensityType === \"LVG\" && (\n                        <UserImg src=\"/img/호랑이.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"LVP\" && (\n                        <UserImg src=\"/img/늑대.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"LHG\" && (\n                        <UserImg src=\"/img/여우.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"LHP\" && (\n                        <UserImg src=\"/img/판다.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FVG\" && (\n                        <UserImg src=\"/img/토끼.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FVP\" && (\n                        <UserImg src=\"/img/개.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FHG\" && (\n                        <UserImg src=\"/img/고양이.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FHP\" && (\n                        <UserImg src=\"/img/물개.png\"></UserImg>\n                      )}\n                    </Grid>\n                    <Grid height=\"100%\" width=\"70%\">\n                      <Wrap>\n                        <Grid\n                          margin=\"auto\"\n                          height=\"50px\"\n                          display=\"flex\"\n                          justifyContent=\"space-between\"\n                        >\n                          {/* <Grid height=\"100%\" textAlign=\"center\">\n                            <Grid bg=\"#eee\" height=\"50%\">\n                              닉네임\n                            </Grid>\n                            <Grid bg=\"#aaa\" height=\"50%\">\n                              성향\n                            </Grid>\n                          </Grid> */}\n                          <ModalMedia>\n                            <Grid height=\"100%\">\n                              <Grid\n                                bg=\"#172d408f\"\n                                width=\"150px\"\n                                height=\"50%\"\n                                display=\"flex\"\n                                justifyContent=\"center\"\n                                alignItems=\"center\"\n                                color=\"#fff\"\n                                borderRadius=\"20px\"\n                                borderRadius=\"10px 10px 0 0\"\n                              >\n                                닉네임 | {applyedUsers[idx].nickname}\n                              </Grid>\n                              <Grid\n                                bg=\"#f5f5f5\"\n                                height=\"50%\"\n                                display=\"flex\"\n                                justifyContent=\"center\"\n                                alignItems=\"center\"\n                                borderRadius=\"0 0 10px 10px\"\n                              >\n                                성향타입 |{\" \"}\n                                {applyedUsers[idx].userPropensityType}\n                              </Grid>\n                            </Grid>\n                          </ModalMedia>\n                        </Grid>\n                        <ButtonMedia>\n                          <Grid display=\"flex\">\n                            <Grid margin=\"auto\" height=\"auto\" width=\"70px\">\n                              <Button\n                                height=\"40px\"\n                                common\n                                isValue={applyedUsers[idx].userId}\n                                _onClick={(e) => {\n                                  acceptOffer(e.target.value);\n                                }}\n                              >\n                                수락\n                              </Button>\n                            </Grid>\n                            <Grid\n                              margin=\"auto auto auto 3px\"\n                              height=\"auto\"\n                              width=\"70px\"\n                            >\n                              <Button\n                                height=\"40px\"\n                                common\n                                isValue={applyedUsers[idx].userId}\n                                _onClick={(e) => {\n                                  cancelOffer(e.target.value);\n                                }}\n                              >\n                                취소\n                              </Button>\n                            </Grid>\n                          </Grid>\n                        </ButtonMedia>\n                      </Wrap>\n                      <Grid margin=\"10px 0px 0px\">\n                        <CommentBubble>\n                          {applyedUsers[idx].comment}\n                        </CommentBubble>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n          </ModalWrap>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nconst ModalMedia = styled.div`\n  @media screen and (max-width: 600px) {\n  } ;\n`;\n\nconst ButtonMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 150px;\n    height: 45px;\n    background-color: white;\n    border: none;\n  } ;\n`;\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 500px;\n  @media screen and (max-width: 600px) {\n    width: 300px;\n  } ;\n`;\nconst CommentBubble = styled.div`\n  color: white;\n  position: relative;\n  background: #172d408f;\n  height: 80px;\n  overflow: auto;\n  /* border: #b29cf4 solid 1px; */\n  border-radius: 10px;\n  padding: 5px 12px;\n  /* ::after {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-width: 10px 10px 0;\n    border-color: #554475 transparent;\n    display: block;\n    width: 0;\n    z-index: 1;\n    top: 10px;\n    left: -15px;\n  } */\n  @media screen and (max-width: 600px) {\n    width: 130px;\n  } ;\n`;\n\nconst UserImg = styled.img`\n  object-fit: cover;\n  width: 80%;\n  border-radius: 20px;\n  background-color: #ececec;\n  cursor: pointer;\n`;\n\nconst Wrap = styled.div`\n  display: flex;\n  height: 60%;\n  margin: auto;\n  @media screen and (max-width: 600px) {\n    display: flex;\n    flex-direction: column;\n    height: 40%;\n  } ;\n`;\n\nexport default ApplyStatusModal;\n","// LeftBanner.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport bannerImg from \"../../images/PostDetail.png\";\n\n// LeftBanner의 함수형 컴포넌트를 만든다.\nconst LeftBanner = (props) => {\n  return (\n    <React.Fragment>\n      <SideBarImg src={bannerImg} />\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SideBarImg = styled.img`\n  width: 650px;\n  max-width: 100%;\n  height: 1000px;\n  border-radius: 26px 0px 0px 26px;\n  margin-top: 1.5px;\n  margin-left: 1px;\n  @media screen and (max-width: 1600px) {\n    max-width: 80%;\n  }\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default LeftBanner;\n","// TitleDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// TitleDetail의 함수형 컴포넌트를 만든다.\nconst TitleDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid margin=\"20px auto 0px\">\n        {/* <TitleMedia> */}\n        <TitleText>{props.passedData?.title}</TitleText>\n        {/* </TitleMedia> */}\n        <Line />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Line = styled.hr`\n  width: 100%;\n  margin: 0 0 5px 0;\n  background-color: #172d40;\n  height: 1px;\n`;\n\nconst TitleMedia = styled.p`\n  @media screen and (max-width: 376px) {\n    font-size: 10px;\n  }\n`;\n\nconst TitleText = styled.p`\n  font-size: 30px;\n  font-weight: 500;\n  @media screen and (max-width: 376px) {\n    font-size: 20px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TitleDetail;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport { Grid, Input, Text, Button, Image } from \"../../elements/Index\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router\";\r\nimport { applyCreators } from \"../../redux/modules/applyProject\";\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { apis } from \"../../lib/axios\";\r\nconst ExileUserModal = (props) => {\r\n  const dispatch = useDispatch();\r\n  const applyUsers = useSelector((state) => state.apply.applyUsers);\r\n  const [applyedUsers, setApplyUsers] = React.useState();\r\n  const [acceptButton, setAcceptButton] = React.useState();\r\n  const { applyStatusModal, setApplyStatusModal, postId, postUserId } = props;\r\n  const history = useHistory();\r\n\r\n  const modalClose = () => {\r\n    setApplyStatusModal(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // console.log(applyedUsers);\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await apis.serachTeamUser(postId);\r\n        // console.log(result);\r\n        setApplyUsers(result.data.data);\r\n      } catch (err) {\r\n        // console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    // dispatch(applyCreators.applyUserAPI(postId));\r\n  }, [applyStatusModal, acceptButton]);\r\n\r\n  const exile = (userId) => {\r\n    // console.log(userId);\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await apis.exileUser(postId, userId);\r\n        // console.log(result);\r\n        setAcceptButton(result);\r\n      } catch (err) {\r\n        // console.log(err.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {applyedUsers && (\r\n        <Dialog\r\n          maxWidth={\"sm\"}\r\n          scroll=\"paper\"\r\n          open={applyStatusModal}\r\n          onClose={modalClose}\r\n        >\r\n          <ModalWrap>\r\n            <Grid\r\n              height=\"10%\"\r\n              bg=\"#172D40\"\r\n              position=\"relative\"\r\n              textAlign=\"center\"\r\n              padding=\"10px 0 10px 0\"\r\n              boxShadow=\"0px 0px 10px #172D40\"\r\n            >\r\n              <Grid\r\n                position=\"absolute\"\r\n                top=\"0px\"\r\n                right=\"10px\"\r\n                width=\"20px\"\r\n                padding=\"10px\"\r\n              >\r\n                <CloseIcon\r\n                  sx={{ color: \"#fff\", fontSize: 35 }}\r\n                  fontSize=\"large\"\r\n                  cursor=\"pointer\"\r\n                  onClick={modalClose}\r\n                />\r\n              </Grid>\r\n              <Text size=\"40px\" bold color=\"#fff\">\r\n                팀원강퇴\r\n              </Text>\r\n            </Grid>\r\n            {applyedUsers == \"\" && (\r\n              <Grid height=\"0%\" justifyContent=\"center\">\r\n                <Grid\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  width=\"70%\"\r\n                  textAlign=\"center\"\r\n                  margin=\"auto\"\r\n                >\r\n                  <Grid height=\"50%\" margin=\"40px auto\">\r\n                    <img width=\"100%\" src=\"/img/step9.png\" />\r\n                  </Grid>\r\n                  <Grid margin=\"250px 0\">지원자가 아직 없습니다!</Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid display=\"flex\" height=\"85%\" justifyContent=\"center\">\r\n              <Grid width=\"90%\" margin=\"10px 0\">\r\n                {applyedUsers.map((user, idx) => (\r\n                  <Grid\r\n                    margin=\"10px auto\"\r\n                    height=\"100px\"\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"space-around\"\r\n                    padding=\"10px\"\r\n                    width=\"90%\"\r\n                    borderRadius=\"10px\"\r\n                    boxShadow=\"0px 0px 10px #17334a\"\r\n                    key={user.userId}\r\n                    {...user}\r\n                  >\r\n                    <Grid\r\n                      display=\"flex\"\r\n                      justifyContent=\"center\"\r\n                      alignItems=\"center\"\r\n                      margin=\"auto\"\r\n                      width=\"100px\"\r\n                      _onClick={() => {\r\n                        history.push(`/mypage/${user.userId}`);\r\n                      }}\r\n                    >\r\n                      {applyedUsers[idx].userPropensityType === \"LVG\" && (\r\n                        <UserImg src=\"/img/호랑이.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"LVP\" && (\r\n                        <UserImg src=\"/img/늑대.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"LHG\" && (\r\n                        <UserImg src=\"/img/여우.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"LHP\" && (\r\n                        <UserImg src=\"/img/판다.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FVG\" && (\r\n                        <UserImg src=\"/img/토끼.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FVP\" && (\r\n                        <UserImg src=\"/img/개.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FHG\" && (\r\n                        <UserImg src=\"/img/고양이.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FHP\" && (\r\n                        <UserImg src=\"/img/물개.png\"></UserImg>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid width=\"70%\" margin=\"auto\">\r\n                      <Grid\r\n                        display=\"flex\"\r\n                        margin=\"auto\"\r\n                        display=\"flex\"\r\n                        justifyContent=\"space-between\"\r\n                        alignItems=\"center\"\r\n                      >\r\n                        {/* <Grid height=\"100%\" textAlign=\"center\">\r\n                            <Texts bg=\"#eee\" height=\"50%\">\r\n                              닉네임\r\n                            </Texts>\r\n                            <Texts bg=\"#aaa\" height=\"50%\">\r\n                              성향\r\n                            </Texts>\r\n                          </Grid> */}\r\n\r\n                        <ModalMedia>\r\n                          <Grid margin=\"auto\">\r\n                            <Grid\r\n                              bg=\"#172d408f\"\r\n                              width=\"110px\"\r\n                              height=\"50%\"\r\n                              display=\"flex\"\r\n                              justifyContent=\"center\"\r\n                              alignItems=\"center\"\r\n                              color=\"#fff\"\r\n                              borderRadius=\"20px\"\r\n                              borderRadius=\"10px 10px 0 0\"\r\n                            >\r\n                              <Text size=\"12px\">\r\n                                닉네임 | {applyedUsers[idx].nickname}\r\n                              </Text>\r\n                            </Grid>\r\n                            <Grid\r\n                              bg=\"#f5f5f5\"\r\n                              height=\"50%\"\r\n                              display=\"flex\"\r\n                              justifyContent=\"center\"\r\n                              alignItems=\"center\"\r\n                              borderRadius=\"0 0 10px 10px\"\r\n                            >\r\n                              <Text size=\"12px\">\r\n                                성향타입 |{\" \"}\r\n                                {applyedUsers[idx].userPropensityType}\r\n                              </Text>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </ModalMedia>\r\n\r\n                        <BtnWrap>\r\n                          <Grid width=\"100%\" position=\"relative\" right=\"0\">\r\n                            {applyedUsers[idx].userId !== postUserId && (\r\n                              <Button\r\n                                borderRadius=\"50%\"\r\n                                width=\"70px\"\r\n                                height=\"70px\"\r\n                                common\r\n                                isValue={applyedUsers[idx].userId}\r\n                                _onClick={(e) => {\r\n                                  window.confirm(\"추방하시겠습니까?\");\r\n                                  exile(e.target.value);\r\n                                }}\r\n                              >\r\n                                추방\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </BtnWrap>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </ModalWrap>\r\n        </Dialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst ModalMedia = styled.div`\r\n  height: 80%;\r\n  margin: auto auto auto 0;\r\n  @media screen and (max-width: 600px) {\r\n  } ;\r\n`;\r\n\r\nconst ModalWrap = styled.div`\r\n  width: 550px;\r\n  height: 500px;\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst BtnWrap = styled.div`\r\n  margin: 0 auto 0 40%;\r\n  height: auto;\r\n  width: 80px;\r\n  @media screen and (max-width: 600px) {\r\n    width: 80px;\r\n    margin: auto auto auto 2px;\r\n  } ;\r\n`;\r\n\r\nconst Texts = styled.p`\r\n  height: 50%;\r\n  width: 50px;\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst CommentBubble = styled.div`\r\n  position: relative;\r\n  background: #f1f9ff;\r\n  height: 40%;\r\n  /* border: #b29cf4 solid 1px; */\r\n  border-radius: 10px;\r\n  padding: 0 12px;\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    border-style: solid;\r\n    border-width: 10px 15px 0;\r\n    border-color: #f1f9ff transparent;\r\n    display: block;\r\n    width: 0;\r\n    z-index: 1;\r\n    top: 10px;\r\n    left: -15px;\r\n  }\r\n`;\r\n\r\nconst UserImg = styled.img`\r\n  object-fit: cover;\r\n  width: 90%;\r\n  border-radius: 12px;\r\n  background-color: #ececec;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  height: 60%;\r\n  margin: auto;\r\n  @media screen and (max-width: 600px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 40%;\r\n  } ;\r\n`;\r\n\r\nexport default ExileUserModal;\r\n","// ProjectJoinUser.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Text } from \"../elements/Index\";\nimport { useHistory } from \"react-router\";\nimport ImgType from \"../shared/ImgType\";\nimport styled from \"styled-components\";\n\n// ProjectJoinUser의 함수형 컴포넌트를 만든다.\nconst ProjectJoinUser = (props) => {\n  const history = useHistory();\n  const goToMypage = (userId) => {\n    history.push(`/mypage/${userId}`);\n  };\n  return (\n    <React.Fragment>\n      <Grid\n        textAlign=\"center\"\n        height=\"120px\"\n        width=\"80px\"\n        margin=\"0 11px 0 0\"\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <JoinUserMedia>\n          <Grid textAlign=\"center\">\n            <Writer number={props.number}>게시자</Writer>\n\n            <Grid\n              width=\"60px\"\n              height=\"60px\"\n              borderRadius=\"50%\"\n              backgroundColor=\"#efefef\"\n              margin=\"6px 0px\"\n              boxShadow=\"0px 0px 10px #C4C4C4\"\n            >\n              <ImgType\n                type={props.userPropensityType}\n                cursor=\"pointer\"\n                _onClick={() => {\n                  goToMypage(props.userId);\n                }}\n              ></ImgType>\n              <Text size=\"12px\">{props.nickname}</Text>\n              <Grid height=\"30%\">\n                <Text size=\"12px\">({props.userPropensityType})</Text>\n              </Grid>\n            </Grid>\n          </Grid>\n        </JoinUserMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\nconst Writer = styled.p`\n  opacity: ${(props) => (props.number === 0 ? 1 : 0)};\n  width: 60px;\n  margin: auto auto auto 0;\n  height: 10px;\n  color: #4c4759;\n`;\n\nconst JoinUserMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n    color: #4c4759;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ProjectJoinUser;\n","// ApplicantDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport ProjectJoinUser from \"../../ProjectJoinUser\";\n\nconst ApplicantDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid margin=\"4px 0px 0px 0px\">\n        {/* <Grid width=\"100%\" display=\"flex\">\n          <Grid width=\"80px\" textAlign=\"center\">\n            <Text size=\"18px\" bold>\n              게시자\n            </Text>\n          </Grid>\n\n          <Grid width=\"80px\" margin=\"0 0 0 10px\" textAlign=\"center\">\n            <Text size=\"18px\" bold>\n              참여자\n            </Text>\n          </Grid>\n        </Grid> */}\n\n        <Grid\n          display=\"flex\"\n          margin=\"6px 0px 0px 0px\"\n          overflowX=\"auto\"\n          overflowY=\"none\"\n        >\n          {props.passdedMenber?.map((item, number) => (\n            <ProjectJoinUser key={item.userId} {...item} number={number} />\n          ))}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ApplicantDetail;\n","// StackDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// StackDetail의 함수형 컴포넌트를 만든다..\nconst StackDetail = (props) => {\n  // console.log(props);\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\" margin=\"6px auto\">\n        <Text margin=\"auto 10px auto 0px\" color=\"#172d40ab\">\n          Stack\n        </Text>\n        <StackMedia>\n          {props.passedData?.techStack.map((item, index) => {\n            return (\n              <Text margin=\"auto 5px\" key={item}>\n                <StackBox>{item}</StackBox>\n              </Text>\n            );\n          })}\n        </StackMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst StackBox = styled.div`\n  color: white;\n  background-color: #172d40;\n  border: 1px solid #172d40;\n  border-radius: 50px;\n  padding: 4px 10px;\n  font-size: 10px;\n  text-align: center;\n`;\n\nconst StackMedia = styled.div`\n  display: flex;\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n    width: 120px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StackDetail;\n","// DateDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// DateDetail의 함수형 컴포넌트를 만든다.\nconst DateDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\" margin=\"6px 0 0 0px\">\n        <DateMedia>\n          <Grid display=\"flex\">\n            <Text margin=\"auto 12px auto 0px\" color=\"#172d40ab\">\n              진행기간\n            </Text>\n            <DateBox>\n              {props.passedData?.startDate} ~ {props.passedData?.endDate}\n            </DateBox>\n          </Grid>\n        </DateMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst DateBox = styled.div`\n  color: black;\n  font-size: 11px;\n  padding: 4px 10px;\n  border: 1px solid #172d40;\n  border-radius: 50px;\n  text-align: center;\n`;\n\nconst DateMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 300px;\n    font-size: 12px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default DateDetail;\n","// StatusDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// StatusDetail의 함수형 컴포넌트를 만든다.\nconst StatusDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\">\n        <StatusMedia>\n          <Text margin=\"0px 10px 0px 0px\" color=\"#172d40ab\">\n            프로젝트 상태\n          </Text>\n          {props.passedData?.projectStatus === \"모집중\" && (\n            <Text\n              bg=\"#2699FB\"\n              color=\"white\"\n              border=\"1px solid #2699FB\"\n              borderRadius=\"50px\"\n              padding=\"4px\"\n              size=\"12px\"\n            >\n              {props.passedData?.projectStatus}\n            </Text>\n          )}\n          {props.passedData?.projectStatus === \"진행중\" && (\n            <Text\n              bg=\"#15B915\"\n              color=\"white\"\n              border=\"1px solid #15B915\"\n              borderRadius=\"50px\"\n              padding=\"4px\"\n              size=\"12px\"\n            >\n              {props.passedData?.projectStatus}\n            </Text>\n          )}\n          {props.passedData?.projectStatus === \"종료\" && (\n            <Text\n              bg=\"#f9a8a8\"\n              color=\"white\"\n              border=\"1px solid #f9a8a8\"\n              borderRadius=\"50px\"\n              padding=\"4px\"\n              size=\"12px\"\n            >\n              {props.passedData?.projectStatus}\n            </Text>\n          )}\n        </StatusMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst StatusMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n    width: 360px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StatusDetail;\n","// TitleDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Linkify from \"react-linkify\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport { lightBlue } from \"@material-ui/core/colors\";\n\n// ContentDetail의 함수형 컴포넌트를 만든다.\nconst UrlDetail = (props) => {\n  return (\n    <React.Fragment>\n      <UrlMedia>\n        <Grid margin=\"10px auto auto\">\n          <Text color=\"#172d40ab\">오픈채팅 URL</Text>\n\n          <Text\n            _onClick={() => {\n              window.open(`${props.passedData?.chatUrl}`, \"_blank\");\n            }}\n            color=\"#172D40\"\n            cursor=\"pointer\"\n            decoration=\"none\"\n          >\n            &nbsp; {props.passedData?.chatUrl}\n          </Text>\n        </Grid>\n      </UrlMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst UrlMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 100px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default UrlDetail;\n","// TitleDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Linkify from \"react-linkify\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// ContentDetail의 함수형 컴포넌트를 만든다.\nconst ContentDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid margin=\"10px auto auto\">\n        <ContentMedia>\n          <Text color=\"#172d40ab\">프로젝트 설명</Text>\n          <Linkify>\n            <Content>{props.passedData?.contents}</Content>\n          </Linkify>\n        </ContentMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Content = styled.p`\n  width: 100%;\n  height: 400px;\n  padding: 10px;\n  border: 1px solid #172d40ab;\n  border-radius: 5px;\n  font-weight: 60;\n  line-height: 30px;\n  white-space: pre-line;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  @media screen and (max-width: 600px) {\n    width: 100%;\n    height: 400px;\n  }\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    font-size: 10px;\n    width: 320px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ContentDetail;\n","// Bookmark.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../../../elements/Index\";\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\nimport BookmarkBorderIcon from \"@mui/icons-material/BookmarkBorder\";\n\n// Bookmark의 함수형 컴포넌트를 만든다.\nconst Bookmark = (props) => {\n  return (\n    <React.Fragment>\n      <BookMarkMedia>\n        {props.userId !== props.postUserId && (\n          <BookMark>\n            <BookMark onClick={props.ToggleBookMark}>\n              {!props.passedData?.bookmarkChecked ? (\n                <BookmarkBorderIcon sx={{ color: \"#172D40\", fontSize: 45 }} />\n              ) : (\n                <BookmarkIcon sx={{ color: \"#172D40\", fontSize: 45 }} />\n              )}\n            </BookMark>\n          </BookMark>\n        )}\n      </BookMarkMedia>\n    </React.Fragment>\n  );\n};\n\nconst BookMarkMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 10px;\n    height: 10px;\n    font-size: 10px;\n  }\n`;\nconst BookMark = styled.div`\n  width: 50px;\n  position: absolute;\n  top: -10px;\n  right: -30px;\n  height: 50px;\n  cursor: pointer;\n  @media screen and (max-width: 600px) {\n    width: 30px;\n    height: 30px;\n    right: 15px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default Bookmark;\n","// ApplicantButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Button } from \"../../../elements/Index\";\nimport ApplyUserModal from \"../../ApplyUserModal\";\n\n// ApplicantButton의 함수형 컴포넌트를 만든다.\nconst ApplicantButton = (props) => {\n  return (\n    <React.Fragment>\n      <ContentMedia>\n        {props.passedData?.projectStatus === \"모집중\" && (\n          <Grid>\n            {props.isme === \"user\" && (\n              <>\n                <Button\n                  common\n                  width=\"120px\"\n                  isValue=\"apply\"\n                  _onClick={(e) => {\n                    props.applyUserModalOpen(e.target.value);\n                  }}\n                  margin=\"auto 10px\"\n                  border=\"1px solid #172D40\"\n                  borderRadius=\"50px\"\n                >\n                  지원신청\n                </Button>\n              </>\n            )}\n\n            {props.isme === \"applicant\" && (\n              <Button\n                common\n                width=\"120px\"\n                isValue=\"cancel\"\n                _onClick={(e) => {\n                  props.applyUserModalOpen(e.target.value);\n                }}\n                width=\"120px\"\n              >\n                지원취소\n              </Button>\n            )}\n          </Grid>\n        )}\n        <ApplyUserModal\n          applyUserModalOpen={props.applyUserModalOpen}\n          applyUserModal={props.applyUserModal}\n          setApplyUserModal={props.setApplyUserModal}\n          applyValue={props.applyValue}\n          postId={props.post_id}\n          passdedMenber={props.passdedMenber}\n          statusCheck={props.statusCheck}\n        />\n        {props.passedData?.projectStatus === \"모집중\" &&\n          props.passedUserStatus === \"member\" && (\n            <Grid>\n              {/* <Button\n                common\n                width=\"120px\"\n                isValue=\"memberLiked\"\n                _onClick={(e) => {\n                  props.applyUserModalOpen(e.target.value);\n                }}\n                margin=\"auto 10px\"\n                border=\"1px solid #554475\"\n                borderRadius=\"50px\"\n              >\n                지원신청\n              </Button> */}\n              {props.isme === \"member\" && (\n                <Button\n                  common\n                  width=\"120px\"\n                  isValue=\"teamExit\"\n                  _onClick={(e) => {\n                    props.applyUserModalOpen(e.target.value);\n                  }}\n                >\n                  팀탈퇴\n                </Button>\n              )}\n            </Grid>\n          )}\n      </ContentMedia>\n    </React.Fragment>\n  );\n};\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    width: 325px;\n    margin: 0px 0px 60px;\n  }\n  @media screen and (max-width: 500px) {\n    width: 325px;\n    margin: 0px 0px 100px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ApplicantButton;\n","// PosterButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Button } from \"../../../elements/Index\";\nimport ApplyUserModal from \"../../ApplyUserModal\";\nimport { useHistory } from \"react-router\";\nimport { apis } from \"../../../lib/axios\";\n\n// PosterButton의 함수형 컴포넌트를 만든다..\nconst PosterButton = (props) => {\n  const history = useHistory();\n\n  const DeletePost = async () => {\n    try {\n      const deletePost = await apis.deletePost(props.post_id);\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\" justifyContent=\"center\">\n        <ContentMedia>\n          <Grid width=\"0px\" height=\"0px\">\n            <ApplyUserModal\n              applyUserModal={props.applyUserModal}\n              setApplyUserModal={props.setApplyUserModal}\n              applyValue={props.applyValue}\n              postId={props.post_id}\n              passdedMenber={props.passdedMenber}\n              statusCheck={props.statusCheck}\n            />\n          </Grid>\n          {props.passedData?.projectStatus === \"모집중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              _onClick={() => {\n                props.edit_status(\"진행중\");\n              }}\n            >\n              모집완료\n            </Button>\n          )}\n\n          {props.passedData?.projectStatus === \"종료\" && <div></div>}\n          {props.passedData?.projectStatus === \"진행중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              isValue=\"end\"\n              _onClick={(e) => {\n                props.applyUserModalOpen(e.target.value);\n              }}\n            >\n              마감하기\n            </Button>\n          )}\n          {props.passedData?.projectStatus === \"진행중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              _onClick={() => {\n                history.push({ pathname: `/postedit/${props.post_id}` });\n              }}\n            >\n              포스트수정\n            </Button>\n          )}\n          {props.passedData?.projectStatus === \"모집중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              _onClick={() => {\n                history.push({ pathname: `/postedit/${props.post_id}` });\n              }}\n            >\n              포스트수정\n            </Button>\n          )}\n          {props.passedData?.projectStatus === \"종료\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              isValue=\"submit\"\n              _onClick={(e) => {\n                props.applyUserModalOpen(e.target.value);\n              }}\n            >\n              깃허브제출\n            </Button>\n          )}\n          <Button\n            common\n            width=\"140px\"\n            height=\"35px\"\n            _onClick={() => {\n              DeletePost();\n              window.alert(\"삭제되었습니다.\");\n            }}\n          >\n            포스트삭제\n          </Button>\n        </ContentMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst ButtonMedia = styled.button`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 200px;\n    height: 50px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    width: 300px;\n    height: 50px;\n    margin-bottom: 10px;\n  }\n  @media screen and (max-width: 800px) {\n    display: flex;\n    width: 300px;\n    font-size: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PosterButton;\n","// TotalMemberDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// TotalMemberDetail의 함수형 컴포넌트를 만든다\nconst TotalMemberDetail = (props) => {\n  return (\n    <React.Fragment>\n      <TotalMedia>\n        <Grid display=\"flex\">\n          <Text margin=\"0px 10px 10px 0px\" color=\"#172d40ab\">\n            프로젝트 인원\n          </Text>\n          <Text color=\"#172D40\">{props.passedData?.totalMember}명</Text>\n        </Grid>\n      </TotalMedia>\n    </React.Fragment>\n  );\n};\n\nconst TotalMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 100px;\n    font-size: 12px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TotalMemberDetail;\n","// PostDetail.js\n/* eslint-disable */\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { apis } from \"../lib/axios\";\nimport { postActions } from \"../redux/modules/post\";\nimport { Grid, Button, Text } from \"../elements/Index\";\nimport Swal from \"sweetalert2\";\nimport { pageCheckAction } from \"../redux/modules/pageCheck\";\n\nimport ApplyStatusModal from \"../components/ApplyStatusModal\";\nimport LeftBanner from \"../components/postDetail/leftBanner\";\nimport TitleDetail from \"../components/postDetail/rightContents/TitleDetail\";\nimport ExileUserModal from \"../components/modal/ExileUserModal\";\nimport ApplicantDetail from \"../components/postDetail/rightContents/ApplicantDetail\";\nimport StackDetail from \"../components/postDetail/rightContents/StackDetail\";\nimport DateDetail from \"../components/postDetail/rightContents/DateDetail\";\nimport StatusDetail from \"../components/postDetail/rightContents/StatusDetail\";\nimport UrlDetail from \"../components/postDetail/rightContents/UrlDetail\";\nimport ContentDetail from \"../components/postDetail/rightContents/ContentDetail\";\nimport BookMark from \"../components/postDetail/rightContents/BookMark\";\nimport ApplicantButton from \"../components/postDetail/rightContents/ApplicantButton\";\nimport PosterButton from \"../components/postDetail/rightContents/PosterButton\";\nimport TotalMemberDetail from \"../components/postDetail/rightContents/TotalMemberDetail\";\nimport Spinner from \"../shared/Spinner\";\n\n// PostDetail의 함수형 컴포넌트를 만든다\nconst PostDetail = (props) => {\n  const dispatch = useDispatch();\n  const [checkPost, setCheckPost] = React.useState();\n  const [bookmark, setBookmark] = React.useState(false);\n  const [applyStatusModal, setApplyStatusModal] = React.useState(false); //신청현황\n  const [applyUserModal, setApplyUserModal] = React.useState(false); //지원취소/팀탈퇴/프로젝트마감\n  const [exileStatusModal, setExileStatusModal] = React.useState(false); //강퇴\n  const [recruitmentFinish, setRecruitmentFinish] = React.useState(); // 모집완료 체크 for리렌더링\n  const [projectStatus, setProjectStatus] = React.useState();\n  const [applyValue, setApplyValue] = React.useState();\n  const [isme, setIsme] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n  const applyStatusModalOpen = () => {\n    setApplyStatusModal(true);\n    // setApplyStatusModal(!applyStatusModal);\n  };\n\n  const exileStatusModalOpen = () => {\n    setExileStatusModal(true);\n  };\n\n  const applyUserModalOpen = (value) => {\n    setApplyValue(value);\n    setApplyUserModal(true);\n    // setApplyUserModal(!applyUserModal);\n  };\n\n  const statusCheck = (value) => {\n    // console.log(value);\n    setProjectStatus(value);\n    // console.log(value);\n  };\n\n  const goFrontPage = () => {\n    {\n      passedData?.frontUrl !== null && window.open(passedData?.frontUrl);\n    }\n  };\n\n  const goBackPage = () => {\n    {\n      passedData?.frontUrl !== null && window.open(passedData?.backUrl);\n    }\n  };\n\n  // 상태변경\n  const edit_status = (data) => {\n    const editstatus = {\n      projectStatus: data,\n    };\n    const statusDoing = async () => {\n      try {\n        const result = await apis.statusPost(post_id, editstatus);\n        setRecruitmentFinish(!recruitmentFinish);\n        Swal.fire(\"모집 완료 되었습니다!\", \"\", \"success\");\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    statusDoing();\n  };\n\n  let post_id = props.match.params.id;\n  const userId = useSelector((state) => state.user.userId); //로그인 유저아이디\n  const postUserId = checkPost?.data.data.post.userId;\n  const passedData = checkPost?.data[\"data\"].post;\n  const passedUserStatus = checkPost?.data[\"data\"].userStatus;\n  const passdedMenber = checkPost?.data[\"data\"].members;\n\n  React.useEffect(() => {\n    dispatch(postActions.isMainPage(false));\n    dispatch(postActions.whatPage(\"postDetail\"));\n    const CheckPost = async () => {\n      try {\n        const result = await apis.detailPost(post_id);\n        setCheckPost(result);\n        // console.log(result);\n        setIsme(result.data.data.userStatus);\n        setProjectStatus(result.data.data.post.projectStatus);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    CheckPost();\n    // dispatch(pageCheckAction.getPageCheck(`/postdetail/${post_id}`));\n  }, [\n    bookmark,\n    applyStatusModal,\n    recruitmentFinish,\n    exileStatusModal,\n    applyUserModal,\n    projectStatus,\n    applyValue,\n  ]);\n\n  //북마크 토글\n  const ToggleBookMark = () => {\n    const bookMark = async () => {\n      try {\n        const result = await apis.bookMarkChecked(post_id);\n        setBookmark(!bookmark);\n      } catch (err) {\n        console.log(err.response);\n        Swal.fire(\"로그인이 필요합니다!\", \"\", \"warning\");\n      }\n    };\n    bookMark();\n  };\n\n  return (\n    <React.Fragment>\n      <DetailMedia>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <Grid\n            display=\"flex\"\n            justifyContent=\"center\"\n            maxWidth=\"1400px\"\n            height=\"100%\"\n            border=\"5px solid #C4C4C4\"\n            margin=\"40px auto\"\n            boxShadow=\"0px 0px 10px #172D40\"\n            borderRadius=\"30px\"\n          >\n            <LeftBanner />\n\n            <Grid margin=\"46px 85px 0px\" position=\"relative\">\n              <ContainerMedia>\n                <BookMark\n                  userId={userId}\n                  postUserId={postUserId}\n                  ToggleBookMark={ToggleBookMark}\n                  passedData={passedData}\n                />\n                <TitleDetail passedData={passedData} />\n                <Grid margin=\"10px auto\">\n                  <Grid display=\"flex\">\n                    <ApplicantDetail passdedMenber={passdedMenber} />\n                  </Grid>\n                  <Grid margin=\"10px auto\">\n                    {userId === postUserId &&\n                      passedData?.projectStatus === \"모집중\" && (\n                        <Grid position=\"relative\" width=\"100%\">\n                          <Grid\n                            position=\"absolute\"\n                            right=\"20px\"\n                            width=\"120px\"\n                            padding=\"10px\"\n                          >\n                            <ApplyStatusModal\n                              applyStatusModal={applyStatusModal}\n                              setApplyStatusModal={setApplyStatusModal}\n                              postId={post_id}\n                            />\n                            <ExileUserModal\n                              applyStatusModal={exileStatusModal}\n                              setApplyStatusModal={setExileStatusModal}\n                              postId={post_id}\n                              postUserId={postUserId}\n                            ></ExileUserModal>\n                          </Grid>\n                        </Grid>\n                      )}\n                    <Grid>\n                      <FlexMedia>\n                        <DateDetail passedData={passedData} />\n                        <StackDetail passedData={passedData} />\n                      </FlexMedia>\n                    </Grid>\n                    <Grid>\n                      <Grid display=\"flex\">\n                        <Grid>\n                          <TotalMemberDetail passedData={passedData} />\n                        </Grid>\n                        <Grid>\n                          <FlexMedia>\n                            {passedData?.projectStatus === \"종료\" &&\n                              passedData?.frontUrl !== \"null\" && (\n                                <Grid\n                                  display=\"flex\"\n                                  width=\"200px\"\n                                  margin=\"0px 0px 5px\"\n                                  alignItems=\"center\"\n                                >\n                                  <Grid>\n                                    <Text>Frontend</Text>\n                                  </Grid>\n                                  <Grid>\n                                    <UrlButton\n                                      onClick={() => {\n                                        goFrontPage();\n                                      }}\n                                    >\n                                      프론트URL\n                                    </UrlButton>\n                                  </Grid>\n                                </Grid>\n                              )}\n                            {passedData?.projectStatus === \"종료\" &&\n                              passedData?.backUrl !== \"null\" && (\n                                <Grid\n                                  display=\"flex\"\n                                  width=\"200px\"\n                                  alignItems=\"center\"\n                                >\n                                  <Grid>\n                                    <Text>Backend</Text>\n                                  </Grid>\n                                  <Grid>\n                                    <Grid>\n                                      <UrlButton\n                                        onClick={() => {\n                                          goBackPage();\n                                        }}\n                                      >\n                                        백엔드URL\n                                      </UrlButton>\n                                    </Grid>\n                                  </Grid>\n                                </Grid>\n                              )}\n                          </FlexMedia>\n                          {userId === postUserId &&\n                            passedData?.projectStatus === \"모집중\" && (\n                              <Grid\n                                display=\"flex\"\n                                width=\"180px\"\n                                margin=\"auto 0 auto auto\"\n                                justifyContent=\"flex-end\"\n                              >\n                                <ButtonMedia>\n                                  <Btn common onClick={applyStatusModalOpen}>\n                                    신청 현황\n                                  </Btn>\n                                  <Btn common onClick={exileStatusModalOpen}>\n                                    팀원 강퇴\n                                  </Btn>\n                                </ButtonMedia>\n                              </Grid>\n                            )}\n                        </Grid>\n                      </Grid>\n                      <StatusDetail passedData={passedData} />\n                      <UrlDetail passedData={passedData} />\n                      <ContentDetail passedData={passedData} />\n                    </Grid>\n\n                    <Grid>\n                      {userId === postUserId ? (\n                        <PosterButton\n                          passedData={passedData}\n                          applyUserModalOpen={applyUserModalOpen}\n                          applyUserModal={applyUserModal}\n                          setApplyUserModal={setApplyUserModal}\n                          applyValue={applyValue}\n                          post_id={post_id}\n                          passdedMenber={passdedMenber}\n                          edit_status={edit_status}\n                          statusCheck={statusCheck}\n                        />\n                      ) : (\n                        <Grid textAlign=\"center\">\n                          <ApplicantButton\n                            passedData={passedData}\n                            isme={isme}\n                            applyUserModalOpen={applyUserModalOpen}\n                            applyUserModal={applyUserModal}\n                            setApplyUserModal={setApplyUserModal}\n                            applyValue={applyValue}\n                            post_id={post_id}\n                            passdedMenber={passdedMenber}\n                            passedUserStatus={passedUserStatus}\n                            statusCheck={statusCheck}\n                          />\n                        </Grid>\n                      )}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </ContainerMedia>\n            </Grid>\n          </Grid>\n        )}\n      </DetailMedia>\n    </React.Fragment>\n  );\n};\nconst DetailMedia = styled.div`\n  @media screen and (max-width: 500px) {\n    width: 97%;\n  }\n`;\n\nconst ContainerMedia = styled.div`\n  @media screen and (max-width: 500px) {\n    padding: 10px;\n  }\n`;\n\nconst Btn = styled.button`\n  width: 100px;\n  height: 30px;\n  border: 1px solid #172d40;\n  border-radius: 50px;\n  cursor: pointer;\n  color: #172d40;\n  background-color: #fff;\n  margin-left: 2px;\n  &:hover {\n    color: white;\n    background-color: #172d40;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n`;\n\nconst ButtonMedia = styled.p`\n  display: flex;\n  margin: auto;\n  width: 90%;\n  @media screen and (max-width: 1500px) {\n    display: flex;\n    width: 90%;\n    margin: auto;\n  }\n`;\n\nconst FlexMedia = styled.div`\n  display: flex;\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    font-size: 2px;\n  }\n`;\n\nconst UrlMedia = styled.div`\n  display: flex;\n  @media screen and (max-width: 600px) {\n    font-size: 2px;\n    width: 120px;\n  }\n`;\n\nconst UrlButton = styled.button`\n  width: 100px;\n  height: 23px;\n  font-size: 15px;\n  margin: auto 10px;\n  padding: 0 0 2px 0;\n  border: 1px solid #172d40;\n  border-radius: 50px;\n  align-items: center;\n  text-align: center;\n  color: white;\n  background-color: #172d40;\n  cursor: pointer;\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PostDetail;\n","/* eslint-disable */\r\nimport Prism from \"prismjs\";\r\n// 여기 css를 수정해서 코드 하이라이팅 커스텀 가능\r\nimport \"prismjs/themes/prism.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\n\r\nimport \"@toast-ui/editor-plugin-code-syntax-highlight/dist/toastui-editor-plugin-code-syntax-highlight.css\";\r\nimport codeSyntaxHighlight from \"@toast-ui/editor-plugin-code-syntax-highlight\";\r\n\r\nimport \"tui-color-picker/dist/tui-color-picker.css\";\r\nimport \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\r\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\r\nimport React, { useState, useRef, createRef } from \"react\";\r\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\r\nimport { apis } from \"../lib/axios\";\r\nimport { result } from \"lodash\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { history } from \"../redux/configureStore\";\r\n\r\nexport default function Writer(props) {\r\n  const dispatch = useDispatch();\r\n  // console.log(props);\r\n  // const editorRef = createRef();\r\n  const editorRef = useRef();\r\n\r\n  const [progress, setProgress] = useState(0);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imgBase64, setImgBase64] = React.useState([]); // 파일 base64\r\n  const [imgData, setImageData] = React.useState();\r\n  const [imgurl, setImgurl] = React.useState();\r\n  const [text, setText] = React.useState();\r\n  const [mydata, setMydata] = React.useState();\r\n\r\n  // React.useEffect(() => {\r\n  //   if (editorRef.current) {\r\n  //     editorRef.current.getInstance().removeHook(\"addImageBlobHook\");\r\n  //     editorRef.current\r\n  //       .getInstance()\r\n  //       .addHook(\"addImageBlobHook\", (blob, callback) => {\r\n  //         (async () => {\r\n  //           try {\r\n  //             // console.log(blob);\r\n  //             let reader = new FileReader();\r\n  //             reader.readAsDataURL(blob); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n  //             // 파일 상태 업데이트\r\n  //             reader.onloadend = () => {\r\n  //               // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n  //               const base64 = reader.result;\r\n\r\n  //               //await이 중괄호 안에 쓰일 수 없기 때문에 async사용\r\n  //               const upload = async () => {\r\n  //                 // console.log(\"2차 관문\", base64);\r\n  //                 // 서버로부터 이미지 주소 받아옴\r\n  //                 const url = await apis.addMyImage(base64);\r\n  //                 const resulturl = `http://15.165.159.211${url.data.data.imageUrl}`;\r\n  //                 setImgurl(resulturl);\r\n  //                 // console.log(resulturl);\r\n  //                 callback(resulturl, \"alt text\");\r\n  //                 return resulturl;\r\n  //               };\r\n  //               upload();\r\n  //               // callback(resulturl, \"alt text\");\r\n  //             };\r\n  //           } catch (err) {\r\n  //             console.log(err.response);\r\n  //           }\r\n  //         })();\r\n  //         return false;\r\n  //       });\r\n  //   }\r\n  //   return () => {};\r\n  // }, [editorRef]);\r\n\r\n  const uploadImage = (blob, callback) => {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(blob); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n    // 파일 상태 업데이트\r\n    reader.onloadend = () => {\r\n      // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n      const base64 = reader.result;\r\n      // console.log(base64);\r\n      setImgBase64(base64);\r\n      // console.log(\"1차 관문\", imgBase64);\r\n\r\n      const upload = async () => {\r\n        // console.log(\"2차 관문\", base64);\r\n        // 서버로부터 이미지 주소 받아옴\r\n        const url = await apis.addMyImage(base64);\r\n\r\n        const resulturl = `https://scopewith.com${url.data.data.imageUrl}`;\r\n        callback(resulturl, \"alt text\");\r\n      };\r\n      upload();\r\n    };\r\n  };\r\n\r\n  // const uploadImage = (blob) => {\r\n  //   let reader = new FileReader();\r\n  //   reader.readAsDataURL(blob); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n  //   // 파일 상태 업데이트\r\n  //   reader.onloadend = () => {\r\n  //     // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n  //     const base64 = reader.result;\r\n  //     // console.log(base64);\r\n  //     // setImgBase64(base64);\r\n  //     apis\r\n  //       .addMyImage(base64)\r\n  //       .then((res) => {\r\n  //         const result = res.data.data.imageUrl;\r\n  //         // console.log(result);\r\n  //         setImgurl(`![](http://localhost:8080${result})`);\r\n  //         const resulturl = `![](http://localhost:8080${result})`;\r\n  //         console.log(resulturl);\r\n  //         return resulturl;\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(err.response);\r\n  //       });\r\n  //   };\r\n  // };\r\n\r\n  React.useEffect(() => {\r\n    const userId = props.location.state.userId;\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await apis.getMypage(userId);\r\n        // console.log(result);\r\n        setMydata(result.data.data);\r\n      } catch (err) {\r\n        // console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onChangeEditorTextHandler = () => {\r\n    // console.log(editorRef.current.getInstance().getMarkdown());\r\n    setText(editorRef.current.getInstance().getMarkdown());\r\n  };\r\n\r\n  const write = () => {\r\n    const writing = async () => {\r\n      try {\r\n        // console.log(props[0]);\r\n        const userId = props.location.state.userId;\r\n        const result = await apis.writeMyIntroduction(userId, text);\r\n        // console.log(result);\r\n        history.push(`/mypage/${userId}`);\r\n      } catch (err) {\r\n        const userId = props.location.state.userId;\r\n        // console.log(err);\r\n        // window.alert(\"작성 형식이 올바르지 않습니다.\");\r\n        Swal.fire(\"내용이 같거나 없습니다!\", \"\", \"question\");\r\n      }\r\n    };\r\n    writing();\r\n  };\r\n  const introduction = mydata?.user.introduction;\r\n  // console.log(introduction);\r\n  return (\r\n    <Grid maxWidth=\"1400px\" margin=\"auto\">\r\n      {introduction === null && (\r\n        <>\r\n          <button\r\n            onClick={() => {\r\n              write();\r\n            }}\r\n          >\r\n            작성하기\r\n          </button>\r\n\r\n          <Editor\r\n            previewStyle=\"vertical\"\r\n            plugins={[\r\n              colorSyntax,\r\n              [codeSyntaxHighlight, { highlighter: Prism }],\r\n            ]}\r\n            onChange={onChangeEditorTextHandler}\r\n            ref={editorRef}\r\n            height=\"79vh\"\r\n            // initialValue={introduction}\r\n            hooks={{\r\n              addImageBlobHook: async (blob, callback) => {\r\n                uploadImage(blob, callback);\r\n                // callback(img_url, \"alt_text\");\r\n              },\r\n            }}\r\n          ></Editor>\r\n        </>\r\n      )}\r\n      {introduction && (\r\n        <>\r\n          <Editor\r\n            previewStyle=\"vertical\"\r\n            plugins={[\r\n              colorSyntax,\r\n              [codeSyntaxHighlight, { highlighter: Prism }],\r\n            ]}\r\n            onChange={onChangeEditorTextHandler}\r\n            ref={editorRef}\r\n            height=\"79vh\"\r\n            initialValue={introduction}\r\n            hooks={{\r\n              addImageBlobHook: async (blob, callback) => {\r\n                uploadImage(blob, callback);\r\n                // callback(img_url, \"alt_text\");\r\n              },\r\n            }}\r\n          ></Editor>\r\n          <Grid display=\"flex\" margin=\"0 0 0 72% \">\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              뒤로가기\r\n            </Button>\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                write();\r\n              }}\r\n            >\r\n              수정하기\r\n            </Button>\r\n          </Grid>\r\n        </>\r\n      )}\r\n      {!introduction && (\r\n        <>\r\n          <Grid display=\"flex\" margin=\"0 0 0 72% \"></Grid>\r\n          <Editor\r\n            previewStyle=\"vertical\"\r\n            plugins={[\r\n              colorSyntax,\r\n              [codeSyntaxHighlight, { highlighter: Prism }],\r\n            ]}\r\n            onChange={onChangeEditorTextHandler}\r\n            ref={editorRef}\r\n            height=\"79vh\"\r\n            initialValue={introduction}\r\n            hooks={{\r\n              addImageBlobHook: async (blob, callback) => {\r\n                uploadImage(blob, callback);\r\n                // callback(img_url, \"alt_text\");\r\n              },\r\n            }}\r\n          ></Editor>\r\n          <Grid display=\"flex\" margin=\"0 0 0 2% \">\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              뒤로가기\r\n            </Button>\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                write();\r\n              }}\r\n            >\r\n              작성하기\r\n            </Button>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Button } from \"../elements/Index\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport ImgType from \"../shared/ImgType\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { history } from \"../redux/configureStore\";\n\nconst Footer = props => {\n  const userType = props.userInfo.userPropensityType;\n  const userId = props.userInfo.userId;\n  const isToken = document.cookie;\n  const nowPage = useSelector(state => state.post.whatPage.now);\n\n  const goToMypage = () => {\n    history.push(`/`);\n    setTimeout(() => {\n      history.push(`/mypage/${userId}`);\n    }, 50);\n  };\n  const goToAddPost = () => {\n    history.push(\"/postadd\");\n  };\n  const goToHome = () => {\n    if (nowPage === \"mainPage\") {\n      window.scrollTo({\n        behavior: \"smooth\",\n        left: 0,\n        top: 0,\n      });\n    }\n    history.push(\"/\");\n  };\n\n  React.useLayoutEffect(() => {}, [userType]);\n  return (\n    <Wrap>\n      <Grid display=\"flex\" boxShadow=\"0 0 3px #aaa\">\n        {userType && isToken && (\n          <FooterBtn onClick={goToHome}>\n            <HomeIcon sx={{ color: \"#17334a\", fontSize: 40 }} />\n          </FooterBtn>\n        )}\n\n        {userType && isToken && (\n          <FooterBtn\n            onClick={() => {\n              if (!isToken) {\n                window.alert(\"로그인 후 작성 가능합니다.\");\n              } else {\n                goToAddPost();\n              }\n            }}\n          >\n            <AddIcon sx={{ color: \"#17334a\", fontSize: 40 }} />\n          </FooterBtn>\n        )}\n\n        {!isToken && (\n          <FooterHomeBtn onClick={goToHome}>\n            <HomeIcon sx={{ color: \"white\", fontSize: 40, borderRadius: 40 }} />\n          </FooterHomeBtn>\n        )}\n\n        {userType && isToken && (\n          <FooterBtn onClick={goToMypage}>\n            <ImgType type={userType} />\n          </FooterBtn>\n        )}\n      </Grid>\n    </Wrap>\n  );\n};\nconst Wrap = styled.div`\n  display: none;\n  background-color: white;\n  border-radius: 10px 10px 0 0;\n  box-shadow: 0px 0px 10px #ddd;\n  @media screen and (max-width: 767px) {\n    width: 100vw;\n    margin: auto;\n    height: 7%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* background-color: rgba(255, 255, 255, 0); */\n    z-index: 10;\n    position: fixed;\n    bottom: 0;\n  }\n`;\n\nconst FooterHomeBtn = styled.div`\n  width: 55px;\n  height: 55px;\n  margin: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: #17334a;\n  border-radius: 50px;\n  box-shadow: 0px 0px 1px #17334a;\n`;\n\nconst FooterBtn = styled.div`\n  width: 33%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\nexport default Footer;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { history } from \"../redux/configureStore\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div style={{ alignItems: \"center\" }}>\r\n      <NotFoundImg src=\"/img/소개글너구리.png\" alt=\"img\" />\r\n      <NoIntroductionText>주소가 올바르지 않습니다.</NoIntroductionText>\r\n      <Exit\r\n        onClick={() => {\r\n          history.goBack();\r\n        }}\r\n      >\r\n        뒤로가기\r\n      </Exit>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Exit = styled.button`\r\n  margin: 0px auto 15px 45%;\r\n  height: 40px;\r\n  width: 132px;\r\n  background-color: white;\r\n  border: 1px solid #d1d1d1;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: black;\r\n    background-color: #d1d1d1;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst NoIntroductionText = styled.p`\r\n  color: #737373;\r\n  font-size: 25px;\r\n  width: auto;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst NotFoundImg = styled.img`\r\n  width: 50%;\r\n  height: 50%;\r\n  object-fit: cover;\r\n  position: relative;\r\n  margin-left: 20%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nexport default NotFound;\r\n","/* eslint-disable */\nimport { Grid } from \"../elements/Index\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userCreators } from \"../redux/modules/user\";\n\nimport MainPage from \"../pages/MainPage\";\nimport KakaoRedirect from \"./kakaoRedirect\";\nimport GitHubRedirect from \"./GitHubRedirect\";\n\nimport MyPageInfo from \"../components/MyPageInfo\";\nimport PostWrite from \"../pages/PostWrite\";\nimport PostEdit from \"../pages/PostEdit\";\nimport PostDetail from \"../pages/PostDetail\";\nimport Markdown from \"../components/Markdown\";\nimport MarkdownRead from \"../components/MarkdownRead\";\nimport Header from \"../components/Header\";\nimport Message from \"../components/headerFunction/Message\";\nimport Footer from \"../components/Footer\";\nimport NotFound from \"../shared/NotFound\";\nimport { ContactSupportOutlined } from \"@material-ui/icons\";\n\nfunction App() {\n  const isLogin = useSelector(state => state.user.isLogin);\n  const userInfo = useSelector(state => state.user);\n  const isCookie = document.cookie.split(\"=\")[1];\n  const dispatch = useDispatch();\n\n  React.useLayoutEffect(() => {\n    if (isCookie) {\n      dispatch(userCreators.myUserAPI());\n    }\n  }, [isLogin, isCookie]);\n\n  return (\n    <React.Fragment>\n      <div className=\"App\">\n        <Header />\n        <ConnectedRouter history={history}>\n          <Switch>\n            <Route path=\"/\" exact component={MainPage}></Route>\n            {/* <Route path=\"/message\" exact component={Message}></Route> */}\n            <Route path=\"/mypage/:id\" exact component={MyPageInfo}></Route>\n            <Route path=\"/postadd\" exact component={PostWrite}></Route>\n            <Route path=\"/postedit/:id\" exact component={PostEdit}></Route>\n            <Route path=\"/addmarkdown\" exact component={Markdown}></Route>\n            <Route path=\"/postdetail/:id\" exact component={PostDetail}></Route>\n            <Route\n              path=\"/user/kakao/callback\"\n              exact\n              component={KakaoRedirect}\n            ></Route>\n            <Route\n              path=\"/user/github/callback\"\n              exact\n              component={GitHubRedirect}\n            ></Route>\n            <Route component={NotFound}></Route>\n          </Switch>\n        </ConnectedRouter>\n        <Footer userInfo={userInfo} />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./shared/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configureStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}