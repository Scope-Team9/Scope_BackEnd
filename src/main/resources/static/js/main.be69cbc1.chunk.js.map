{"version":3,"sources":["shared/Cookie.js","lib/axios.js","redux/modules/user.js","redux/modules/post.js","redux/modules/stack.js","redux/modules/postadd.js","redux/modules/sort.js","redux/modules/bookRecommend.js","redux/modules/infinity.js","redux/modules/applyProject.js","redux/modules/myPage.js","redux/modules/pageCheck.js","redux/configureStore.js","elements/Grid.js","elements/Image.js","elements/Text.js","elements/Input.js","elements/Button.js","images/Logo.png","components/HeaderLeft.js","components/propensityTest/TestOne.js","components/propensityTest/TestTwo.js","components/propensityTest/TestThree.js","components/propensityTest/TestFour.js","components/propensityTest/TestFive.js","components/propensityTest/TestSix.js","components/propensityTest/TestSeven.js","components/propensityTest/TestEight.js","components/propensityTest/TestNine.js","components/propensityTest/TestResult.js","components/propensityTest/Progress.js","shared/ImgType.js","components/propensityTest/PropensityTest.js","components/LoginModal.js","components/HeaderRight.js","components/Header.js","elements/LogoButton.js","components/Stack.js","components/PostStacks.js","components/applyUserModal/Apply.js","components/applyUserModal/Cancel.js","components/applyUserModal/TeamExit.js","components/applyUserModal/SubmitUrl.js","components/applyUserModal/Liked.js","components/ApplyUserModal.js","components/Post.js","shared/Spinner.js","components/PostList.js","components/EmailAuth.js","components/carousel/MainSlide.js","components/filter/SortText.js","components/filter/Sort.js","pages/MainPage.js","shared/kakaoRedirect.js","shared/GitHubRedirect.js","components/mypagePost/MypagePostList.js","components/MarkdownRead.js","components/myPage/Banners.js","components/myPage/card/CardImgs.js","modal/DeleteUserModal.js","components/myPage/card/CardUserInfo.js","components/myPage/MypageCard.js","components/myPage/TypeResultTest.js","components/myPage/filter/MyFilter.js","components/myPage/MypageFilter.js","components/MyPageInfo.js","images/PostAdd.jpg","components/postWrite/LeftBanner.js","components/postWrite/rightContents/TitleWrite.js","components/postWrite/rightContents/StackWrite.js","components/postWrite/rightContents/DateWrite.js","components/postWrite/rightContents/TotalMember.js","components/postWrite/rightContents/ContentWrite.js","components/postWrite/rightContents/GenerateButton.js","components/postWrite/rightContents/UrlWrite.js","components/postWrite/RightWrite.js","components/AddPost.js","pages/PostWrite.js","redux/modules/postdetail.js","images/PostDetail.png","components/postEdit/LeftBanner.js","components/postEdit/rightContentsEdit/TitleEdit.js","components/postEdit/rightContentsEdit/StackEdit.js","components/postEdit/rightContentsEdit/TotalMemberEdit.js","components/postEdit/rightContentsEdit/StatusEdit.js","components/postEdit/rightContentsEdit/UrlEdit.js","components/postEdit/rightContentsEdit/ContentEdit.js","components/postEdit/rightContentsEdit/DateEdit.js","components/postEdit/rightContentsEdit/EditButton.js","pages/PostEdit.js","components/ApplyStatusModal.js","components/postDetail/leftBanner.js","components/postDetail/rightContents/TitleDetail.js","components/modal/ExileUserModal.js","components/ProjectJoinUser.js","components/postDetail/rightContents/ApplicantDetail.js","components/postDetail/rightContents/StackDetail.js","components/postDetail/rightContents/DateDetail.js","components/postDetail/rightContents/StatusDetail.js","components/postDetail/rightContents/UrlDetail.js","components/postDetail/rightContents/ContentDetail.js","components/postDetail/rightContents/BookMark.js","components/postDetail/rightContents/ApplicantButton.js","components/postDetail/rightContents/PosterButton.js","components/postDetail/rightContents/TotalMemberDetail.js","pages/PostDetail.js","components/Markdown.js","components/Footer.js","shared/NotFound.js","shared/App.js","reportWebVitals.js","index.js"],"names":["setCookie","name","value","exp","date","Date","setTime","getTime","document","cookie","toUTCString","deleteCookie","instance","axios","create","baseURL","headers","accept","withCredentials","interceptors","request","use","config","cookieSplit","split","Authorization","err","console","log","apis","kakaoLogin","code","get","githubLogin","register","registerInfo","post","checkEmail","email","checkNick","nickName","signup","myUser","editTest","userId","testInfo","applyUser","postId","aceeptOffer","acceptInfo","applyProject","comment","cancelProject","delete","exitTeam","strterLike","likeUsers","sumbitUrl","urls","getMember","getUserInfo","getAllUserList","getPost","stack","sort","reBook","bookMarkChecked","getMypage","writeMyIntroduction","introduction","projectAssessmentPost","editUserInfo","data","postInfo","FIRST_USER","SET_USER","LOG_OUT","EMAIL","MODAL","firstUser","createAction","user","setUser","logOut","modal","handleActions","state","action","produce","draft","payload","snsId","techStack","sigunupModalState","nickname","isLogin","memberPropensityType","userPropensityType","isEmail","userID","techstack","userList","userfirst","userCreators","kakaologinMiddleware","pageGo","dispatch","getState","history","then","res","msg","id","push","userCookie","token","mail","catch","Swal","fire","githubLoginMiddleware","signupMiddleware","signupInfo","testUserMiddleWare","emailCheckMiddleWare","window","alert","response","nickCheckMiddleWare","editTestMiddleware","myUserAPI","GET_POST","LOADING","MAINPAGE","WHATPAGE","PAGECHECK","getPosts","isLoading","loading","isMainPage","whatPage","pageCheck","stacks","sorts","paging","posts","render","mainpage","page","pre","now","isLoaded","infinityposts","postActions","getPostAPI","_paging","infinity","rebook","GET_STACK","SET_STACK","GET_STACK2","SET_STACK2","getStack","setStack","getStack2","setStack2","st","something","result","filter","p","React","Java","JavaScript","Python","Node","cpp","Flask","Django","Vue","Spring","php","Swift","Kotlin","TypeScript","stackAction","ADD_POST","addPosts","card","list","title","summary","contents","techStackList","totalMember","projectstatus","startdate","enddate","postAddActions","addPost","goBack","GET_SORT","getSort","sortAction","GET_RB","getRb","RecommendBook","bookRecommendAction","GET_PAGE","GET_SCROLL","start","next","currentScroll","APPLY_PROJEFCT","applyUsers","testUsers","applicationDate","applyCreators","users","PostId","userIds","GET_MYPAGE","GET_PAGECHECK","getPageCheck","pageCheckAction","createBrowserHistory","rootReducer","combineReducers","User","apply","ApplyUser","Post","Stack","Card","Sort","ReBook","Infinitys","mypage","Mypage","pagecheck","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","Grid","props","children","_onClick","styles","margin","padding","width","height","bg","display","justifyContent","alignItems","flexDirection","flexWrap","textAlign","border","borderRadius","borderTop","borderBottom","borderLeft","borderRight","overflow","overflowX","overflowY","minWidth","maxWidth","minHeight","maxHeight","boxShadow","backgroundColor","lineHeight","boxSizing","position","top","bottom","left","right","hover","zIndex","bgImg","verticalAlign","cursor","opacity","GridBox","onClick","defaultProps","potision","styled","div","hover_font","Image","shape","src","size","ImageCircle","CardImage","AspectOutter","AspectInner","MainInner","Fragment","ImageDefault","Text","color","bold","align","underline","family","decoration","ElText","span","Input","label","placeholder","_onChange","onSubmit","type","multiLine","edit","editValue","defaulValue","borderbottom","maxLength","backgroundImage","innerRef","inputFocusOutline","inputFocusBorder","inputFocusBoxShadow","fontSize","ElTextarea","rows","onChange","ElInput","ref","onKeyPress","e","key","is_submit","textarea","input","Button","isId","isTest","text","isValue","disabled","isChecked","hoverBg","hoverCl","common","isActive","TestButton","Common","ElButton","isFloat","button","LogoDiv","HeaderLeft","style","Logo","TestOne","handleUserCreate","handleMemberCreate","useState","TestData","userbtn","btn","question","nowClickU","setNowClickU","memberbtn","nowClickMB","setNowClickMB","map","idx","active","btnUserId","target","stateItem","btnMemberId","TestTwo","TestThree","TestFour","TestFive","TestSix","TestSeven","TestEight","TestNine","TestResult","myUserType","useSelector","resultType","usertype","userType","useLayoutEffect","text1","text2","text3","text4","ProgressBar","HighLight","ArrowBubbleTwo","Progress","currentStep","ImgType","object_fit","img","imges","setResult","useEffect","item","Img","StepImgBox","TestImg","Header","CloseBox","PropensityTest","isToken","useDispatch","userInfo","setpage","setUserPropensityType","setMemberPropensityType","preUserPropensityType","setPreUserPropensityType","preMemberPropensityType","setPreMemberPropensityType","answer","sx","TestClose","location","reload","teststep","step","testresult","toPopMy","pop","topopYou","preMy","preYou","realSnsId","String","realUserId","testUpdateInfo","Title","h1","LoginModalWrap","SignupModalWrap","GithubBtn","KakaoBtn","LoginModal","regExpNick","showModal","setShowModal","setNickName","setTeckstack","nameDup","setNameDup","test","setTest","customStyles","control","multiValue","multiValueLabel","multiValueRemove","Dialog","scroll","open","isMulti","options","className","classNamePrefix","arr","length","undefined","nickCheck","preSignUP","href","setTimeout","close","HeaderWrapper","ButtonWrap","IconWrap","UserImg","Btn","HeaderRight","doLogout","setDoLogOut","replace","Wrap","BorderRadius","IMGS","LogoButton","stack2","setArr","Object","entries","do","values","find","r","result2","Filter","nowStack","alreadyChecked","setStacks","concat","deleteCheck","arrStack","PostStacks","reduxstack","ModalWrap","Apply","setComment","modalClose","Contents","Cancel","TeamExit","SubmitUrl","front","setFront","back","setBack","regex","frontUrl","backUrl","Liked","likes","setLikes","passdedMenber","isMe","projectStatus","myPage","statusCheck","toggleModal","stopPropagation","a","val","Number","doSetAssessment","userLiked","ApplyUserModal","applyUserModal","setApplyUserModal","applyValue","passedUserStatus","applyUserModalOpen","setPage","status","onClose","memo","DescriptionBox","DDescriptionBox","CardHeader","ProjectState","ProductImgWrap","myUserId","setApplyValue","member","setMember","memberIdAndAssessment","assessment","totalmember","recruitmentMember","isWriter","writerEquals","getMembers","didAssessment","pathname","startDate","endDate","IMG","Spinner","alt","PostWrap","NoIntroduction","NoIntroductionText","PostList","setPost","setLoading","Render","findStack","itemStack","i","j","slice","Dec","EmailAuth","setEmail","setModal","authEmail","fetchData","MainSlide","loginShowModal","setLoginShowModal","emailShowModal","setEmailShowModal","useHistory","dots","autoplay","autoplaySpeed","draggable","infinite","lazyLoad","speed","slidesToShow","centerMode","centerPadding","Slide","slide","division","ClickEvent","EmailClose","Filtering","SortText","FilterBox","isLoginUser","clickCheck","setClickCheck","getItem","setPaging","onclickRb","Inside","InsideCard","Stacks","BtnFeedback","SpinnerLocation","Scrollup","MainPage","sortC","reBookC","useInView","inView","pPaging","setPPaging","nowFilter","postList","scrollTo","behavior","KakaoRedirect","URL","searchParams","MypagePostList","useParams","myCards","newMyCards","MarkdownWrap","ContentPage","textData","initialValue","BannerImg","BannerAnimals","Banners","myData","setMyData","CardImgs","myType","deleteUser","MyInfoText1","MyInfoText2","Line","hr","CardUserInfo","marginLeft","mydata","recruitment","inProgress","end","isMyMypage","Cards","Exit","MypageCard","setEditMyProfile","deleteModal","setDeleteModal","base","isFocused","borderWidth","borderColor","editMyProfile","WebkitAppearance","MozAppearance","appearance","outlineStyle","defaultValue","marginTop","userData","userTechStack","onClick2","fn_submit","DeleteUserModal","MyResultDiv","MyResultText","GotoTest","MyResultText2","MyResultTextBold","ConfirmEmail","WhiteP","TestWrap","YourName","TypeResultTest","type2","type3","params","EditTest","testmodal","FilterDiv","MyFilter","setStatus","MypageFilter","filters","onClicks","Banner","FilterWrap","IntroduceWrap","NoIntroductionText2","IntroduceBtn","MyPageInfo","match","setFilter","setMydata","setTestModal","setAssessment","recruitmentProject","inProgressProject","bookMarkProject","bookmark","endProject","goMypage","float","MarkdownRead","SideBarImg","LeftBanner","TitleMedia","TitleWrite","setTitle","SubDescription","StackMedia","StackWrite","stackSelect","handleChange","useCallback","inputValue","removedValue","setTectstack","temp","index","tamarray","setTechStackList","formatTech","components","animatedComponents","SDatePicker","DatePicker","DateMedia","DateWrite","dateFormat","selected","setStartdate","locale","ko","minDate","setEnddate","TotalMemberMedia","TotalMember","b","setTotalmember","TextArea","ContentMedia","ContentWrite","setContents","GenerateButton","submitHandler","UrlWrite","setChatUrl","RightWrite","makeAnimated","chatUrl","setDate","getDate","scopeIndex","WritePost","PostWrite","AddPost","EDIT_POST","DELETE_POST","STATUS_POST","postDetailActions","editcard","post_id","editPost","TitleEdit","StackEdit","orderByLabel","localeCompare","orderOptions","v","isFixed","setValue","isClearable","some","totalMemberEdit","projectMembers","StatusMedia","StatusEdit","projectStatused","setProjectstatus","UrlEdit","ContentEdit","DateEdit","selectsStart","placeholderText","selectsEnd","EditMedia","EditButton","editHandler","PostEdit","checkPost","setCheckPost","setSummary","loaded","setLoaded","detailPost","CheckPost","TotalMemberEdit","scope_edit","CommentBubble","ApplyStatusModal","applyedUsers","setApplyUsers","acceptButton","setAcceptButton","applyStatusModal","setApplyStatusModal","acceptUser","acceptOffer","cancelUser","bannerImg","TitleDetail","passedData","Texts","ExileUserModal","postUserId","serachTeamUser","confirm","exileUser","Writer","number","JoinUserMedia","ProjectJoinUser","ApplicantDetail","StackBox","StackDetail","DateBox","DateDetail","StatusDetail","UrlMedia","UrlDetail","Content","ContentDetail","BookMarkMedia","Bookmark","ToggleBookMark","bookmarkChecked","ApplicantButton","isme","PosterButton","DeletePost","deletePost","edit_status","TotalMedia","TotalMemberDetail","ContainerMedia","ButtonMedia","FlexMedia","UrlButton","PostDetail","setBookmark","exileStatusModal","setExileStatusModal","recruitmentFinish","setRecruitmentFinish","setProjectStatus","setIsme","userStatus","members","BookMark","bookMark","postion","editstatus","statusPost","statusDoing","editorRef","useRef","setImgBase64","setText","uploadImage","blob","callback","reader","FileReader","readAsDataURL","onloadend","base64","addMyImage","url","resulturl","imageUrl","upload","onChangeEditorTextHandler","current","getInstance","getMarkdown","write","writing","previewStyle","plugins","colorSyntax","codeSyntaxHighlight","highlighter","Prism","hooks","addImageBlobHook","FooterBtn","Footer","NotFoundImg","NotFound","App","isCookie","path","exact","component","Markdown","GitHubRedirect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.be69cbc1.chunk.js","sourcesContent":["// const getCookie = (name) => {\n//   document.cookie;\n// };\n\nconst setCookie = (name, value, exp = 3) => {\n  let date = new Date();\n  date.setTime(date.getTime() + exp * 1000 * 60 * 60);\n\n  document.cookie = `${name}=${value}; expires=${date.toUTCString()}; path=/`;\n};\n\nconst deleteCookie = (name) => {\n  document.cookie = name + \"=; expires=Thu, 01 Jan 1999 00:00:10 GMT; path=/\";\n};\n\nexport { setCookie, deleteCookie };\n","/* eslint-disable */\nimport axios from \"axios\";\nimport { setCookie } from \"../shared/Cookie\";\nimport { history } from \"../redux/configureStore\";\n\nexport const instance = axios.create({\n  // baseURL: \"http://localhost:3000\",\n  // baseURL: \"http://localhost:8081\",\n  // baseURL: \"http://localhost:4000\",\n  // baseURL: \"http://3.35.219.232\",\n  baseURL: \"https://scopewith.com\",\n  // baseURL: \"http://15.165.159.211\",\n  headers: {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    accept: \"application/json\",\n  },\n  withCredentials: true,\n});\n\ninstance.interceptors.request.use(\n  (config) => {\n    const cookie = document.cookie;\n    if (cookie === \"\") {\n      return config;\n    }\n\n    const cookieSplit = cookie.split(\"=\")[1];\n\n    config.headers = {\n      \"content-type\": \"application/json;charset=UTF-8\",\n      accept: \"application/json\",\n      Authorization: `Bearer ${cookieSplit}`,\n    };\n    return config;\n  },\n  (err) => {\n    console.log(err);\n  }\n);\n\nexport const apis = {\n  //회원가입 및 로그인 관련 api\n  kakaoLogin: (code) => instance.get(`/api/login/kakao?code=${code}`),\n  githubLogin: (code) => instance.get(`/api/login/github?code=${code}`),\n  register: (registerInfo) => instance.post(\"/api/signup\", registerInfo),\n  checkEmail: (email) => instance.get(`/api/login/email?email=${email}`, email),\n  checkNick: (nickName) =>\n    instance.get(`/api/login/nickname?nickname=${nickName}`, nickName),\n  signup: (registerInfo) => instance.post(\"/api/signup\", registerInfo),\n\n  // 유저 관련 api\n  myUser: () => instance.get(\"/api/myuser\"),\n  editTest: (userId, testInfo) =>\n    instance.post(`/api/test/${userId}`, testInfo),\n  applyUser: (postId) => instance.get(`/api/applicant/${postId}`),\n  aceeptOffer: (postId, acceptInfo) =>\n    instance.post(`/api/team/${postId}`, acceptInfo),\n  applyProject: (postId, comment) =>\n    instance.post(`/api/applicant/${postId}`, comment),\n  cancelProject: (postId) => instance.delete(`/api/applicant/${postId}`),\n  exitTeam: (postId) => instance.delete(`/api/team/secession/${postId}`),\n  strterLike: (postId, likeUsers) =>\n    instance.post(`/api/assessment/${postId}`, likeUsers),\n  sumbitUrl: (postId, urls) => instance.post(`/api/post/${postId}/url`, urls),\n\n  getMember: (postId) => instance.get(`/api/team/${postId}`),\n\n  getUserInfo: () => instance.get(\"/user/info\"),\n  getAllUserList: () => instance.get(\"/user/list\"),\n\n  getPost: (stack, sort, reBook) =>\n    instance.get(\n      `/api/post?filter=;;;;;;;;;;;;;;&sort=${sort}&bookmarkRecommend=${reBook}`\n    ),\n  bookMarkChecked: (postId) => instance.post(`/api/bookmark/${postId}`),\n\n  //마이페이지\n  getMypage: (userId) => instance.get(`/api/user/${userId}`),\n  writeMyIntroduction: (userId, introduction) =>\n    instance.post(`/api/user/${userId}/desc`, introduction),\n  projectAssessmentPost: (postId) => instance.get(`/api/assessment/${postId}`),\n  editUserInfo: (userId, data) => instance.post(`/api/user/${userId}`, data),\n  projectAssessmentPost: (postId) => instance.get(`/api/assessment/${postId}`),\n  authEmail: (email) => instance.get(`/api/user/email?email=${email}`),\n  deleteUser: (userId) => instance.delete(`/api/user/${userId}`),\n\n  // 상세페이지\n  addPost: (postInfo) => instance.post(`/api/post`, postInfo),\n  detailPost: (postId) => instance.get(`/api/post/${postId}`),\n  editPost: (postId, data) => instance.post(`/api/post/${postId}`, data),\n  deletePost: (postId) => instance.delete(`/api/post/${postId}`),\n  statusPost: (postId, data) =>\n    instance.post(`/api/post/${postId}/status`, data),\n  serachTeamUser: (postId) => instance.get(`/api/team/${postId}`),\n  exileUser: (postId, userId) =>\n    instance.delete(`/api/team/resignation/${postId}?userId=${userId}`),\n};\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis, instance } from \"../../lib/axios\";\nimport { setCookie } from \"../../shared/Cookie\";\nimport Swal from \"sweetalert2\";\n//액션타입\nconst FIRST_USER = \"FIRST_USER\";\nconst TEST_USER = \"TEST_USER\";\nconst SET_USER = \"SET_USER\";\nconst LOG_OUT = \"LOG_OUT\";\n\nconst EMAIL = \"EMAIL\";\n\nconst MODAL = \"MODAL\";\n\n//액션생성\nconst firstUser = createAction(FIRST_USER, (user) => ({ user }));\nconst testUser = createAction(TEST_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\n\nexport const email = createAction(EMAIL, (user) => ({ user }));\n\nexport const modal = createAction(MODAL, (user) => ({ user }));\n//초기값\nconst initialState = {\n  nickname: \"guest\",\n  snsId: null,\n  email: null,\n  userID: null,\n  techstack: [],\n  isLogin: false,\n  userList: [],\n  userfirst: false,\n  sigunupModalState: false,\n  userPropensityType: null,\n  memberPropensityType: null,\n  isEmail: false,\n};\n//카카오 로그인\nconst kakaologinMiddleware = (code, pageGo) => {\n  return function (dispatch, getState, { history }) {\n    let goPage = pageGo;\n    // console.log(goPage);\n    // console.log(\"카카오에서 받아온 코드\", code);\n\n    apis\n      .kakaoLogin(code)\n      .then((res) => {\n        // console.log(res);\n        if (res.data.msg == \"추가 정보 작성이 필요한 사용자입니다.\") {\n          // window.alert(\"추가정보 작성이 필요합니다.\");\n\n          dispatch(\n            firstUser({\n              email: res.data.data.email,\n              snsId: res.data.data.id,\n            })\n          );\n          // history.push(goPage);\n          history.push(\"/\");\n          return;\n        }\n        if (res.data.msg == \"로그인이 완료되었습니다\") {\n          let email = getState().user.isEmail;\n          let userCookie = res.data.data.token;\n          setCookie(\"ScopeUser\", userCookie, 30);\n          // const ACCESS_TOKEN = res.data.token;\n          // localStorage.setItem(\"token\", ACCESS_TOKEN);\n          dispatch(\n            setUser({\n              email: res.data.data.mail,\n              nickname: res.data.data.nickname,\n              userId: res.data.data.userId,\n              userPropensityType: res.data.data.userPropensityType,\n            })\n          );\n          // if (email) {\n          //   history.replace(`/mypage:${res.data.data.userId}`);\n          //   Swal.fire(\n          //     \"완료된 프로젝트가 있습니다. 팀원들을 평가하러 가볼까요?\",\n          //     \"\",\n          //     \"info\"\n          //   );\n          // }\n          // window.history.back();\n          // history.push(goPage);\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        // console.log(\"소셜로그인 에러\", err);\n        // alert(\"로그인에 실패하였습니다.\");\n        // history.replace(\"/\"); // 로그인 실패하면 로그인화면으로 돌려보냄\n        history.push(\"/\");\n        Swal.fire(\"로그인에 실패하였습니다!\", \"\", \"warning\");\n      });\n  };\n};\n\n//깃허브 로그인\nconst githubLoginMiddleware = (code) => {\n  return function (dispatch, getState, { history }) {\n    // console.log(\"깃허브에서 받아온 코드\", code);\n    apis\n      .githubLogin(code)\n      .then((res) => {\n        // console.log(res);\n        if (res.data.msg == \"추가 정보 작성이 필요한 사용자입니다.\") {\n          // window.alert(\"추가정보 작성이 필요합니다.\");\n\n          dispatch(\n            firstUser({\n              email: res.data.data.email,\n              snsId: res.data.data.id,\n            })\n          );\n\n          history.push(\"/\");\n          return;\n        }\n        if (res.data.msg == \"로그인이 완료되었습니다\") {\n          let userCookie = res.data.data.token;\n          setCookie(\"ScopeUser\", userCookie, 30);\n          dispatch(\n            setUser({\n              email: res.data.data.mail,\n              nickname: res.data.data.nickname,\n              userId: res.data.data.userId,\n              userPropensityType: res.data.data.userPropensityType,\n            })\n          );\n          // window.history.back();\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        // console.log(\"소셜로그인 에러\", err);\n        // alert(\"로그인에 실패하였습니다.\");\n        history.push(\"/\");\n        Swal.fire(\"로그인에 실패하였습니다.\", \"\", \"warning\");\n      });\n  };\n};\n// 이메일 중복체크 미들웨어\nconst emailCheckMiddleWare = (email) => {\n  return () => {\n    apis\n      .checkEmail(email)\n      .then((res) => {\n        // console.log(res);\n        if (res.data.msg == \"사용 가능한 메일입니다.\") {\n          return window.alert(\"사용 가능한 메일입니다.\");\n        }\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        if (err.response.data.msg == \"이미 사용중인 이메일입니다.\") {\n          return window.alert(\"이미 사용중인 이메일입니다.\");\n        }\n      });\n  };\n};\n\n// 닉네임 중복체크 미들웨어\nconst nickCheckMiddleWare = (nickName) => {\n  return () => {\n    apis\n      .checkNick(nickName)\n      .then((res) => {\n        // console.log(res.data);\n        if (res.data.msg == \"사용가능한 닉네임입니다.\") {\n          return window.alert(\"사용가능한 닉네임입니다.\");\n        }\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        if (err.response.data.msg == \"이미 사용중인 닉네임입니다.\") {\n          return window.alert(\"중복된 닉네임이 존재합니다.\");\n        }\n      });\n  };\n};\n\n//테스트유저 미들웨어\nconst testUserMiddleWare = (signupInfo) => {\n  return function (dispatch, getState, { history }) {\n    // console.log(signupInfo);\n    dispatch(firstUser(signupInfo));\n  };\n};\n\n//로그인 정보 유지\nconst myUserAPI = () => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .myUser()\n      .then((res) => {\n        // console.log(res);\n        dispatch(\n          setUser({\n            email: res.data.data.mail,\n            nickname: res.data.data.nickname,\n            userId: res.data.data.userId,\n            userPropensityType: res.data.data.userPropensityType,\n          })\n        );\n        // history.replace(\"/\");\n      })\n      .catch((err) => {\n        // console.log(err);\n      });\n  };\n};\n\n//테스트 마친 회원가입\nconst signupMiddleware = (signupInfo) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .signup(signupInfo)\n      .then((res) => {\n        // console.log(res);\n        // const ACCESS_TOKEN = res.data.token;\n        // localStorage.setItem(\"token\", ACCESS_TOKEN);\n        dispatch(\n          setUser({\n            userPropensityType: res.data.data.user.userPropensityType,\n            memberPropensityType: res.data.data.user.memberPropensityType,\n          })\n        );\n      })\n      .catch((err) => {\n        // console.log(err.response);\n      });\n  };\n};\n//협업테스트 수정 미들웨어\nconst editTestMiddleware = (userId, testInfo) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .editTest(userId, testInfo)\n      .then((res) => {\n        // console.log(res);\n        dispatch(\n          setUser({\n            userPropensityType: res.data.data.userPropensityType,\n            memberPropensityType: res.data.data.memberPropensityType,\n          })\n        );\n\n        // Swal.fire(\"성향 캐릭터가 정해졌습니다!\", \"\", \"success\");\n      })\n      .catch((err) => {\n        // console.log(err);\n      });\n  };\n};\n\n//리듀서\nexport default handleActions(\n  {\n    [FIRST_USER]: (state, action) =>\n      produce(state, (draft) => {\n        draft.email = action.payload.user.email;\n        draft.snsId = action.payload.user.snsId;\n        draft.techStack = action.payload.user.techStack;\n        draft.nickName = action.payload.user.nickName;\n\n        draft.sigunupModalState = true;\n      }),\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        draft.userId = action.payload.user.userId;\n        draft.nickname = action.payload.user.nickname;\n        draft.email = action.payload.user.email;\n        draft.techStack = action.payload.user.techStack;\n        draft.isLogin = true;\n        draft.memberPropensityType = action.payload.user.memberPropensityType;\n        draft.userPropensityType = action.payload.user.userPropensityType;\n      }),\n    [LOG_OUT]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isLogin = false;\n      }),\n    [MODAL]: (state, action) =>\n      produce(state, (draft) => {\n        draft.sigunupModalState = false;\n      }),\n    [EMAIL]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isEmail = true;\n      }),\n  },\n  initialState\n);\n\nconst userCreators = {\n  kakaologinMiddleware,\n  githubLoginMiddleware,\n  signupMiddleware,\n  testUserMiddleWare,\n  emailCheckMiddleWare,\n  nickCheckMiddleWare,\n  editTestMiddleware,\n  myUserAPI,\n  logOut,\n  modal,\n  email,\n};\n\nexport { userCreators };\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { apis } from \"../../lib/axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst GET_POST = \"GET_POST\";\r\nconst LOADING = \"LOADING\";\r\nconst MAINPAGE = \"MAINPAGE\";\r\nconst WHATPAGE = \"WHATPAGE\";\r\nconst PAGECHECK = \"PAGECHECK\";\r\n\r\nconst getPosts = createAction(GET_POST, (data) => ({ data }));\r\nconst isLoading = createAction(LOADING, (loading) => ({ loading }));\r\nconst isMainPage = createAction(MAINPAGE, (data) => ({ data }));\r\nconst whatPage = createAction(WHATPAGE, (data) => ({ data }));\r\nconst pageCheck = createAction(PAGECHECK, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  isLoaded: false,\r\n  infinityposts: [],\r\n  // paging: { start: null, next: null },\r\n  isLoading: false,\r\n  sorts: \"createdAt\",\r\n  reBook: \"\",\r\n  mainpage: true,\r\n  whatPage: { pre: \"mainPage\", now: \"mainPage\" },\r\n  pageCheck: false,\r\n  render: false,\r\n};\r\n\r\nexport const getPostAPI = () => {\r\n  return function (dispatch, getState, { history }) {\r\n    let stack = getState().stack.stack;\r\n    let sort = getState().sort.sort;\r\n    let _paging = getState().infinity.paging;\r\n    let reBook = getState().rebook.reBook;\r\n    let mainPage = getState().post.mainpage;\r\n    let whatPages = getState().post.whatPage;\r\n\r\n    // if (whatPages.now !== whatPages.pre) {\r\n    //   console.log(whatPages.now, whatPages.pre);\r\n    //   console.log(\"끊겠음2\");\r\n    //   dispatch(whatPage(\"mainPage\"));\r\n    //   return;\r\n    // }\r\n    apis\r\n      .getPost(stack, sort, reBook)\r\n      .then((res) => {\r\n        // console.log(_paging);\r\n        const posts = res.data.data;\r\n\r\n        // console.log(\"어떻게 오는지\", res.data.data);\r\n\r\n        dispatch(isLoading(true));\r\n        let data = { _paging, posts, stack, sort, reBook };\r\n\r\n        dispatch(getPosts(data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // Swal.fire(`${err.response}`, \"간단한 테스트를 진행해 주세요.\", \"info\");\r\n      });\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    // 백엔드와 통신\r\n    [GET_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(action);\r\n        let stacks = action.payload.data.stack;\r\n        let sorts = action.payload.data.sort;\r\n        let reBook = action.payload.data.reBook;\r\n        // draft.paging = action.payload.data.paging;\r\n        // draft.posts = action.payload.data.posts;\r\n        draft.isLoading = false;\r\n        if (!draft.stacks || !draft.sorts || !draft.reBook) {\r\n          draft.stacks = stacks;\r\n          draft.sorts = sorts;\r\n          draft.reBook = reBook;\r\n        }\r\n        if (\r\n          state.stacks !== stacks ||\r\n          state.sorts !== sorts ||\r\n          state.reBook !== reBook\r\n        ) {\r\n          // console.log(\"스택이 달라졌을때\");\r\n          // console.log(action);\r\n          draft.paging = action.payload.data.paging;\r\n          draft.posts = action.payload.data.posts;\r\n          draft.isLoading = false;\r\n          draft.stacks = stacks;\r\n          draft.sorts = sorts;\r\n          draft.reBook = reBook;\r\n          draft.render = true;\r\n        } else if (\r\n          state.stacks === stacks ||\r\n          state.sorts === sorts ||\r\n          state.reBook === reBook\r\n        ) {\r\n          // console.log(draft.stacks === stacks);\r\n          // console.log(\"스택이 그대로일때\");\r\n          // draft.posts.push(...action.payload.data.posts);\r\n          draft.posts = action.payload.data.posts;\r\n          draft.paging = action.payload.data.paging;\r\n          draft.isLoading = false;\r\n          draft.render = false;\r\n        }\r\n      }),\r\n\r\n    [LOADING]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.isLoading = action.payload.loading;\r\n      }),\r\n    [MAINPAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"여기가 메인페이지인가\", action.payload.data);\r\n        draft.mainpage = action.payload.data;\r\n      }),\r\n    [WHATPAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"현재페이지\", action.payload.data);\r\n        // console.log(state);\r\n        let page = {\r\n          pre: state.whatPage.now,\r\n          now: action.payload.data,\r\n        };\r\n        // console.log(page);\r\n        draft.whatPage = page;\r\n      }),\r\n    [PAGECHECK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"페이지 체크\", action);\r\n        draft.pageCheck = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst postActions = {\r\n  getPostAPI,\r\n  isMainPage,\r\n  whatPage,\r\n  pageCheck,\r\n};\r\nexport { postActions };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_STACK = \"GET_STACK\";\r\nconst SET_STACK = \"SET_STACK\";\r\n\r\nconst GET_STACK2 = \"GET_STACK2\";\r\nconst SET_STACK2 = \"SET_STACK2\";\r\n\r\nconst getStack = createAction(GET_STACK, (data) => ({ data }));\r\nconst setStack = createAction(SET_STACK, (data) => ({ data }));\r\n\r\nconst getStack2 = createAction(GET_STACK2, (data) => ({ data }));\r\nconst setStack2 = createAction(SET_STACK2, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  stack: {\r\n    React: \"\",\r\n    Java: \"\",\r\n    JavaScript: \"\",\r\n    Python: \"\",\r\n    Node: \"\",\r\n    cpp: \"\",\r\n    Flask: \"\",\r\n    Django: \"\",\r\n    Vue: \"\",\r\n    Spring: \"\",\r\n    php: \"\",\r\n    Swift: \"\",\r\n    Kotlin: \"\",\r\n    TypeScript: \"\",\r\n  },\r\n  stacks: [],\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_STACK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        const st = action.payload.data;\r\n        // if로 분기를 둔 이유 : draft에 이미 값이 있을 때와 없을 때를 분리 (처음에는 draft에 값이 없을 것 이므로 따로 작성)\r\n        if (!draft) {\r\n          const something = state.stack;\r\n          //   console.log(something[st]);\r\n          something[st] = st;\r\n          //   console.log(something);\r\n          draft.stack = something;\r\n          //   console.log(draft.stack);\r\n        } else {\r\n          draft.stack[st] = st;\r\n          //   console.log(draft.stack);\r\n        }\r\n\r\n        // const something = state.stack;\r\n        // console.log(something[st]);\r\n        // something[st] = st;\r\n        // console.log(something);\r\n        // draft = something;\r\n\r\n        // 처음에는 기본값인 state를 변경해줬었는데 이는 위험해 보임. => 처음에 변수에 이 값을 저장\r\n        // console.log(state.stack[st]);\r\n        // state.stack[st] = st;\r\n        // console.log(state);\r\n\r\n        // draft.push(action.payload.data);\r\n        // console.log(\"이것이 드래프트\", draft.list);\r\n      }),\r\n    [SET_STACK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(action.payload.data);\r\n        const st = action.payload.data;\r\n        draft.stack[st] = \"\";\r\n        // draft.splice(draft.findIndex((item) => item === action.payload.data));\r\n        // const result = draft.filter((item) => {\r\n        //   if (item !== action.payload.data) {\r\n        //     return item;\r\n        //   }\r\n        // });\r\n        // console.log(\"빼고 검색한 값\", result);\r\n        // draft = result;\r\n        // console.log(\"이것이 드래프트\", draft);\r\n      }),\r\n    [GET_STACK2]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"dodoget\", action);\r\n\r\n        draft.stacks.push(action.payload.data);\r\n      }),\r\n    [SET_STACK2]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"dodoset\", state.stacks);\r\n        const result = state.stacks.filter((p) => p !== action.payload.data);\r\n        draft.stacks = result;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst stackAction = {\r\n  getStack,\r\n  setStack,\r\n  getStack2,\r\n  setStack2,\r\n};\r\nexport { stackAction };\r\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../lib/axios\";\n\n// Actions\nconst ADD_POST = \"ADD_POST\";\n\n// Action Creators\nconst addPosts = createAction(ADD_POST, (card) => ({ card }));\n\nconst initialState = {\n  list: [\n    {\n      title: \"제목\",\n      summary: \"한줄설명\",\n      contents: \"내용\",\n      techStackList: \"기술스택\",\n      totalMember: \"제한 인원\",\n      projectstatus: \"프로젝트 상태\",\n      startdate: \"시작 날짜\",\n      enddate: \"끝나는 날짜\",\n    },\n  ],\n};\n\n// 미들웨어\nexport const addPostAPI = (card) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .addPost(card)\n      .then((res) => {\n        // console.log(res);\n        history.goBack();\n      })\n      .catch((err) => {\n        // console.log(err.response);\n      });\n    dispatch(addPosts(card));\n  };\n};\n\n// 리듀서\nexport default handleActions(\n  {\n    [ADD_POST]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\nconst postAddActions = {\n  addPostAPI,\n};\n\nexport { postAddActions };\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_SORT = \"GET_SORT\";\r\n\r\nconst getSort = createAction(GET_SORT, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  sort: \"createdAt\",\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_SORT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.sort = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst sortAction = {\r\n  getSort,\r\n};\r\nexport { sortAction };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_RB = \"GET_RB\";\r\n\r\nconst getRb = createAction(GET_RB, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  RecommendBook: \"\",\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_RB]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(action);\r\n        draft.reBook = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst bookRecommendAction = {\r\n  getRb,\r\n};\r\nexport { bookRecommendAction };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { apis } from \"../../lib/axios\";\r\nimport { postActions } from \"./post\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst GET_PAGE = \"GET_PAGE\";\r\nconst GET_SCROLL = \"GET_SCROLL\";\r\n\r\nconst getPages = createAction(GET_PAGE, (data) => ({ data }));\r\nconst getScroll = createAction(GET_SCROLL, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  paging: { start: 12, next: 12 },\r\n  currentScroll: null,\r\n};\r\n\r\nexport const getPage = (data) => {\r\n  return function (dispatch, getState, { history }) {\r\n    let mainPage = getState().post.mainpage;\r\n    let whatPages = getState().post.whatPage;\r\n    // console.log(data);\r\n\r\n    if (mainPage === false && whatPages.now !== \"mainPage\") {\r\n      // console.log(\"메인페이지 무한스크롤 펄스값\", mainPage);\r\n      return;\r\n    } else {\r\n      // console.log(\"메인페이지 무한스크롤 트루값\", mainPage);\r\n      dispatch(getPages(data));\r\n    }\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_PAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"액션값을 받아야함\", action);\r\n        // console.log(state.paging);\r\n\r\n        let paging = {\r\n          start: state.paging.next,\r\n          next: action.payload.data,\r\n        };\r\n\r\n        // console.log(\"액션값을 받아야함2222\", paging);\r\n        draft.paging = paging;\r\n      }),\r\n    [GET_SCROLL]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"스크롤값 받아라\", action);\r\n        draft.currentScroll = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst pageAction = {\r\n  getPage,\r\n  getScroll,\r\n};\r\nexport { pageAction };\r\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../lib/axios\";\n\n// 액션타입\nconst APPLY_PROJEFCT = \"APPLY_POST\";\n\n// 액션생성\nconst applyUsers = createAction(APPLY_PROJEFCT, (applyUsers) => ({\n  applyUsers,\n}));\n\nconst initialState = {\n  testUsers: [\n    {\n      userId: \"1813325\",\n      nickname: \"guest\",\n      email: \"aaa@aaa.com\",\n      userPropensityType: \"LVP\",\n      applicationDate: \"2021-11-04\",\n    },\n  ],\n};\n\n// 내가만든 프로젝트 신청자 현황 불러오기\nconst applyUserAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .applyUser(postId)\n      .then((res) => {\n        // console.log(res.data.data);\n        // window.alert(\"모집 지원 현황 조회 성공\");\n        dispatch(applyUsers(res.data.data));\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        window.alert(\"ERROR: 신청자를 불러오지 못했습니다.\");\n      });\n  };\n};\n//내가 만든 프로젝트 신청자 수락(팀장)\nconst acceptOfferAPI = (postId, acceptInfo) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .aceeptOffer(postId, acceptInfo)\n      .then((res) => {\n        // console.log(res.data.data);\n        // console.log(res);\n        dispatch(applyUsers(res.data.users));\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        window.alert(\"ERROR: 신청자를 불러올 수 없습니다.\");\n      });\n  };\n};\n//모집중인 프로젝트 지원(팀원)\nconst applyProjectAPI = (postId, comment) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .applyProject(postId, comment)\n      .then((res) => {\n        // console.log(res);\n        return window.alert(\"프로젝트에 지원되었습니다.\");\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        if (err.response.data.msg === \"모집중인 프로젝트가 아닙니다.\") {\n          return window.alert(\"모집중인 프로젝트가 아닙니다.\");\n        }\n        if (err.response.data.msg === \"이미 지원한 프로젝트입니다.\") {\n          return window.alert(\"이미 지원한 프로젝트 입니다.\");\n        } else {\n          window.alert(err.response.data.msg);\n          return;\n        }\n      });\n  };\n};\n//모집중인 프로젝트 지원취소(팀원)\nconst cancelProjectAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .cancelProject(postId)\n      .then((res) => {\n        // console.log(res);\n        window.alert(\"프로젝트 지원이 취소되었습니다.!\");\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        window.alert(\"신청자 정보를 찾을 수 없습니다!\");\n      });\n  };\n};\n//팀장이 수락한 프로젝트 탈퇴(팀원)\nconst exitTeamAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    const PostId = postId.postId;\n    // console.log(PostId);\n    apis\n      .exitTeam(PostId)\n      .then((res) => {\n        // console.log(res);\n        window.alert(\"팀에서 탈출하였습니다!\");\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        if (err.response.data.msg === \"입력 값이 잘못되었습니다.\") {\n          return window.alert(\"입력 값이 잘못되었습니다.\");\n        }\n        if (err.response.data.msg === \"해당 프로젝트를 찾을 수 없습니다.\") {\n          return window.alert(\"해당 프로젝트를 찾을 수 없습니다.\");\n        }\n        if (err.response.data.msg === \"이미 진행중인 프로젝트입니다.\") {\n          return window.alert(\"이미 진행중인 프로젝트입니다.\");\n        }\n      });\n  };\n};\n\n// 팀장의 프로젝트 완료후 평가\nconst starterLikeAPI = (postId, userIds) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .strterLike(postId, userIds)\n      .then((res) => {\n        // console.log(res);\n        // window.alert(\"팀원 평가 정보가 성공적으로 저장되었습니다.\");\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        if (err.response.data.msg === \"입력 값이 잘못되었습니다.\") {\n          return window.alert(\"팀원 평가가 이루어지지 않았습니다.\");\n        }\n        if (err.response.data.msg === \"해당 프로젝트를 찾을 수 없습니다.\") {\n          return window.alert(\"해당 프로젝트를 찾을 수 없습니다.\");\n        }\n        if (err.response.data.msg === \"이미 진행중인 프로젝트입니다.\") {\n          return window.alert(\"이미 진행중인 프로젝트입니다.\");\n        }\n      });\n  };\n};\n\n// 깃허브 제출\nconst submitUrlAPI = (postId, urls) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .sumbitUrl(postId, urls)\n      .then((res) => {\n        console.log(res);\n        window.alert(\"프로젝트 URL이 성공적으로 저장되었습니다.\");\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n\n//마이페이지 프로젝트 팀원정보 조회\nconst getMemberAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .getMember(postId)\n      .then((res) => {\n        console.log(res);\n        window.alert(\"모라공?\");\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n// 리듀서\nexport default handleActions(\n  {\n    [APPLY_PROJEFCT]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"신청자정보\", action);\n        draft.applyUsers = action.payload.applyUsers;\n      }),\n  },\n  initialState\n);\n\nconst applyCreators = {\n  applyUserAPI,\n  acceptOfferAPI,\n  applyProjectAPI,\n  cancelProjectAPI,\n  exitTeamAPI,\n  starterLikeAPI,\n  submitUrlAPI,\n  getMemberAPI,\n};\n\nexport { applyCreators };\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { apis } from \"../../lib/axios\";\r\n\r\nconst GET_MYPAGE = \"GET_MYPAGE\";\r\n\r\nconst getMypages = createAction(GET_MYPAGE, (data) => ({ data }));\r\n\r\nconst initialState = {};\r\n\r\nexport const getMypageAPI = (postId) => {\r\n  return function (dispatch, getState, { history }) {\r\n    apis\r\n      .getMypage(postId)\r\n      .then((res) => {\r\n        console.log(res);\r\n        // dispatch(getPosts(data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_MYPAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"여기가 마이페이지인가\", action.payload);\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst myPageActions = { getMypageAPI };\r\nexport { myPageActions };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_PAGECHECK = \"GET_PAGECHECK\";\r\n\r\nconst getPageCheck = createAction(GET_PAGECHECK, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  pageGo: \"/\",\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_PAGECHECK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"페이지 위치 저장\", action.payload.data);\r\n        draft.pageGo = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst pageCheckAction = {\r\n  getPageCheck,\r\n};\r\nexport { pageCheckAction };\r\n","/* eslint-disable */\r\nimport { createBrowserHistory } from \"history\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport User from \"./modules/user\";\r\n\r\nimport Post from \"./modules/post\";\r\nimport Stack from \"./modules/stack\";\r\nimport Card from \"./modules/postadd\";\r\nimport Sort from \"./modules/sort\";\r\nimport ReBook from \"./modules/bookRecommend\";\r\nimport Infinitys from \"./modules/infinity\";\r\nimport ApplyUser from \"./modules/applyProject\";\r\nimport Mypage from \"./modules/myPage\";\r\nimport pageCheck from \"./modules/pageCheck\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  user: User,\r\n  //   product: Product,\r\n  //   comment : Comment,\r\n  apply: ApplyUser,\r\n  post: Post,\r\n  stack: Stack,\r\n  card: Card,\r\n  sort: Sort,\r\n  rebook: ReBook,\r\n  infinity: Infinitys,\r\n  mypage: Mypage,\r\n  pagecheck: pageCheck,\r\n\r\n  // 8. 리덕스에 history를 이제 넣어줄 것이다. 우리가 만든 history와 우리의 라우터가 연결이되는 것이다. 그리고 이것의 우리의 스토어에 저장이되는 것이다.\r\n  router: connectRouter(history),\r\n});\r\n\r\nconst middlewares = [thunk.withExtraArgument({ history: history })];\r\n\r\n// const env = process.env.NODE_ENV;\r\n\r\n// if (env === \"development\") {\r\n//   const { logger } = require(\"redux-logger\");\r\n//   middlewares.push(logger);\r\n// }\r\n\r\n// 4. 리덕스 데브툴(redux devTools 설정)\r\nconst composeEnhancers =\r\n  // 브라우저일 때만  window === \"object\"이 부분을 돌려주라고 넣어준것이다. __REDUX_DEVTOOLS_EXTENSION_COMPOSE__부분을 데브툴이 있으면 열어주려고 하는 것이다.\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\n// 5. 미들웨어 묶어주기\r\n// composeEnhancers를 사용해서 applyMiddleware로 지금까지 있었던 미들웨어를 사용한다는 말이다.\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\nlet store = (initialStore) => createStore(rootReducer, enhancer);\r\n\r\nexport default store();\r\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Grid = (props) => {\n  const {\n    children,\n    _onClick,\n    id,\n    margin,\n    padding,\n    width,\n    height,\n    bg,\n    display,\n    justifyContent,\n    alignItems,\n    flexDirection,\n    flexWrap,\n    textAlign,\n    border,\n    borderRadius,\n    borderTop,\n    borderBottom,\n    borderLeft,\n    borderRight,\n    overflow,\n    overflowX,\n    overflowY,\n    minWidth,\n    maxWidth,\n    minHeight,\n    maxHeight,\n    boxShadow,\n    backgroundColor,\n    lineHeight,\n    boxSizing,\n    position,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    zIndex,\n    bgImg,\n    verticalAlign,\n    cursor,\n    opacity,\n  } = props;\n\n  const styles = {\n    id,\n    margin,\n    padding,\n    width,\n    height,\n    bg,\n    display,\n    justifyContent,\n    alignItems,\n    flexDirection,\n    flexWrap,\n    textAlign,\n    border,\n    borderRadius,\n    borderTop,\n    borderBottom,\n    borderLeft,\n    borderRight,\n    overflow,\n    overflowX,\n    overflowY,\n    minWidth,\n    maxWidth,\n    minHeight,\n    maxHeight,\n    boxShadow,\n    backgroundColor,\n    lineHeight,\n    boxSizing,\n    position,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    zIndex,\n    bgImg,\n    verticalAlign,\n    cursor,\n    opacity,\n  };\n  return (\n    <GridBox {...styles} onClick={_onClick} id={id}>\n      {children}\n    </GridBox>\n  );\n};\n\nGrid.defaultProps = {\n  children: null,\n  id: null,\n  margin: null,\n  padding: null,\n  width: \"100%\",\n  height: \"100%\",\n  bg: null,\n  display: null,\n  justifyContent: null,\n  alignItems: false,\n  flexDirection: false,\n  flexWrap: null,\n  textAlign: false,\n  border: null,\n  borderRadius: false,\n  borderTop: null,\n  borderBottom: null,\n  borderLeft: null,\n  borderRight: null,\n  overflow: null,\n  overflowX: null,\n  overflowY: null,\n  minWidth: null,\n  maxWidth: null,\n  minHeight: null,\n  maxHeight: null,\n  boxShadow: null,\n  potision: null,\n  top: null,\n  bottom: null,\n  left: null,\n  right: null,\n  hover: null,\n  bgImg: null,\n  _onClick: () => {},\n};\n\nconst GridBox = styled.div`\n  margin: ${(props) => props.margin};\n  padding: ${(props) => props.padding};\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  background: ${(props) => props.bg};\n  display: ${(props) => props.display};\n  ${(props) =>\n    props.flexDirection ? `flex-direction:${props.flexDirection}` : \"\"};\n  flex-wrap: ${(props) => props.flexWrap};\n  align-items: ${(props) => props.alignItems};\n  justify-content: ${(props) => props.justifyContent};\n  text-align: ${(props) => props.textAlign};\n  vertical-align: ${(props) => props.verticalAlign};\n  border: ${(props) => props.border};\n  ${(props) =>\n    props.borderRadius ? `border-radius: ${props.borderRadius}` : \"\"};\n  border-top: ${(props) => props.borderTop};\n  border-bottom: ${(props) => props.borderBottom};\n  border-left: ${(props) => props.borderLeft};\n  border-right: ${(props) => props.borderRight};\n  overflow-x: ${(props) => props.overflowX};\n  overflow-y: ${(props) => props.overflowY};\n  overflow: ${(props) => props.overflow};\n  min-width: ${(props) => props.minWidth};\n  max-width: ${(props) => props.maxWidth};\n  min-height: ${(props) => props.minHeight};\n  max-height: ${(props) => props.maxHeight};\n  background-color: ${(props) => props.backgroundColor};\n  box-sizing: ${(props) => props.boxSizing};\n  box-shadow: ${(props) => props.boxShadow};\n  position: ${(props) => props.position};\n  top: ${(props) => props.top};\n  bottom: ${(props) => props.bottom};\n  left: ${(props) => props.left};\n  right: ${(props) => props.right};\n  background-color: ${(props) => props.backgroundColor};\n  z-index: ${(props) => props.zIndex};\n  background-image: ${(props) => props.bgImg};\n  cursor: ${(props) => props.cursor};\n  opacity: ${(props) => props.opacity};\n  font-family: \"GmarketSans\";\n\n  :hover {\n    ${(props) =>\n      props.hover\n        ? `background-color:${props.hover};\n  cursor: pointer;`\n        : \"\"}\n    ${(props) => (props.hover_font ? `color : ${props.hover_font}` : null)}\n  }\n\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: #2f3542;\n    border-radius: 15px;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: grey;\n    border-radius: 15px;\n  }\n`;\n\nexport default Grid;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Image = (props) => {\n  const { shape, src, size, _onClick, children } = props;\n\n  const styles = {\n    src: src,\n    size: size,\n  };\n\n  if (shape === \"circle\") {\n    return <ImageCircle {...styles} onClick={_onClick}></ImageCircle>;\n  }\n\n  if (shape === \"card\") {\n    return <CardImage {...styles} onClick={_onClick}></CardImage>;\n  }\n\n  if (shape === \"rectangle\") {\n    return (\n      <AspectOutter>\n        <AspectInner {...styles} onClick={_onClick}></AspectInner>\n      </AspectOutter>\n    );\n  }\n\n  if (shape === \"main\") {\n    return <MainInner {...styles} onClick={_onClick}></MainInner>;\n  }\n\n  return (\n    <React.Fragment>\n      <ImageDefault {...styles} onClick={_onClick}></ImageDefault>\n    </React.Fragment>\n  );\n};\n\nImage.defaultProps = {\n  shape: \"circle\",\n  src: \"https://images.unsplash.com/photo-1608889335941-32ac5f2041b9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjB8fHRveXxlbnwwfDJ8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60\",\n  size: 36,\n  _onClick: () => {},\n};\n\nconst ImageDefault = styled.div`\n  --size: ${(props) => props.size}px;\n  width: var(--size);\n  height: var(--size);\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n  background-position: center;\n  object-fit: cover;\n`;\n\nconst AspectOutter = styled.div`\n  width: auto;\n  min-width: 250px;\n`;\n\nconst AspectInner = styled.div`\n  position: relative;\n  padding-top: 100%;\n  overflow: hidden;\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n`;\n\nconst ImageCircle = styled.div`\n  --size: ${(props) => props.size}px;\n  width: var(--size);\n  height: var(--size);\n  border-radius: var(--size);\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n  margin: 4px;\n`;\n\nconst CardImage = styled.div`\n  width: 100%;\n  height: auto;\n`;\n\nconst MainImage = styled.div`\n  width: 100%;\n  height: auto;\n`;\n\nconst MainInner = styled.div`\n  width: 100%;\n  margin: auto;\n  min-width: 25rem;\n  position: relative;\n  padding-top: 30%;\n  overflow: hidden;\n  background-image: url(\"${(props) => props.src}\");\n  background-position: center;\n  /* background-size: cover; */\n`;\n\nexport default Image;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Text = (props) => {\n  const {\n    children,\n    color,\n    bg,\n    size,\n    bold,\n    align,\n    margin,\n    padding,\n    underline,\n    family,\n    border,\n    borderRadius,\n    decoration,\n    _onClick,\n    cursor,\n    hover,\n  } = props;\n  const styles = {\n    color,\n    bg,\n    size,\n    bold,\n    align,\n    margin,\n    padding,\n    underline,\n    decoration,\n    family,\n    border,\n    borderRadius,\n    cursor,\n  };\n  return (\n    <ElText {...styles} onClick={_onClick}>\n      {children}\n    </ElText>\n  );\n};\n\nText.defaultProps = {\n  children: null,\n  color: null,\n  bg: null,\n  size: null,\n  bold: false,\n  align: null,\n  underline: null,\n  decoration: null,\n  margin: false,\n  padding: false,\n  family: false, //폰트 타입\n  border: null,\n  borderRadius: null,\n  _onClick: () => {},\n  cursor: null,\n};\n\nconst ElText = styled.span`\n  color: ${(props) => props.color};\n  font-size: ${(props) => props.size};\n  font-weight: ${(props) => props.bold};\n  text-align: ${(props) => props.align};\n  margin: ${(props) => props.margin};\n  padding: ${(props) => props.padding};\n  family: ${(props) => props.family};\n  border: ${(props) => props.border};\n  border-radius: ${(props) => props.borderRadius};\n  background-color: ${(props) => props.bg};\n  cursor: ${(props) => props.cursor};\n  font-family: \"GmarketSans\";\n  line-height: 1.2;\n  text-decoration: ${(props) => props.decoration};\n  letter-spacing: -0.0375em;\n`;\n\nexport default Text;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"./Index\";\n\nconst Input = (props) => {\n  const {\n    id,\n    label,\n    placeholder,\n    _onChange,\n    onSubmit,\n    type,\n    multiLine,\n    edit,\n    value,\n    editValue,\n    defaulValue,\n    margin,\n    width,\n    padding,\n    height,\n    border,\n    borderbottom,\n    maxLength,\n    borderRadius,\n    bg,\n    backgroundImage,\n    backgroundColor,\n    innerRef,\n    inputFocusOutline,\n    inputFocusBorder,\n    inputFocusBoxShadow,\n    fontSize,\n  } = props;\n\n  const styles = {\n    padding,\n    height,\n    border,\n    borderbottom,\n    borderRadius,\n    bg,\n    maxLength,\n    backgroundImage,\n    inputFocusOutline,\n    inputFocusBorder,\n    inputFocusBoxShadow,\n    fontSize,\n  };\n  if (multiLine) {\n    return (\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        <ElTextarea\n          backgroundColor={backgroundColor}\n          value={value}\n          defaulValue={defaulValue}\n          rows={10}\n          maxLength={maxLength}\n          placeholder={placeholder}\n          onChange={_onChange}\n        ></ElTextarea>\n      </Grid>\n    );\n  }\n\n  if (edit) {\n    return (\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        <ElInput\n          {...styles}\n          backgroundColor={backgroundColor}\n          width={width}\n          margin={margin}\n          type={type}\n          value={value}\n          defaulValue={defaulValue}\n          placeholder={placeholder}\n          onChange={_onChange}\n          maxLength={maxLength}\n          ref={innerRef}\n          onKeyPress={(e) => {\n            console.log(e.key);\n            if (e.key === \"Enter\") {\n              console.log(\"pass\");\n              onSubmit(e);\n            }\n          }}\n        />\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid>\n      {label && <Text margin=\"0px\">{label}</Text>}\n      <ElInput\n        {...styles}\n        backgroundColor={backgroundColor}\n        width={width}\n        margin={margin}\n        type={type}\n        placeholder={placeholder}\n        value={editValue}\n        maxLength={maxLength}\n        defaulValue={defaulValue}\n        onChange={_onChange}\n        ref={innerRef}\n        onKeyPress={(e) => {\n          // console.log(e.key);\n          if (e.key === \"Enter\") {\n            // console.log(\"pass\");\n            onSubmit(e);\n          }\n        }}\n      />\n    </Grid>\n  );\n};\n\nInput.defaultProps = {\n  multiLine: false,\n  label: false,\n  placeholder: \"텍스트를 입력해주세요.\",\n  type: \"text\",\n  value: \"\",\n  defaulValue: \"\",\n  margin: 0,\n  padding: false,\n  width: \"100%\",\n  height: false,\n  border: false,\n  borderbottom: false,\n  borderRadius: false,\n  bg: false,\n  backgroundImage: false,\n  is_submit: false,\n  _onChange: () => {},\n  onSubmit: () => {},\n};\n\nconst ElTextarea = styled.textarea`\n  margin: ${(props) => props.margin};\n  border: ${(props) => props.border};\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  border-radius: 25px;\n  border-radius: ${(props) => props.borderRadius};\n  background: ${(props) => props.bg};\n  padding: ${(props) => props.padding};\n  background-image: ${(props) => props.backgroundImage};\n  box-sizing: border-box;\n  background-color: ${(props) => props.backgroundColor};\n  font-family: \"GmarketSans\";\n`;\n\nconst ElInput = styled.input`\n  margin: ${(props) => props.margin};\n  border: ${(props) => props.border};\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  text-align: ${(props) => props.textAlign};\n  border-radius: ${(props) => props.borderRadius};\n  border-bottom: ${(props) => props.borderBottom};\n  background: ${(props) => props.bg};\n  padding: ${(props) => props.padding};\n  background-image: ${(props) => props.backgroundImage};\n  box-sizing: border-box;\n\n  background-color: ${(props) => props.backgroundColor};\n  font-size: ${(props) => props.fontSize};\n  &:focus {\n    outline: ${(props) => props.inputFocusOutline};\n    border: ${(props) => props.inputFocusBorder};\n    box-shadow: ${(props) => props.inputFocusBoxShadow};\n  }\n  font-family: \"GmarketSans\";\n`;\n\nexport default Input;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = props => {\n  const {\n    isId,\n    isTest,\n    color,\n    text,\n    _onClick,\n    children,\n    margin,\n    width,\n    padding,\n    backgroundColor,\n    height,\n    fontSize,\n    borderRadius,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    display,\n    isValue,\n    disabled,\n    isChecked,\n    hoverBg,\n    hoverCl,\n    common,\n    border,\n    isActive,\n    zIndex,\n  } = props;\n\n  if (isTest) {\n    return (\n      <>\n        <TestButton\n          onClick={_onClick}\n          value={isValue}\n          disabled={disabled}\n          isChecked={isChecked}\n          id={isId}\n          isActive={isActive}\n        >\n          {text ? text : children}\n        </TestButton>\n      </>\n    );\n  }\n\n  if (common) {\n    const styles = {\n      margin,\n      width,\n      padding,\n      color,\n      height,\n      fontSize,\n      borderRadius,\n      top,\n      bottom,\n      left,\n      right,\n      border,\n      backgroundColor,\n    };\n    return (\n      <>\n        <Common\n          {...styles}\n          onClick={_onClick}\n          value={isValue}\n          disabled={disabled}\n          isChecked={isChecked}\n          id={isId}\n          isActive={isActive}\n        >\n          {text ? text : children}\n        </Common>\n      </>\n    );\n  }\n\n  const styles = {\n    margin,\n    width,\n    padding,\n    backgroundColor,\n    color,\n    height,\n    fontSize,\n    borderRadius,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    display,\n    hoverBg,\n    hoverCl,\n    zIndex,\n  };\n\n  return (\n    <>\n      <ElButton {...styles} value={isValue} onClick={_onClick} id={isId}>\n        {text ? text : children}\n      </ElButton>\n    </>\n  );\n};\n\nButton.defaultProps = {\n  position: false,\n  text: false,\n  children: null,\n  _onClick: () => {},\n  isFloat: false,\n  margin: \"auto\",\n  width: \"100%\",\n  padding: \"12px 0px\",\n  color: \"white\",\n  height: \"50px\",\n  top: null,\n  bottom: null,\n  left: null,\n  right: null,\n  hover: null,\n  display: null,\n  isValue: null,\n};\n\nconst ElButton = styled.button`\n  width: ${props => props.width};\n  color: ${props => props.color};\n  padding: ${props => props.padding};\n  height: ${props => props.height};\n  font-size: ${props => props.fontSize};\n  margin: ${props => props.margin};\n  ${props =>\n    props.backgroundColor\n      ? `background-color:${props.backgroundColor}`\n      : \"background-color: #17334A\"};\n  box-sizing: border-box;\n  border-radius: 5px;\n  font-weight: bold;\n  ${props => (props.border ? `border:${props.border}` : \"border: none\")};\n  ${props =>\n    props.borderRadius\n      ? `border-radius:${props.borderRadius}`\n      : \"border-radius: 25px\"};\n  cursor: pointer;\n  flex-shrink: 0;\n  &:hover {\n    background-color: ${props => props.hoverBg};\n    color: ${props => props.hoverCl};\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  vertical-align: middle;\n  top: ${props => props.top};\n  bottom: ${props => props.bottom};\n  left: ${props => props.left};\n  right: ${props => props.right};\n  position: ${props => props.position};\n  flex-shrink: 0;\n  display: ${props => props.display};\n  z-index: ${props => props.zIndex};\n  font-family: \"GmarketSans\";\n`;\n\nconst TestButton = styled.button`\n  font-size: 12px;\n  text-align: center;\n  border: 1px solid #17334a;\n  border-radius: 25px;\n  padding: 20px;\n  margin: 5px;\n  box-shadow: 0px 2px 2px #ddd;\n  font-family: \"GmarketSans\";\n  font-weight: 400;\n  background-color: ${props => (props.isActive == true ? \"#17334A\" : \"#fff\")};\n  color: ${props => (props.isActive == true ? \"#fff\" : \"#17334A\")};\n\n  &:hover {\n    background-color: #17334a;\n    cursor: pointer;\n    color: #fff;\n    box-shadow: 0px 3px 2px #ddd;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  @media (max-width: 650px) {\n    width: 270px;\n    padding: 10px;\n    height: 80%;\n    font-size: 9px;\n  }\n`;\n\nconst Common = styled.button`\n  background-color: ${props => (props.isActive == true ? \"#17334A\" : \"#fff\")};\n  height: ${props => props.height};\n  width: ${props => props.width};\n  color: ${props => (props.isActive == true ? \"#fff\" : \"#17334A\")};\n  margin-right: 3px;\n  border-radius: 25px;\n  border: 1px solid #17334a;\n  cursor: pointer;\n  top: ${props => props.top};\n  bottom: ${props => props.bottom};\n  left: ${props => props.left};\n  right: ${props => props.right};\n  position: ${props => props.position};\n  font-size: ${props => props.fontSize};\n  padding: ${props => props.padding};\n  &:hover {\n    background-color: #17334a;\n    color: #fff;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  font-family: \"GmarketSans\";\n`;\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/Logo.df9d5eaf.png\";","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Image } from \"../elements/Index\";\nimport Logo from \"../images/Logo.png\";\nimport { history } from \"../redux/configureStore\";\n\nconst HeaderLeft = () => {\n  return (\n    <Grid>\n      <LogoDiv>\n        <img\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            history.push(\"/\");\n          }}\n          src={Logo}\n          width=\"100px\"\n        />\n      </LogoDiv>\n    </Grid>\n  );\n};\nconst LogoDiv = styled.div`\n  width: 15%;\n  @media screen and (max-width: 750px) {\n    width: 35%;\n  } ;\n`;\nexport default HeaderLeft;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\nimport styled from \"styled-components\";\nconst TestOne = props => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter(btn => btn.question === \"Q1\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter(btn => btn.question === \"Q1\")\n  );\n\n  const clickUser = btnUserId => {\n    // console.log(btnUserId);\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = btnMemberId => {\n    setNowClickMB(state => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"0 0 10px 0\" height=\"50%\">\n          <Grid height=\"14%\" margin=\"0 0 5px 0\">\n            <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n              Q1. <b>팀 회의할 때 당신의 모습</b>에 더 가까운 것은?\n            </Grid>\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n            Q1. <b>팀 회의할 때 선호하는 팀원의 모습</b>에 더 가까운 것은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst Q1 = styled.p`\n  margin: 0 0 5px 0;\n  height: 14%;\n  @media screen and (max-width: 375px) {\n    font-size: 10px;\n  }\n`;\nexport default TestOne;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestTwo = props => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter(btn => btn.question === \"Q2\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter(btn => btn.question === \"Q2\")\n  );\n\n  const clickUser = btnUserId => {\n    // console.log(btnUserId);\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = btnMemberId => {\n    setNowClickMB(state => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"0 0 10px 0\" height=\"50%\">\n          <Grid margin=\"0 0 10px 0\" height=\"14%\">\n            Q2. 스터디의 운영을 맡길 <b>스터디장을 뽑을때 당신의 행동</b>은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n            Q2. 스터디의 운영을 맡길{\" \"}\n            <b>스터디 장을 뽑을때 당신이 선호하는 팀원의 행동</b>은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"35%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestTwo;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestThree = props => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter(btn => btn.question === \"Q3\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter(btn => btn.question === \"Q3\")\n  );\n\n  const clickUser = btnUserId => {\n    // console.log(btnUserId);\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = btnMemberId => {\n    setNowClickMB(state => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"0 0 10px 0\" height=\"50%\">\n          <Grid height=\"14%\" margin=\"0 0 10px 0\">\n            <Text>\n              Q3. <b>나는 큰 보상과 무거운 책임</b>보다는{\" \"}\n              <b>평범한 보상과 책임</b>이 더 좋다.\n            </Text>\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n            Q3. <b>내 팀원은 큰 보상과 무거운 책임</b>보다는{\" \"}\n            <b>평범한 보상과 책임을 더 좋아했으면</b> 좋겠다.\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestThree;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestFour = props => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter(btn => btn.question === \"Q4\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter(btn => btn.question === \"Q4\")\n  );\n\n  const clickUser = btnUserId => {\n    // console.log(btnUserId);\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = btnMemberId => {\n    setNowClickMB(state => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"0 0 10px 0\" height=\"50%\">\n          <Grid margin=\"0 0 10px 0\" height=\"14%\">\n            Q4.<b>프로젝트를 진행</b>함에 있어서 <b>당신의 생각</b>에 더 가까운\n            문장은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n            Q4.<b>프로젝트를 진행</b>함에 있어서 당신이 원하는{\" \"}\n            <b>팀원의 생각</b>에 더 가까웠으면 하는 문장은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestFour;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestFive = props => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter(btn => btn.question === \"Q5\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter(btn => btn.question === \"Q5\")\n  );\n\n  const clickUser = btnUserId => {\n    // console.log(btnUserId);\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = btnMemberId => {\n    setNowClickMB(state => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"0 0 10px 0\" height=\"50%\">\n          <Grid margin=\"0 0 10px 0\" height=\"14%\">\n            Q5.<b>당신</b>이 생각하는 <b>이상적인 회의</b>의 모습은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n            Q5.당신의 <b>팀원이 원했으면 하는 이상적인 회의</b>의 모습은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"35%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestFive;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestSix = props => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter(btn => btn.question === \"Q6\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter(btn => btn.question === \"Q6\")\n  );\n\n  const clickUser = btnUserId => {\n    // console.log(btnUserId);\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = btnMemberId => {\n    setNowClickMB(state => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"0 0 10px 0\" height=\"50%\">\n          <Grid margin=\"0 0 10px 0\" height=\"14%\">\n            Q6.당신이 생각할 때 더 <b>좋은 성과를 만들 수 있을 것 같은 팀</b>은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n            Q6.<b>당신의 팀원이 선호했으면 하는 팀</b>은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"35%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestSix;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestSeven = props => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter(btn => btn.question === \"Q7\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter(btn => btn.question === \"Q7\")\n  );\n\n  const clickUser = btnUserId => {\n    // console.log(btnUserId);\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = btnMemberId => {\n    setNowClickMB(state => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"0 0 10px 0\" height=\"50%\">\n          <Grid margin=\"0 0 10px 0\" height=\"14%\">\n            Q. <b>당신과 어울리는 문장</b>은 무엇인가요?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n            Q. 어떤 문장이 <b>당신이 선호하는 팀원의 모습</b>과 더 어울리나요?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestSeven;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestEight = props => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter(btn => btn.question === \"Q8\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter(btn => btn.question === \"Q8\")\n  );\n\n  const clickUser = btnUserId => {\n    // console.log(btnUserId);\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = btnMemberId => {\n    setNowClickMB(state => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"0 0 10px 0\" height=\"50%\">\n          <Grid margin=\"0 0 10px 0\" height=\"14%\">\n            Q8.<b>프로젝트에서 문제</b>가 생겼을 때{\" \"}\n            <b>당신이 생각하는 더 나은 방법</b>은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid height=\"40%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n            Q8.<b>프로젝트에서 문제</b>가 생겼을 때{\" \"}\n            <b>당신의 팀원이 생각했으면 하는 방법</b>은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"40%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestEight;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestNine = props => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter(btn => btn.question === \"Q9\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter(btn => btn.question === \"Q9\")\n  );\n\n  const clickUser = btnUserId => {\n    // console.log(btnUserId);\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = btnMemberId => {\n    setNowClickMB(state => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB(state => {\n      return state.map(stateItem => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"0 0 10px 0\" height=\"50%\">\n          <Grid margin=\"0 0 10px 0\" height=\"14%\">\n            Q9. 당신이 지금까지 진행했던{\" \"}\n            <b>프로젝트를 떠올렸을 때 가장 먼저 생각나는 부분</b>은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid height=\"38%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"14%\" margin=\"0 0 10px 0\">\n            Q9.당신의{\" \"}\n            <b>팀원이 프로젝트를 떠올렸을 때 가장 먼저 생각났으면 하는 부분</b>\n            은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"35%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={e => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestNine;\n","/* eslint-disable */\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Button, Image, Text } from \"../../elements/Index\";\nimport TestData from \"./Testdata.json\";\n\nconst TestResult = props => {\n  const myUserType = useSelector(state => state.user.userPropensityType);\n  // console.log(myUserType);\n  const resultType = TestData.usertype.filter(\n    type => type?.userType === myUserType\n  );\n\n  React.useLayoutEffect(() => {}, [myUserType]);\n\n  return (\n    <Grid>\n      {myUserType && (\n        <Grid textAlign=\"center\" width=\"95%\" margin=\"auto\">\n          <Grid textAlign=\"left\" height=\"6%\">\n            <Text bold size=\"12px\">\n              당신의 성향은?\n            </Text>\n          </Grid>\n\n          <Grid display=\"flex\" justifyContent=\"center\" height=\"94%\">\n            {resultType?.map(type => (\n              <Grid bg=\"#fff\" key={type.userType} {...type}>\n                <Grid\n                  height=\"7%\"\n                  bg=\"#17334A\"\n                  borderRadius=\"20px\"\n                  padding=\"12px 0\"\n                  margin=\"12px 0\"\n                >\n                  <Text size=\"12px\" color=\"#fff\">\n                    {type.title}\n                  </Text>\n                </Grid>\n                <Grid\n                  margin=\"12px 0\"\n                  borderRadius=\"20px\"\n                  border=\"1px solid #17334A\"\n                  padding=\"40px 0\"\n                  height=\"30%\"\n                >\n                  <Text size=\"11px\">\n                    {type.text1} <br />\n                    {type.text2}\n                    <br /> {type.text3}\n                    <br /> {type.text4}\n                  </Text>\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default TestResult;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../elements/Index\";\n\nconst Progress = props => {\n  let count = 10;\n  let currentStep = props.page;\n\n  return (\n    <Grid\n      position=\"relative\"\n      height=\"60px\"\n      display=\"flex\"\n      alignItems=\"end\"\n      margin=\"auto\"\n    >\n      <Grid\n        width=\"50px\"\n        position=\"absolute\"\n        left={(currentStep / count) * 100 - 8 + \"%\"}\n      >\n        <ArrowBubbleTwo>\n          <Grid display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Text bold size=\"12px\">\n              {(currentStep / count) * 100 + \"%\"}\n            </Text>\n          </Grid>\n        </ArrowBubbleTwo>\n      </Grid>\n      <ProgressBar>\n        <HighLight width={(currentStep / count) * 100 + \"%\"} />\n      </ProgressBar>\n    </Grid>\n  );\n};\n\nconst ProgressBar = styled.div`\n  border: 3px solid #17334a;\n  border-radius: 25px;\n  background: #f1f9ff;\n  width: 100%;\n  height: 15px;\n`;\n\nconst HighLight = styled.div`\n  border-radius: 25px;\n  border: none;\n  background: #17334a;\n  transition: 1s;\n  width: ${props => props.width};\n  height: 15px;\n`;\n\nconst ArrowBubbleTwo = styled.div`\n  position: relative;\n  width: 100%;\n  height: 25px;\n  padding: 0 5px;\n  background: #f1f9ff;\n  /* -webkit-border-radius: 35px;\n  -moz-border-radius: 35px; */\n  border-radius: 10px;\n  border: #17334a solid 3px;\n  @media screen and (max-width: 650px) {\n    bottom: -4px;\n    width: 30px;\n    height: 20px;\n  }\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-width: 10px 15px 0;\n    border-color: #f1f9ff transparent;\n    display: block;\n    width: 0;\n    z-index: 1;\n    bottom: -4px;\n    left: 15px;\n    @media screen and (max-width: 650px) {\n      bottom: -4px;\n      left: 5px;\n    }\n  }\n\n  ::before {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-width: 8px 12px 0;\n    border-color: #17334a transparent;\n    display: block;\n    width: 0;\n    z-index: 0;\n    bottom: -8px;\n    left: 18px;\n    @media screen and (max-width: 650px) {\n      left: 8px;\n    }\n  }\n`;\n\nexport default Progress;\n","/* eslint-disable */\r\nimport { NoEncryption } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid } from \"../elements/Index\";\r\nconst ImgType = (props) => {\r\n  const {\r\n    margin,\r\n    width,\r\n    height,\r\n    _onClick,\r\n    cursor,\r\n    object_fit,\r\n    position,\r\n    right,\r\n    bottom,\r\n  } = props;\r\n  const styles = {\r\n    margin,\r\n    width,\r\n    height,\r\n    cursor,\r\n    object_fit,\r\n    position,\r\n    right,\r\n    bottom,\r\n  };\r\n  const [imges, setImges] = React.useState([\r\n    {\r\n      id: \"tiger\",\r\n      type: \"LVG\",\r\n      img: \"/img/호랑이.png\",\r\n    },\r\n    {\r\n      id: \"wolf\",\r\n      type: \"LVP\",\r\n      img: \"/img/늑대.png\",\r\n    },\r\n    {\r\n      id: \"fox\",\r\n      type: \"LHG\",\r\n      img: \"/img/여우.png\",\r\n    },\r\n    {\r\n      id: \"panda\",\r\n      type: \"LHP\",\r\n      img: \"/img/판다.png\",\r\n    },\r\n    {\r\n      id: \"rabbit\",\r\n      type: \"FVG\",\r\n      img: \"/img/토끼.png\",\r\n    },\r\n    {\r\n      id: \"dog\",\r\n      type: \"FVP\",\r\n      img: \"/img/개.png\",\r\n    },\r\n    {\r\n      id: \"cat\",\r\n      type: \"FHG\",\r\n      img: \"/img/고양이.png\",\r\n    },\r\n    {\r\n      id: \"seal\",\r\n      type: \"FHP\",\r\n      img: \"/img/물개.png\",\r\n    },\r\n    {\r\n      id: \"raccoons\",\r\n      type: \"RHP\",\r\n      img: \"/img/너구리.png\",\r\n    },\r\n  ]);\r\n  const [result, setResult] = React.useState();\r\n  React.useEffect(() => {\r\n    // console.log(\"여기좀 보슈\", props.type);\r\n    imges.map((item) => {\r\n      if (item.type === props.type) {\r\n        setResult(item.img);\r\n        return item;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {result && (\r\n        <Img key={imges.id} {...styles} src={result} onClick={_onClick} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nImgType.defaultProps = {\r\n  margin: \"6px\",\r\n  width: \"48px\",\r\n  height: \"48px\",\r\n  object_fit: null,\r\n  position: null,\r\n  right: null,\r\n  bottom: null,\r\n  _onClick: () => {},\r\n};\r\n\r\nconst Img = styled.img`\r\n  width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n  margin: ${(props) => props.margin};\r\n  cursor: ${(props) => props.cursor};\r\n  object-fit: ${(props) => props.object_fit};\r\n  position: ${(props) => props.position};\r\n  right: ${(props) => (props.src === \"LVP\" ? \"0px\" : props.right)};\r\n  bottom: ${(props) => (props.src === \"LVP\" ? \"50px\" : null)};\r\n`;\r\nexport default ImgType;\r\n","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  TestOne,\n  TestTwo,\n  TestThree,\n  TestFour,\n  TestFive,\n  TestSix,\n  TestSeven,\n  TestEight,\n  TestNine,\n  TestResult,\n} from \"./TestIndex\";\nimport TestData from \"./Testdata.json\";\nimport Progress from \"./Progress\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, Button, Image, Text } from \"../../elements/Index\";\nimport { userCreators } from \"../../redux/modules/user\";\nimport { history } from \"../../redux/configureStore\";\nimport ImgType from \"../../shared/ImgType\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst PropensityTest = props => {\n  const isToken = document.cookie.split(\"=\")[1];\n  const dispatch = useDispatch();\n  const userInfo = useSelector(state => state.user);\n  const userType = useSelector(state => state.user.userPropensityType);\n  const memberType = useSelector(state => state.user.memberPropensityType);\n  // const [active, setActive] = React.useState(preUserPropensityType);\n  const [isChecked, setIsChecked] = React.useState(\"#fff\");\n  const ToggleButton = answer => {\n    isChecked === \"#fff\" ? setIsChecked(\"#170184\") : setIsChecked(\"#fff\");\n  };\n\n  //스텝별로 스테이트 변화값에 따라 텍스트가 바뀌는지 먼저 확인\n  const [page, setpage] = useState(1);\n  // console.log(page, TestData.teststep);\n\n  // 최종 장소\n  const [userPropensityType, setUserPropensityType] = useState([]);\n  const [memberPropensityType, setMemberPropensityType] = useState([]);\n  //임시 장소\n  const [preUserPropensityType, setPreUserPropensityType] = useState(\"\");\n  const [preMemberPropensityType, setPreMemberPropensityType] = useState(\"\");\n\n  //자식요소의 밸류값을 가져와 임시에 저장\n  const handleUserCreate = answer => {\n    setPreUserPropensityType(answer);\n    // console.log(\"나의항목 임시저장\", answer);\n  };\n  const handleMemberCreate = answer => {\n    setPreMemberPropensityType(answer);\n    // console.log(\"상대방의 항목 임시저장\", answer);\n  };\n\n  //스테이트값에 변화를 버튼에 달아줌\n  //다음버튼 누를시에 변화된 값을 스테이트에 담아줌\n  const nextStep = () => {\n    //나에대한 항목\n    let preMy = userPropensityType;\n    let preYou = memberPropensityType;\n    // console.log(preUserPropensityType, preMemberPropensityType);\n\n    if (preUserPropensityType === \"\" || preMemberPropensityType === \"\") {\n      return window.alert(\"문항을 선택해주세요!\");\n      // Swal.fire(\n      //   '문항을 선택해주세요!',\n      //   '',\n      //   'info'\n      // )\n    } else {\n      setpage(page => page + 1);\n      setPreUserPropensityType(\"\");\n      setPreMemberPropensityType(\"\");\n      preMy.push(preUserPropensityType);\n      setUserPropensityType(preMy);\n      // console.log(\"내꺼 잘 들어감?\", userPropensityType);\n      //상대에 다한 항목\n\n      preYou.push(preMemberPropensityType);\n      setMemberPropensityType(preYou);\n      // console.log(\"너꺼 잘 들어감?\", memberPropensityType);\n    }\n  };\n\n  //이전버튼 누를시에 마지막으로 저장된값을 스테이트에 삭제함\n  const preStep = () => {\n    setpage(page => page - 1);\n\n    // 이전으로가면 마지막항목 제거 (나의것)\n    let toPopMy = userPropensityType;\n    toPopMy.pop();\n    setUserPropensityType(toPopMy);\n    // console.log(\"마지막 항목이 사라짐?\", userPropensityType);\n    //이전으로 가면 마지막 항목 제거 (상대방의 것)\n    let topopYou = memberPropensityType;\n    topopYou.pop();\n    setMemberPropensityType(topopYou);\n    // console.log(\"마지막 항목이 사라짐?\", memberPropensityType);\n  };\n\n  //회원가입\n  const register = () => {\n    setPreUserPropensityType(\"\");\n    setPreMemberPropensityType(\"\");\n    //나에대한 항목\n    let preMy = userPropensityType;\n    preMy.push(preUserPropensityType);\n    setUserPropensityType(preMy);\n    // console.log(\"내꺼 잘 들어감?\", userPropensityType);\n\n    //상대에 다한 항목\n    let preYou = memberPropensityType;\n    preYou.push(preMemberPropensityType);\n    setMemberPropensityType(preYou);\n    // console.log(\"너꺼 잘 들어감?\", memberPropensityType);\n\n    let realSnsId = String(userInfo.snsId);\n    let realUserId = userInfo.userId;\n\n    const registerInfo = {\n      snsId: realSnsId,\n      email: userInfo.email,\n      nickname: userInfo.nickName,\n      techStack: userInfo.techStack,\n      userPropensityType: userPropensityType,\n      memberPropensityType: memberPropensityType,\n    };\n    const testUpdateInfo = {\n      userPropensityType: userPropensityType,\n      memberPropensityType: memberPropensityType,\n    };\n\n    if (isToken) {\n      dispatch(userCreators.editTestMiddleware(realUserId, testUpdateInfo));\n      return setpage(page => page + 1);\n    } else {\n      dispatch(userCreators.signupMiddleware(registerInfo));\n      setpage(page => page + 1);\n    }\n  };\n\n  const exitResult = () => {\n    dispatch(userCreators.modal());\n    history.push(\"/\");\n    props.TestClose();\n  };\n\n  return (\n    <Grid>\n      {/* 상단헤더 */}\n      <Header>\n        <CloseBox\n          position=\"absolute\"\n          top=\"5px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n          height=\"100%\"\n          bg=\"111\"\n        >\n          <CloseIcon\n            sx={{ color: \"#fff\", fontSize: 30 }}\n            onClick={() => {\n              props.TestClose();\n              window.location.reload();\n            }}\n            cursor=\"pointer\"\n          />\n        </CloseBox>\n        <Grid\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          height=\"100%\"\n        >\n          <Text size=\"20px\" bold color=\"#fff\">\n            협업테스트\n          </Text>\n        </Grid>\n      </Header>\n      {/* 프로그래스바 */}\n      <Grid width=\"70%\" margin=\"15px auto\" height=\"10%\">\n        <Progress page={page} />\n      </Grid>\n      {/* 이미지결과 */}\n      <StepImgBox>\n        {TestData.teststep.map(step => {\n          if (step.step === page) {\n            return <TestImg key={step.step} src={step.img} />;\n          }\n        })}\n        {page === 10 &&\n          TestData.testresult.map(result => {\n            if (result.type === userType) {\n              return <img key={result.type} width=\"40%\" src={result.img} />;\n            }\n          })}\n      </StepImgBox>\n\n      {/* 컨텐츠자리 */}\n      <Grid width=\"90%\" margin=\"auto\" height=\"42%\">\n        {page === 1 && (\n          <TestOne\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 2 && (\n          <TestTwo\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 3 && (\n          <TestThree\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 4 && (\n          <TestFour\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 5 && (\n          <TestFive\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 6 && (\n          <TestSix\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 7 && (\n          <TestSeven\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 8 && (\n          <TestEight\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 9 && (\n          <TestNine\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 10 && <TestResult userType={userType} />}\n      </Grid>\n      {/* 버튼 */}\n      <Grid\n        display=\"flex\"\n        width=\"90%\"\n        justifyContent=\"center\"\n        height=\"8%\"\n        margin=\"30px auto\"\n      >\n        {/* 5.다음결과값이 없을때 페이지처리 */}\n        {page !== 1 && page !== 10 && (\n          <Button width=\"40%\" margin=\"5px\" _onClick={preStep}>\n            이전버튼\n          </Button>\n        )}\n        {page < 9 && (\n          <Button width=\"40%\" margin=\"5px\" _onClick={nextStep}>\n            다음버튼\n          </Button>\n        )}\n        {page == 9 && (\n          <Button width=\"40%\" margin=\"5px\" _onClick={register}>\n            제출하기\n          </Button>\n        )}\n        {page == 10 && (\n          <Button\n            common\n            fontSize=\"11px\"\n            width=\"80%\"\n            margin=\"5px\"\n            _onClick={exitResult}\n          >\n            내 성향에 맞는 팀원을 찾으러 가볼까요?\n          </Button>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst StepImgBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 10px 0;\n  height: 25%;\n  @media (max-width: 650px) {\n    height: 15%;\n  }\n`;\n\nconst TestImg = styled.img`\n  width: 40%;\n  height: 40%;\n  @media (max-width: 650px) {\n    width: 30%;\n    height: 100%;\n  }\n`;\nconst Header = styled.div`\n  height: 50px;\n  background-color: #17334a;\n  position: relative;\n  text-align: center;\n  padding: 10px 0 10px 0;\n  @media (max-width: 650px) {\n    height: 25px;\n  }\n`;\n\nconst CloseBox = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 10px;\n  width: 20px;\n  padding: 10px;\n  height: 100%;\n  @media (max-width: 650px) {\n    top: -4px;\n  }\n`;\n\nexport default PropensityTest;\n","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { Grid, Input, Text, Button, Image } from \"../elements/Index\";\nimport { Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { userCreators } from \"../redux/modules/user\";\nimport Select from \"react-select\";\n\nimport PropensityTest from \"./propensityTest/PropensityTest\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst LoginModal = (props) => {\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.user);\n  const sigunupModalState = useSelector(\n    (state) => state.user.sigunupModalState\n  );\n\n  var regExpNick = /^[a-zA-Z0-9ㄱ-ㅎ|ㅏ-ㅣ|가-힣]{2,5}$/;\n  var regExpEmail =\n    /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n\n  //테크스택 옵션\n  const techStackOption = [\n    { value: \"React\", label: \"React\" },\n    { value: \"Java\", label: \"Java\" },\n    { value: \"Spring\", label: \"Spring\" },\n    { value: \"JavaScript\", label: \"JavaScript\" },\n    { value: \"Python\", label: \"Python\" },\n    { value: \"Node\", label: \"Node\" },\n    { value: \"cpp\", label: \"C++\" },\n    { value: \"Flask\", label: \"Flask\" },\n    { value: \"Django\", label: \"Django\" },\n    { value: \"Vue\", label: \"Vue\" },\n    { value: \"php\", label: \"php\" },\n    { value: \"Swift\", label: \"Swift\" },\n    { value: \"Kotlin\", label: \"Kotlin\" },\n    { value: \"TypeScript\", label: \"TypeScript\" },\n  ];\n\n  //모달\n  const { showModal, setShowModal } = props;\n\n  const TestClose = () => {\n    setShowModal(false);\n  };\n  const modalClose = () => {\n    setShowModal(false);\n  };\n\n  //입력부분\n  const [nickName, setNickName] = useState();\n  const [email, setEmail] = useState(userInfo.email);\n  const [techStack, setTeckstack] = useState([]);\n  const [emailDup, setEmailDup] = useState(false);\n  const [nameDup, setNameDup] = useState(false);\n  const [test, setTest] = useState(false);\n\n  // console.log(\"닉네임\", nickName);\n  // console.log(\"이메일\", email);\n  // console.log(\"기술스택\", techStack);\n  // console.log(\"sns아이디\", userInfo.snsId);\n\n  //닉네임 체크 미들웨어\n  const nickCheck = (nickName) => {\n    if (nickName === undefined) {\n      alert(\"닉네임을 입력 해주세요.\");\n      return false;\n    }\n\n    if (!regExpNick.test(nickName)) {\n      alert(\"닉네임은 2~5자 숫자 조합만 가능합니다.\");\n      return false;\n    }\n    dispatch(userCreators.nickCheckMiddleWare(nickName));\n  };\n\n  //이메일 체크 미들웨어\n  const emailCheck = (email) => {\n    if (nickName === \"\") {\n      alert(\"이메일을 입력 해주세요.\");\n      return false;\n    }\n\n    if (!regExpEmail.test(email)) {\n      alert(\"이메일 형식을 확인해주세요.\");\n      return false;\n    }\n    dispatch(userCreators.emailCheckMiddleWare(email));\n  };\n\n  //테스트 마친 회원가입 api\n  const preSignUP = () => {\n    if (techStack.length === 0) {\n      alert(\"기술스택을 선택 해주세요.\");\n      return false;\n    }\n    if (techStack.length > 8) {\n      alert(\"기술선택을 7개 이하로 입력해주세요.\");\n      return false;\n    }\n    if (nameDup === false) {\n      alert(\"닉네임 중복확인을 해주세요.\");\n      return false;\n    }\n    const registerInfo = {\n      snsId: userInfo.snsId,\n      email: userInfo.email,\n      nickName: nickName,\n      techStack: techStack,\n    };\n    // console.log(registerInfo);\n    dispatch(userCreators.testUserMiddleWare(registerInfo));\n    setTest(true);\n  };\n\n  const customStyles = {\n    control: (styles) => ({\n      ...styles,\n      backgroundColor: \"white\",\n      borderRadius: \"20px\",\n      fontSize: \"12px\",\n      textAlign: \"left\",\n      padding: \"0 0 0 12px\",\n    }),\n    multiValue: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: \"#17334A\",\n      color: \"white\",\n      borderRadius: \"20px\",\n    }),\n    multiValueLabel: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n    }),\n    multiValueRemove: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      \":hover\": {\n        backgroundColor: data.color,\n        color: \"white\",\n      },\n    }),\n  };\n  //회원가입이 필요한 유저일경우 모달창 활성화\n  React.useEffect(() => {\n    if (sigunupModalState) {\n      setShowModal(true);\n    }\n  }, [sigunupModalState]);\n\n  //개선해야됨\n  // const openWindow = () => {\n  //   let customWindow = window.open(\n  //     \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\",\n  //     \"\",\n  //     \"_blank\"\n  //   );\n\n  //   // setTimeout(() => {\n  //   //   customWindow.close();\n  //   // }, 5000);\n\n  //   //   //s3\n  //   //   // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://kbumsoo.s3-website.ap-northeast-2.amazonaws.com/user/kakao/callback&response_type=code\";\n\n  //   //   //local\n  //   //   // (\"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\");\n\n  //   //   // 최종 주소\n  //   //   // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=https://scopewith.com/user/kakao/callback&response_type=code\";\n  // };\n\n  const closeWindow = () => {\n    setTimeout(() => {\n      window.close();\n    }, 500);\n  };\n\n  //회원이 아닐경우 회원가입, 회원일 경우 메인으로 이동\n  if (sigunupModalState == true) {\n    return (\n      <Dialog\n        maxWidth={\"sm\"}\n        scroll=\"paper\"\n        open={showModal}\n        // onClose={modalClose}\n      >\n        <SignupModalWrap>\n          {/* 테스트가 필요한경우 */}\n          {!test ? (\n            <Grid>\n              {/* 헤더 */}\n              <Grid\n                height=\"7%\"\n                bg=\"#17334A\"\n                position=\"relative\"\n                textAlign=\"center\"\n                padding=\"10px 0 10px 0\"\n              >\n                <Grid\n                  position=\"absolute\"\n                  top=\"0px\"\n                  right=\"10px\"\n                  width=\"20px\"\n                  padding=\"10px\"\n                >\n                  <CloseIcon\n                    sx={{ color: \"#fff\", fontSize: 35 }}\n                    onClick={TestClose}\n                    cursor=\"pointer\"\n                  />\n                </Grid>\n                <Grid\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  height=\"40px\"\n                >\n                  <Text size=\"15px\" bold color=\"#fff\">\n                    회원가입\n                  </Text>\n                </Grid>\n              </Grid>\n              {/* 타이틀 */}\n              <Grid height=\"3%\" textAlign=\"center\" margin=\"30px 0 10px 0\">\n                <Text bold=\"bold\" size=\"21px\">\n                  Welcome to Scope!\n                </Text>\n              </Grid>\n              {/* 입력부분 */}\n              <Grid\n                display=\"flex\"\n                justifyContent=\"center\"\n                height=\"58%\"\n                textAlign=\"center\"\n                padding=\"10px 0\"\n                margin=\"auto\"\n              >\n                <Grid width=\"90%\" height=\"70%\" display=\"flex\">\n                  {/* 라벨 */}\n                  <Grid\n                    width=\"15%\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"top\"\n                    margin=\"5px auto\"\n                    height=\"280px\"\n                  >\n                    <Grid\n                      height=\"25%\"\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                      margin=\"20px 0 10px 0\"\n                    >\n                      <Text color=\"#111\">닉네임</Text>\n                    </Grid>\n                    <Grid padding=\"10px 0 0 0\">\n                      <Text color=\"#111\">기술스택</Text>\n                    </Grid>\n                  </Grid>\n                  {/* 입력부분 */}\n                  <Grid\n                    width=\"60%\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"top\"\n                    margin=\"15px auto\"\n                    height=\"280px\"\n                  >\n                    <Grid height=\"13%\" margin=\"16px 0\">\n                      <Input\n                        borderRadius=\"25px\"\n                        border=\"1px solid #ddd\"\n                        fontSize=\"12px\"\n                        padding=\"0 0 0 23px\"\n                        height=\"100%\"\n                        placeholder=\"닉네임을 입력해주세요\"\n                        _onChange={(e) => {\n                          setNickName(e.target.value);\n                        }}\n                      >\n                        닉네임\n                      </Input>\n                    </Grid>\n                    <Grid height=\"40%\" padding=\"0 0 10px 0\">\n                      <Select\n                        styles={customStyles}\n                        placeholder=\"보유중인 기술을 선택해주세요!\"\n                        isMulti\n                        name=\"techStack\"\n                        options={techStackOption}\n                        className=\"basic-multi-select\"\n                        classNamePrefix=\"select\"\n                        onChange={(e) => {\n                          let techStack = [];\n                          let arr = e;\n                          let idx = 0;\n                          for (idx = 0; idx < e.length; idx++) {\n                            techStack.push(arr[idx][\"value\"]);\n                          }\n                          setTeckstack(techStack);\n                        }}\n                      >\n                        기술스택\n                      </Select>\n                    </Grid>\n                  </Grid>\n                  {/* 중복체크 */}\n                  <Grid\n                    width=\"20%\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"center\"\n                    margin=\"10px auto\"\n                    height=\"280px\"\n                  >\n                    <Grid height=\"85%\">\n                      <Button\n                        height=\"35px\"\n                        fontSize=\"10px\"\n                        text=\"닉네임 중복\"\n                        _onClick={() => {\n                          nickCheck(nickName);\n                          setNameDup(true);\n                        }}\n                      ></Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              {/* 버튼 */}\n              <Grid width=\"50%\" margin=\"auto\" height=\"10%\">\n                <Button\n                  text=\"성향테스트\"\n                  margin=\"30px 0\"\n                  _onClick={() => {\n                    preSignUP();\n                  }}\n                ></Button>\n              </Grid>\n            </Grid>\n          ) : (\n            <PropensityTest TestClose={TestClose} />\n          )}\n        </SignupModalWrap>\n      </Dialog>\n    );\n  } else {\n    return (\n      <Dialog maxWidth={\"md\"} scroll=\"paper\" open={showModal}>\n        <LoginModalWrap>\n          <Grid\n            height=\"15%\"\n            bg=\"#17334A\"\n            position=\"relative\"\n            padding=\"10px 0 10px 0\"\n            boxShadow=\"0 5px 25px rgb(0 0 0 / 15%)\"\n          >\n            <Grid\n              position=\"absolute\"\n              top=\"0px\"\n              right=\"6%\"\n              width=\"3%\"\n              padding=\"10px\"\n            >\n              <CloseIcon\n                sx={{ color: \"#fff\", fontSize: 35 }}\n                onClick={modalClose}\n                cursor=\"pointer\"\n              />\n            </Grid>\n            <Grid\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              height=\"40px\"\n            >\n              <Text size=\"25px\" bold color=\"#fff\">\n                로그인\n              </Text>\n            </Grid>\n          </Grid>\n          <Grid height=\"80%\" padding=\"20px 0\">\n            <Grid\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              position=\"relative\"\n              justifyContent=\"center\"\n            >\n              <Grid margin=\"20px 0\" display=\"flex\" justifyContent=\"center\">\n                <img width=\"40%\" src=\"/img/호랑이.png\" />\n              </Grid>\n              <Title>Welcome to Scope!</Title>\n              <Grid display=\"flex\" flexDirection=\"column\">\n                <GithubBtn\n                  onClick={() => {\n                    setShowModal(true);\n                    window.location.href =\n                      // window.open(\"\", \"\", \"_blank\")\n                      //s3\n                      // \"https://github.com/login/oauth/authorize?client_id=5bb2c0fab941fb5b8f9f&scope=repo:status read:repo_hook user:email&redirect_uri=http://kbumsoo.s3-website.ap-northeast-2.amazonaws.com/user/github/callback\";\n\n                      //local\n                      // \"https://github.com/login/oauth/authorize?client_id=5bb2c0fab941fb5b8f9f&scope=repo:status read:repo_hook user:email&redirect_uri=http://localhost:3000/user/github/callback\";\n\n                      // 최종 주소\n\n                      \"https://github.com/login/oauth/authorize?client_id=5bb2c0fab941fb5b8f9f&scope=repo:status read:repo_hook user:email&redirect_uri=https://scopewith.com/user/github/callback\";\n                  }}\n                >\n                  깃허브로그인\n                </GithubBtn>\n                <KakaoBtn\n                  onClick={() => {\n                    setShowModal(true);\n                    // openWindow();\n                    window.location.href =\n                      // window.open(\n                      //   \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\",\n                      //   \"\",\n                      //   \"_blank\"\n                      // );\n                      //s3\n                      // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://kbumsoo.s3-website.ap-northeast-2.amazonaws.com/user/kakao/callback&response_type=code\";\n\n                      //local\n                      // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\";\n\n                      // 최종 주소\n                      \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=https://scopewith.com/user/kakao/callback&response_type=code\";\n                    closeWindow();\n                  }}\n                >\n                  카카오로그인\n                </KakaoBtn>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid display=\"flex\" justifyContent=\"center\" margin=\"10px 0 30px 0\">\n            <Grid width=\"20%\" backgroundColor=\"#17334A\" height=\"3px\"></Grid>\n          </Grid>\n        </LoginModalWrap>\n      </Dialog>\n    );\n  }\n};\n\nconst Title = styled.h1`\n  @media (max-width: 620px) {\n    font-size: 20px;\n  }\n`;\nconst LoginModalWrap = styled.div`\n  width: 550px;\n  height: 100%;\n  @media (max-width: 620px) {\n    width: 310px;\n  }\n  /* @media (max-width: 375px) {\n    width: 250px;\n  } */\n`;\n\nconst SignupModalWrap = styled.div`\n  height: 100%;\n  width: 550px;\n\n  @media (max-width: 650px) {\n    width: 310px;\n    height: 550px;\n    font-size: 11px;\n  }\n`;\n\nconst GithubBtn = styled.div`\n  display: flex;\n  width: 282px;\n  height: 50px;\n  margin: 5px auto;\n  border-radius: 25px;\n  font-size: 14px;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  background-color: #272e33;\n  box-shadow: 0 5px 25px rgb(0 0 0 / 15%);\n  cursor: pointer;\n  @media (max-width: 620px) {\n    width: 170px;\n    font-size: 12px;\n  }\n`;\n\nconst KakaoBtn = styled.div`\n  display: flex;\n  width: 282px;\n  height: 50px;\n  margin: 5px auto;\n  border-radius: 25px;\n  font-size: 14px;\n  justify-content: center;\n  align-items: center;\n  color: #606060;\n  cursor: pointer;\n  background-color: #fae100;\n  box-shadow: 0 5px 25px rgb(0 0 0 / 15%);\n\n  @media (max-width: 620px) {\n    width: 170px;\n    font-size: 12px;\n  }\n`;\n\nexport default LoginModal;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Button } from \"../elements/Index\";\nimport LoginModal from \"./LoginModal\";\nimport { userCreators } from \"../redux/modules/user\";\nimport { deleteCookie } from \"../shared/Cookie\";\nimport ImgType from \"../shared/ImgType\";\n\nconst HeaderRight = (props) => {\n  const dispatch = useDispatch();\n  const isToken = document.cookie;\n  const userInfo = useSelector((state) => state.user);\n  // console.log(userInfo);\n  const [showModal, setShowModal] = React.useState(false);\n  const [doLogout, setDoLogOut] = React.useState(false);\n\n  const sigunupModalState = useSelector(\n    (state) => state.user.sigunupModalState\n  );\n  const modalOpen = () => {\n    setShowModal(true);\n  };\n  // console.log(userInfo.userPropensityType);\n\n  const logOut = () => {\n    deleteCookie(\"ScopeUser\");\n    dispatch(userCreators.logOut());\n    history.replace(\"/\");\n    setDoLogOut(!doLogout);\n  };\n  React.useLayoutEffect(() => {}, [\n    isToken,\n    doLogout,\n    userInfo.userPropensityType,\n  ]);\n\n  const goMypage = () => {\n    history.push(`/`);\n    setTimeout(() => {\n      history.push(`/mypage/${userInfo.userId}`);\n    }, 50);\n  };\n\n  if (isToken) {\n    return (\n      <>\n        {userInfo && (\n          <Grid>\n            <HeaderWrapper>\n              {/* <Message\n            onClick={() => {\n              history.push(`/message`);\n            }}\n          >\n            <i class=\"far fa-envelope\"></i>\n          </Message>\n          <Bell>\n            <i class=\"far fa-bell\"></i>\n          </Bell> */}\n              <IconWrap>\n                <Grid\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  margin=\"0 20px\"\n                  _onClick={() => {\n                    goMypage();\n                    // history.push(`/mypage/${userInfo.userId}`);\n                    // location.href = `/mypage/${userInfo.userId}`;\n                  }}\n                >\n                  {userInfo.userPropensityType === \"LVG\" && (\n                    <UserImg size=\"50\" src=\"/img/호랑이.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"LVP\" && (\n                    <UserImg src=\"/img/늑대.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"LHG\" && (\n                    <UserImg src=\"/img/여우.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"LHP\" && (\n                    <UserImg src=\"/img/판다.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FVG\" && (\n                    <UserImg src=\"/img/토끼.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FVP\" && (\n                    <UserImg src=\"/img/개.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FHG\" && (\n                    <UserImg src=\"/img/고양이.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FHP\" && (\n                    <UserImg src=\"/img/물개.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"RHP\" && (\n                    <UserImg src=\"/img/너구리.png\"></UserImg>\n                  )}\n                </Grid>\n              </IconWrap>\n              <ButtonWrap>\n                <Button\n                  common\n                  width=\"100px\"\n                  text=\"로그아웃\"\n                  _onClick={logOut}\n                ></Button>\n              </ButtonWrap>\n            </HeaderWrapper>\n          </Grid>\n        )}\n      </>\n    );\n  } else {\n    return (\n      <HeaderWrapper>\n        <ButtonWrap>\n          <Btn onClick={modalOpen}>로그인</Btn>\n        </ButtonWrap>\n\n        <LoginModal showModal={showModal} setShowModal={setShowModal} />\n      </HeaderWrapper>\n    );\n  }\n};\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  padding-right: 0px;\n  justify-content: space-between;\n  @media screen and (max-width: 595px) {\n    width: 100px;\n  } ;\n`;\n\nconst Message = styled.div`\n  font-size: 30px;\n  margin-top: 8px;\n  margin-right: 16px;\n  cursor: pointer;\n`;\nconst Bell = styled.div`\n  margin-top: 8px;\n  font-size: 30px;\n  cursor: pointer;\n`;\n\nconst ButtonWrap = styled.div`\n  @media screen and (max-width: 595px) {\n    margin: auto 2px auto auto;\n  } ;\n`;\n\nconst IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  margin: auto 10px auto auto;\n  cursor: pointer;\n  @media screen and (max-width: 767px) {\n    display: none;\n  } ;\n`;\n\nconst UserImg = styled.img`\n  object-fit: cover;\n  width: 50px;\n  border-radius: 50px;\n  box-shadow: 0 0 3px #ddd;\n  cursor: pointer;\n`;\n\nconst Btn = styled.button`\n  background-color: #fff;\n  color: #17334a;\n  border-radius: 25px;\n  border: 1px solid #17334a;\n  cursor: pointer;\n  height: 50px;\n  width: 120px;\n  &:hover {\n    background-color: #17334a;\n    color: #fff;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  font-family: \"GmarketSans\";\n  @media screen and (max-width: 425px) {\n    height: 35px;\n    width: 80px;\n    font-size: 12px;\n  }\n`;\n\nexport default HeaderRight;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid } from \"../elements/Index\";\nimport styled from \"styled-components\";\nimport HeaderLeft from \"../components/HeaderLeft\";\nimport HeaderRight from \"./HeaderRight\";\n\nconst Header = props => {\n  //로고를 망원경 하나로 바꾸고 , 닉네임 없애고, 로그아웃을 삼단선으로\n  return (\n    <>\n      <Wrap>\n        <Grid width=\"auto\" height=\"auto\" margin=\"0 0 0 20px\">\n          <HeaderLeft />\n        </Grid>\n        <Grid width=\"auto\" height=\"auto\" margin=\"0 20px 0 0 \">\n          <HeaderRight />\n        </Grid>\n      </Wrap>\n    </>\n  );\n};\n\nconst Wrap = styled.div`\n  max-width: 1900px;\n  margin: auto;\n  height: 10%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0);\n  padding: 20px 0;\n  z-index: 10;\n  position: relative;\n\n  @media screen and (max-width: 750px) {\n    width: 100vw;\n    height: 20px;\n    margin: auto;\n  } ;\n`;\n\nexport default Header;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst LogoButton = (props) => {\r\n  return (\r\n    <BorderRadius>\r\n      <IMGS\r\n        id={props.item.id}\r\n        src={props.item.img}\r\n        active={props.item.active}\r\n        onClick={() => {\r\n          props.onClick();\r\n        }}\r\n      ></IMGS>\r\n    </BorderRadius>\r\n  );\r\n};\r\nconst BorderRadius = styled.div`\r\n  border-radius: 250px;\r\n  margin: auto;\r\n`;\r\n\r\nconst IMGS = styled.img`\r\n  cursor: pointer;\r\n  width: 68px;\r\n  margin: 10px 15px;\r\n  opacity: ${(props) => (props.active ? 1 : 0.4)};\r\n  transition: all 0.1s linear;\r\n  :hover {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  @media screen and (max-width: 750px) {\r\n    width: 30px;\r\n  }\r\n`;\r\n\r\nexport default LogoButton;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid } from \"../elements/Index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postActions } from \"../redux/modules/post\";\r\nimport { stackAction } from \"../redux/modules/stack\";\r\nimport LogoButton from \"../elements/LogoButton\";\r\n\r\nconst Stack = (props) => {\r\n  const dispatch = useDispatch();\r\n  const stack = useSelector((state) => state.stack.stack);\r\n  const stack2 = useSelector((state) => state.stack.stacks);\r\n  //필터 클릭\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"React\",\r\n      img: \"/img/react.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Java\",\r\n      img: \"/img/java.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"JavaScript\",\r\n      img: \"/img/javascript.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Python\",\r\n      img: \"/img/python.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Node\",\r\n      img: \"/img/node.js.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"C++\",\r\n      img: \"/img/c__.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Flask\",\r\n      img: \"/img/flask.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Django\",\r\n      img: \"/img/django.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Vue\",\r\n      img: \"/img/vue.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Spring\",\r\n      img: \"/img/spring.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"php\",\r\n      img: \"/img/php.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Swift\",\r\n      img: \"/img/swift.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Kotlin\",\r\n      img: \"/img/kotlin.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"TypeScript\",\r\n      img: \"/img/typescript.png\",\r\n      active: false,\r\n    },\r\n  ]);\r\n  React.useEffect(() => {\r\n    const stacks = Object.entries(stack);\r\n    // console.log(stacks);\r\n    setArr((state) => {\r\n      return state.map((stateItem, idx) => {\r\n        if (stateItem.id === stacks[idx][1]) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n\r\n    // arr.map((arrItem, idx) => {\r\n    //   if (arrItem.id === stacks[idx][1]) {\r\n    //     setArr({ ...arrItem, active: !arrItem.active });\r\n    //   }\r\n    // });\r\n  }, []);\r\n\r\n  const Filter = (item) => {\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id === item.id) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n\r\n    const result = Object.values(stack).find((r) => r === item.id);\r\n    // console.log(\"이 값이 있으면 지워줘야함\", result);\r\n    if (result) {\r\n      dispatch(postActions.isMainPage(true));\r\n      dispatch(stackAction.setStack(item.id));\r\n    } else {\r\n      dispatch(postActions.isMainPage(true));\r\n      dispatch(stackAction.getStack(item.id));\r\n    }\r\n    const result2 = stack2.find((r) => r === item.id);\r\n    if (result2) {\r\n      dispatch(stackAction.setStack2(item.id));\r\n    } else {\r\n      dispatch(stackAction.getStack2(item.id));\r\n    }\r\n\r\n    // console.log(\"dodo\", stack2);\r\n  };\r\n\r\n  const arrStack = (item) => {\r\n    const nowStack = props.stacks;\r\n    const alreadyChecked = nowStack.find((p) => p === item.id);\r\n    // console.log(alreadyChecked);\r\n    if (!alreadyChecked) {\r\n      props.setStacks(nowStack.concat(item.id));\r\n    }\r\n    if (alreadyChecked) {\r\n      const deleteCheck = nowStack.filter((p) => p !== alreadyChecked);\r\n      props.setStacks(deleteCheck);\r\n    }\r\n\r\n    // console.log(nowStack);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      display=\"flex\"\r\n      width=\"75%\"\r\n      margin=\"25px auto 20px auto\"\r\n      boxShadow=\"0px 0px 10px #ddd\"\r\n      padding=\"5px 10px\"\r\n      borderRadius=\"20px\"\r\n      overflow=\"auto\"\r\n      alignItems=\"center\"\r\n      maxWidth=\"1900px\"\r\n    >\r\n      {arr.map((item) => {\r\n        return (\r\n          <LogoButton\r\n            item={item}\r\n            key={item.id}\r\n            onClick={() => {\r\n              if (props.do === \"StacksComponent\") {\r\n                Filter(item);\r\n                arrStack(item);\r\n              }\r\n            }}\r\n          ></LogoButton>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Stack;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { history } from \"../redux/configureStore\";\r\nimport { Grid, Image, Progress } from \"../elements/Index\";\r\nimport Img from \"../images/flutter.png\";\r\n\r\nconst PostStacks = (props) => {\r\n  // console.log(props);\r\n  const whatPage = useSelector((state) => state.post.whatPage);\r\n  const reduxstack = useSelector((state) => state.stack.stack);\r\n  const [stacks, setStacks] = React.useState(9);\r\n  const [Stack, setStack] = React.useState([\r\n    {\r\n      id: \"React\",\r\n      img: \"/img/react.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Java\",\r\n      img: \"/img/java.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"JavaScript\",\r\n      img: \"/img/javascript.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Python\",\r\n      img: \"/img/python.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Node\",\r\n      img: \"/img/node.js.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"C++\",\r\n      img: \"/img/c__.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Flask\",\r\n      img: \"/img/flask.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Django\",\r\n      img: \"/img/django.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Vue\",\r\n      img: \"/img/vue.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Spring\",\r\n      img: \"/img/spring.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"php\",\r\n      img: \"/img/php.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Swift\",\r\n      img: \"/img/swift.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Kotlin\",\r\n      img: \"/img/kotlin.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"TypeScript\",\r\n      img: \"/img/typescript.png\",\r\n      active: false,\r\n    },\r\n  ]);\r\n  let stack = props.stack;\r\n  // console.log(stack);\r\n  // console.log(\"-----\");\r\n\r\n  React.useEffect(() => {\r\n    // let stack = props.stack;\r\n    // setStacks(stack);\r\n    Stack.map((item) => {\r\n      if (item.id === props.stack) {\r\n        setStacks(item.img);\r\n        return item;\r\n      }\r\n      return item;\r\n    });\r\n  }, [whatPage, reduxstack]);\r\n\r\n  return (\r\n    <div>\r\n      {stacks && (\r\n        <Grid\r\n          display=\"flex\"\r\n          width=\"80%\"\r\n          height=\"85%\"\r\n          borderRadius=\"100%\"\r\n          bg=\"#fff\"\r\n          margin=\"-33px 0px\"\r\n          boxShadow=\"0 0 2px #ccc\"\r\n        >\r\n          <IMGS src={stacks}></IMGS>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst IMGS = styled.img`\r\n  width: 70%;\r\n  margin: auto;\r\n  padding: 5px;\r\n  align-items: center;\r\n`;\r\n\r\nexport default PostStacks;\r\n","import React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst Apply = (props) => {\n  const dispatch = useDispatch();\n  const [comment, setComment] = React.useState();\n  const { modalClose, postId } = props;\n  const apply = () => {\n    const applyComment = {\n      comment: comment,\n    };\n    dispatch(applyCreators.applyProjectAPI(postId, applyComment));\n    modalClose(\"신청\");\n  };\n  return (\n    <React.Fragment>\n      <ModalWrap>\n        <Grid height=\"10%\" position=\"relative\">\n          <Grid\n            position=\"absolute\"\n            top=\"0px\"\n            right=\"10px\"\n            width=\"20px\"\n            padding=\"10px\"\n          >\n            <CloseIcon fontSize=\"large\" onClick={modalClose} />\n          </Grid>\n        </Grid>\n        <Grid margin=\"auto\" height=\"90%\" width=\"80%\" alignItems=\"center\">\n          <Grid height=\"20%\" textAlign=\"center\">\n            <Text size=\"30px\" bold>\n              지원신청\n            </Text>\n          </Grid>\n          <Grid height=\"22%\" margin=\"10px 0\" textAlign=\"center\">\n            <Input\n              padding=\"0 0 0 20px\"\n              borderRadius=\"25px\"\n              border=\"1px solid #eee\"\n              height=\"100%\"\n              backgroundColor=\"#fff\"\n              placeholder=\"간단한 본인의 기술스택 및 자기소개\"\n              _onChange={(e) => {\n                // console.log(e.target.value);\n                setComment(e.target.value);\n              }}\n            ></Input>\n          </Grid>\n          <Grid height=\"10%\">\n            <Button borderRadius=\"25px\" _onClick={apply}>\n              지원신청\n            </Button>\n          </Grid>\n        </Grid>\n      </ModalWrap>\n    </React.Fragment>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 300px;\n  position: relative;\n  /* @media (max-width: 620px) {\n    margin: auto;\n    margin-top: 30px;\n    width: 90%;\n  } */\n  @media (max-width: 375px) {\n    width: 300px;\n  }\n`;\n\n// const Contents = styled.div`\n//   margin: auto;\n//   height: 90%;\n//   width: 320px;\n//   text-align: center;\n//   @media (max-width: 620px) {\n//     margin: auto;\n//     margin-top: 30px;\n//     width: 90%;\n//   }\n// `;\n\nexport default Apply;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst Cancel = (props) => {\n  const dispatch = useDispatch();\n  const { modalClose, postId } = props;\n  const cancel = () => {\n    dispatch(applyCreators.cancelProjectAPI(postId));\n    modalClose(\"취소\");\n  };\n  return (\n    <ModalWrap>\n      <Grid height=\"10%\" position=\"relative\">\n        <Grid\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n        >\n          <CloseIcon fontSize=\"large\" onClick={modalClose} />\n        </Grid>\n      </Grid>\n\n      <Contents\n        margin=\"auto\"\n        height=\"90%\"\n        width=\"320px\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n      >\n        <Grid height=\"20%\">\n          <Text size=\"30px\" bold>\n            지원취소\n          </Text>\n        </Grid>\n        <Grid height=\"25%\" margin=\"10px 0\">\n          <Text size=\"14px\">지원취소를 원하시면 아래 버튼을 클릭해주세요</Text>\n        </Grid>\n        <Grid height=\"10%\">\n          <Button borderRadius=\"25px\" _onClick={cancel}>\n            지원취소\n          </Button>\n        </Grid>\n      </Contents>\n    </ModalWrap>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 300px;\n  position: relative;\n  @media (max-width: 620px) {\n    margin: auto;\n    margin-top: 30px;\n    width: 90%;\n  }\n`;\nconst Contents = styled.div`\n  margin: auto;\n  height: 90%;\n  width: 320px;\n\n  text-align: center;\n  @media (max-width: 620px) {\n    margin: auto;\n    margin-top: 30px;\n    width: 90%;\n  }\n`;\n\nexport default Cancel;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst TeamExit = props => {\n  const dispatch = useDispatch();\n  const { modalClose, postId } = props;\n  const exitTeam = () => {\n    const isPostId = {\n      postId: postId,\n    };\n    dispatch(applyCreators.exitTeamAPI(isPostId));\n    modalClose(\"탈퇴\");\n  };\n  return (\n    <ModalWrap>\n      <Grid height=\"10%\" position=\"relative\">\n        <Grid\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n        >\n          <CloseIcon fontSize=\"large\" onClick={modalClose} />\n        </Grid>\n      </Grid>\n\n      <Grid\n        margin=\"auto\"\n        height=\"90%\"\n        width=\"320px\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n      >\n        <Grid height=\"20%\" textAlign=\"center\">\n          <Text size=\"30px\" bold>\n            팀탈퇴\n          </Text>\n        </Grid>\n        <Grid height=\"25%\" margin=\"10px 0\">\n          <Text size=\"14px\">\n            정말로 탈퇴하시겠습니까? <br /> 한번 탈퇴하면 다시 신청이 불가능할\n            수 있습니다.\n          </Text>\n        </Grid>\n        <Grid height=\"10%\">\n          <Button borderRadius=\"25px\" _onClick={exitTeam}>\n            팀탈퇴\n          </Button>\n        </Grid>\n      </Grid>\n    </ModalWrap>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 300px;\n  position: relative;\n`;\n\nexport default TeamExit;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst SubmitUrl = props => {\n  const dispatch = useDispatch();\n  const [front, setFront] = React.useState();\n  const [back, setBack] = React.useState();\n  const { modalClose, postId } = props;\n  let regex =\n    /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n  const submitUrl = () => {\n    if (regex.test(front) && regex.test(back)) {\n      const github = {\n        frontUrl: front,\n        backUrl: back,\n      };\n      dispatch(applyCreators.submitUrlAPI(postId, github));\n      modalClose(\"제출\");\n      return;\n    }\n\n    return window.alert(\"올바른 URL 주소가 필요합니다.\");\n  };\n\n  return (\n    <ModalWrap>\n      <Grid height=\"10%\" position=\"relative\">\n        <Grid\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n        >\n          <CloseIcon fontSize=\"large\" onClick={modalClose} />\n        </Grid>\n      </Grid>\n      <Grid\n        margin=\"auto\"\n        height=\"90%\"\n        // justifyContent=\"center\"\n        width=\"90%\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n      >\n        <Grid height=\"10%\" textAlign=\"center\">\n          <Text bold=\"bold\" size=\"30px\">\n            프로젝트 소개\n          </Text>\n        </Grid>\n        <Grid height=\"10%\" margin=\"10px 0\">\n          <Text size=\"14px\">\n            완료된 프로젝트를 소개해주시겠어요? <br />\n          </Text>\n        </Grid>\n        <Grid display=\"flex\" height=\"40%\" width=\"90%\" margin=\"auto\">\n          <Grid\n            display=\"flex\"\n            flexDirection=\"column\"\n            height=\"80%\"\n            width=\"30%\"\n            margin=\"auto\"\n          >\n            <Grid\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              margin=\"0 0 2px 0\"\n              bg=\"#878787\"\n            >\n              <Text color=\"#fff\">프론트엔드</Text>\n            </Grid>\n            <Grid\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              bg=\"#878787\"\n            >\n              <Text color=\"#fff\">백엔드</Text>\n            </Grid>\n          </Grid>\n          <Grid\n            display=\"flex\"\n            flexDirection=\"column\"\n            height=\"80%\"\n            width=\"70%\"\n            margin=\"auto auto auto 2px\"\n            alignItems=\"center\"\n          >\n            <Grid margin=\"0 0 2px 0\">\n              <Input\n                border=\"1px solid #878787\"\n                height=\"100%\"\n                padding=\"0 0 0 10px\"\n                placeholder=\"프론트엔드 깃허브 주소를 입력해주세요!\"\n                _onChange={e => {\n                  // console.log(e.target.value);\n                  setFront(e.target.value);\n                }}\n              ></Input>\n            </Grid>\n            <Grid>\n              <Input\n                border=\"1px solid #878787\"\n                height=\"100%\"\n                padding=\"0 0 0 10px\"\n                placeholder=\"백엔드 깃허브 주소를 입력해주세요!\"\n                _onChange={e => {\n                  // console.log(e.target.value);\n                  setBack(e.target.value);\n                }}\n              ></Input>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid display=\"flex\" height=\"15%\" margin=\"20px auto\" width=\"70%\">\n          <Grid>\n            <Button borderRadius=\"25px\" _onClick={submitUrl}>\n              제출하기\n            </Button>\n          </Grid>\n          <Grid>\n            <Button borderRadius=\"25px\" _onClick={modalClose}>\n              다음에제출\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </ModalWrap>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 400px;\n  position: relative;\n`;\n\nexport default SubmitUrl;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ImgType from \"../../shared/ImgType\";\n\nconst Liked = (props) => {\n  // console.log(props);\n  const dispatch = useDispatch();\n  const [likes, setLikes] = React.useState();\n  const {\n    modalClose,\n    postId,\n    passdedMenber,\n    isMe,\n    projectStatus,\n    statusCheck,\n    myPage,\n    toggleModal,\n  } = props;\n\n  React.useEffect(() => {\n    setLikes(\n      passdedMenber?.map((stateItem) => {\n        let newStateItem = { ...stateItem, active: false };\n        return newStateItem;\n      })\n    );\n  }, [passdedMenber, projectStatus]);\n\n  //색상 기능 눌렀는지 안눌렀는지 (버튼색상)\n  const toggleLike = (a) => {\n    setLikes((state) => {\n      return state.map((val) => {\n        if (val.userId === Number(a)) {\n          return { ...val, active: !val.active };\n        }\n        return val;\n      });\n    });\n  };\n  // console.log(postId);\n\n  //팀원평가\n  const userLiked = () => {\n    // console.log(likes);\n    // console.log(myPage);\n    const likeMember = likes.filter((user) => user.active == true);\n    const result = likeMember.map((a) => a.userId);\n    const likeUsers = {\n      userIds: result,\n    };\n    // console.log(likeUsers);\n    if (!myPage) {\n      // console.log(\"여기\");\n      dispatch(applyCreators.starterLikeAPI(postId, likeUsers));\n      modalClose(\"종료\");\n      return;\n    }\n    // console.log(\"여기2\");\n\n    dispatch(applyCreators.starterLikeAPI(postId, likeUsers));\n    toggleModal();\n    props.doSetAssessment();\n    return;\n  };\n  // console.log(likes);\n\n  return (\n    <>\n      {likes && (\n        <Grid _onClick={(e) => e.stopPropagation()}>\n          <ModalWrap>\n            <Grid height=\"10%\" position=\"relative\">\n              <Grid\n                position=\"absolute\"\n                top=\"0px\"\n                right=\"10px\"\n                width=\"20px\"\n                padding=\"10px\"\n              >\n                <CloseIcon\n                  fontSize=\"large\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    modalClose();\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid\n              margin=\"auto\"\n              height=\"90%\"\n              // justifyContent=\"center\"\n              width=\"90%\"\n              alignItems=\"center\"\n              textAlign=\"center\"\n            >\n              <Grid height=\"10%\" textAlign=\"center\">\n                <Text size=\"30px\" bold=\"bold\">\n                  프로젝트 마감\n                </Text>\n              </Grid>\n\n              <Grid height=\"14%\" margin=\"10px 0\">\n                <Text size=\"14px\">\n                  프로젝트는 어떠셨나요? <br /> 각 팀원들이 어떠셨는지\n                  평가해주시면 추천알고리즘이 정교해집니다.\n                </Text>\n              </Grid>\n              {/* 유저평가부분 */}\n              <Grid height=\"50%\" width=\"90%\" margin=\"auto\" overflow=\"auto\">\n                {passdedMenber?.map((user, idx) => (\n                  <Grid\n                    margin=\"10px auto\"\n                    height=\"100px\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-around\"\n                    width=\"100%\"\n                    key={user.userId}\n                    {...user}\n                  >\n                    <Grid margin=\"auto\" width=\"10%\">\n                      <ImgType type={passdedMenber[idx].userPropensityType} />\n                    </Grid>\n                    <Grid height=\"100%\" width=\" 70%\" margin=\"auto\">\n                      <Grid display=\"flex\" height=\"60%\" margin=\"auto\">\n                        <Grid\n                          margin=\"auto\"\n                          height=\"50px\"\n                          display=\"flex\"\n                          justifyContent=\"space-between\"\n                        >\n                          <Grid height=\"100%\" textAlign=\"center\" width=\"50%\">\n                            <Grid\n                              borderRadius=\"20px 0 0 20px\"\n                              bg=\"#17334A\"\n                              height=\"50%\"\n                              margin=\"0 0 3px 0 \"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <Text color=\"#fff\">닉네임</Text>\n                            </Grid>\n                            <Grid\n                              borderRadius=\"20px 0 0 20px\"\n                              bg=\"#17334A\"\n                              height=\"50%\"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <Text color=\"#fff\">타입</Text>\n                            </Grid>\n                          </Grid>\n                          <Grid\n                            margin=\"auto\"\n                            height=\"100%\"\n                            textAlign=\"center\"\n                            width=\"50%\"\n                          >\n                            <Grid\n                              height=\"50%\"\n                              borderRadius=\"0 20px 20px 0\"\n                              bg=\"#eee\"\n                              margin=\"0 0 3px 0 \"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              {passdedMenber[idx].nickname}\n                            </Grid>\n                            <Grid\n                              height=\"50%\"\n                              borderRadius=\"0 20px 20px 0\"\n                              bg=\"#eee\"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              {passdedMenber[idx].userPropensityType}\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Grid\n                          margin=\"auto auto auto 10px\"\n                          height=\"50px\"\n                          width=\"80%\"\n                        >\n                          {passdedMenber[idx].userId !== isMe && (\n                            <Button\n                              common\n                              isActive={likes[idx]?.active}\n                              isValue={passdedMenber[idx]?.userId}\n                              _onClick={(e) => {\n                                e.stopPropagation();\n                                // console.log(\n                                //   likes[idx]?.userId,\n                                //   likes[idx].active\n                                // );\n                                toggleLike(e.target.value);\n                              }}\n                            >\n                              좋았어요!\n                            </Button>\n                          )}\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n\n              <Grid height=\"10%\">\n                <Button\n                  borderRadius=\"25px\"\n                  _onClick={(e) => {\n                    e.stopPropagation();\n                    userLiked();\n                  }}\n                >\n                  팀원평가\n                </Button>\n              </Grid>\n            </Grid>\n          </ModalWrap>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 700px;\n  position: relative;\n`;\n\nconst UserImg = styled.img`\n  object-fit: cover;\n  width: 60px;\n  border-radius: 12px;\n  background-color: #ececec;\n  cursor: pointer;\n`;\n\nexport default Liked;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { Grid, Input, Text, Button } from \"../elements/Index\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Apply,\n  Cancel,\n  TeamExit,\n  SubmitUrl,\n  Liked,\n} from \"./applyUserModal/ApplyIndex\";\nconst ApplyUserModal = (props) => {\n  const {\n    applyUserModal,\n    setApplyUserModal,\n    applyValue,\n    postId,\n    passdedMenber,\n    passedUserStatus,\n    projectStatus,\n    statusCheck,\n    myPage,\n    toggleModal,\n    applyUserModalOpen,\n  } = props;\n  const isMe = useSelector((state) => state.user.userId);\n  const [page, setPage] = React.useState(1);\n\n  const modalClose = (status) => {\n    if (\n      status === \"종료\" ||\n      status === \"신청\" ||\n      status === \"취소\" ||\n      status === \"탈퇴\" ||\n      status === \"제출\"\n    ) {\n      statusCheck(status);\n      // applyUserModalOpen();\n      return setApplyUserModal(false);\n    }\n    // applyUserModalOpen();\n\n    setApplyUserModal(false);\n\n    return;\n  };\n\n  return (\n    <Grid _onClick={(e) => e.stopPropagation()}>\n      <Dialog\n        maxWidth={\"sm\"}\n        scroll=\"paper\"\n        open={applyUserModal}\n        onClose={(e) => {\n          e.stopPropagation();\n          modalClose();\n        }}\n      >\n        {applyValue === \"apply\" && (\n          <Apply modalClose={modalClose} postId={postId} />\n        )}{\" \"}\n        {applyValue === \"cancel\" && (\n          <Cancel modalClose={modalClose} postId={postId} />\n        )}\n        {applyValue === \"teamExit\" && (\n          <TeamExit modalClose={modalClose} postId={postId} />\n        )}\n        {applyValue === \"end\" && page === 1 && (\n          <Liked\n            modalClose={modalClose}\n            postId={postId}\n            passdedMenber={passdedMenber}\n            projectStatus={projectStatus}\n            isMe={isMe}\n            page={page}\n            setPage={setPage}\n            statusCheck={statusCheck}\n            doSetAssessment={props.doSetAssessment}\n          />\n        )}\n        {/* {applyValue === \"end\" && page === 2 && (\n          <SubmitUrl modalClose={modalClose} postId={postId} />\n        )} */}\n        {applyValue === \"submit\" && passdedMenber[0].userId === isMe && (\n          <SubmitUrl modalClose={modalClose} postId={postId} />\n        )}\n        {applyValue === \"starterLiked\" && (\n          <Liked\n            modalClose={modalClose}\n            postId={postId}\n            passdedMenber={passdedMenber}\n            isMe={isMe}\n            page={page}\n            setPage={setPage}\n            myPage={myPage}\n            doSetAssessment={props.doSetAssessment}\n          />\n        )}\n        {applyValue === \"memberLiked\" && (\n          <Liked\n            modalClose={modalClose}\n            postId={postId}\n            passdedMenber={passdedMenber}\n            isMe={isMe}\n            page={page}\n            setPage={setPage}\n            myPage={myPage}\n            toggleModal={toggleModal}\n            doSetAssessment={props.doSetAssessment}\n          />\n        )}\n      </Dialog>\n    </Grid>\n  );\n};\n\nexport default React.memo(ApplyUserModal);\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PostStacks from \"./PostStacks\";\r\nimport ApplyUserModal from \"./ApplyUserModal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { apis } from \"../lib/axios\";\r\nimport { history } from \"../redux/configureStore\";\r\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Post의 함수형 컴포넌트를 만든다.\r\nconst Post = (props) => {\r\n  // console.log(props);\r\n  // console.log(props);\r\n  const dispatch = useDispatch();\r\n  const myPage = useSelector((state) => state.post.whatPage.now);\r\n  // const myUserId = useSelector((state) => state.user.userId);\r\n  const userId = Number(props.userId.id);\r\n  const myUserId = Number(props.myUserId);\r\n  const [applyUserModal, setApplyUserModal] = React.useState(false); //지원취소/팀탈퇴/프로젝트마감\r\n  const [applyValue, setApplyValue] = React.useState();\r\n  const [member, setMember] = React.useState();\r\n  const [assessment, setAssessment] = React.useState(\r\n    props.memberIdAndAssessment[myUserId]\r\n  );\r\n\r\n  let totalmember = props.totalMember;\r\n  let recruitmentMember = props.recruitmentMember;\r\n  let isWriter = props.writerEquals;\r\n\r\n  const modalOpen = (value, postId) => {\r\n    setApplyValue(value);\r\n    setApplyUserModal(!applyUserModal);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setApplyUserModal(!applyUserModal);\r\n  };\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (myPage !== \"myPage\") {\r\n      return;\r\n    }\r\n    let postId = props.postId;\r\n    const getMembers = async () => {\r\n      try {\r\n        const result = await apis.getMember(postId);\r\n        // console.log(\"호출되나\", result);\r\n        setMember(result.data.data);\r\n      } catch (err) {\r\n        // console.log(err.response);\r\n      }\r\n    };\r\n    getMembers();\r\n  }, [assessment, props.assessment]);\r\n\r\n  React.useLayoutEffect(() => {}, [assessment]);\r\n  // let as = member?.find((e) => e.userId === myUserId);\r\n  // console.log(assessment);\r\n  // console.log(typeof myUserId);\r\n  // console.log(isWriter);\r\n  // console.log(props);\r\n  // console.log(member);\r\n\r\n  // console.log(as);\r\n  // console.log(myPage, myUserId);\r\n\r\n  const didAssessment = (e) => {\r\n    e.stopPropagation();\r\n    // console.log(e.target.value, props.postId);\r\n    modalOpen(e.target.value, props.postId);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ProductImgWrap\r\n        onClick={() => {\r\n          history.push({\r\n            pathname: `/postdetail/${props.postId}`,\r\n          });\r\n        }}\r\n      >\r\n        {props.mypage &&\r\n          userId === myUserId &&\r\n          props.projectStatus === \"종료\" &&\r\n          !isWriter &&\r\n          !assessment && (\r\n            <Grid\r\n              bg=\"#111\"\r\n              width=\"100%\"\r\n              position=\"absolute\"\r\n              zIndex=\"11\"\r\n              borderRadius=\"20px\"\r\n              opacity=\"0.8\"\r\n              display=\"flex\"\r\n            >\r\n              <Button\r\n                isValue=\"memberLiked\"\r\n                backgroundColor=\"#fff\"\r\n                width=\"50%\"\r\n                color=\"#111\"\r\n                hoverBg=\"#2699FB\"\r\n                hoverCl=\"#fff\"\r\n                _onClick={(e) => {\r\n                  didAssessment(e);\r\n                }}\r\n              >\r\n                팀원평가하기\r\n              </Button>\r\n              <Grid width=\"0px\" height=\"0px\">\r\n                <ApplyUserModal\r\n                  applyUserModal={applyUserModal}\r\n                  setApplyUserModal={setApplyUserModal}\r\n                  applyValue={applyValue}\r\n                  passdedMenber={member}\r\n                  postId={props.postId}\r\n                  myPage={props.mypage}\r\n                  toggleModal={toggleModal}\r\n                  doSetAssessment={props.doSetAssessment}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        {/* 전체크기 */}\r\n        <DDescriptionBox>\r\n          <CardHeader\r\n            projectStatus={props.projectStatus}\r\n            id=\"headerOne\"\r\n            className=\"headerOne\"\r\n          >\r\n            <Grid>{/* <TitleDate>D-2</TitleDate> */}</Grid>\r\n            <Grid\r\n              position=\"relative\"\r\n              zIndex=\"10\"\r\n              display=\"flex\"\r\n              width=\"80%\"\r\n              margin=\"auto\"\r\n            >\r\n              {props.techStack.map((p, idx) => {\r\n                return (\r\n                  <Grid margin=\"4% 0 0 -1% \" width=\"20%\" key={idx}>\r\n                    <PostStacks stack={p}></PostStacks>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </CardHeader>\r\n\r\n          <DescriptionBox>\r\n            <ProjectState projectStatus={props.projectStatus}>\r\n              <Text>{props.projectStatus}</Text>\r\n            </ProjectState>\r\n\r\n            <Title>{props.title}</Title>\r\n            {/* <Summary>{props.summary}</Summary> */}\r\n            <Date>\r\n              {props.startDate} ~ {props.endDate}\r\n            </Date>\r\n\r\n            {/* 프로그래스바 */}\r\n            <Grid\r\n              display=\"flex\"\r\n              width=\"100%\"\r\n              justifyContent=\"space-between\"\r\n              height=\"20%\"\r\n            >\r\n              <ProgressBar projectStatus={props.projectStatus}>\r\n                <HighLight\r\n                  projectStatus={props.projectStatus}\r\n                  width={(recruitmentMember / totalmember) * 100 + \"%\"}\r\n                />\r\n              </ProgressBar>\r\n              <Grid width=\"43%\" textAlign=\"right\">\r\n                <Text size=\"12px\" margin=\"0 0 0 10px\" bold=\"500\">\r\n                  {recruitmentMember + \"/\" + totalmember} 명 참여중\r\n                </Text>\r\n              </Grid>\r\n            </Grid>\r\n            {/* 프로그래스바까지 */}\r\n          </DescriptionBox>\r\n        </DDescriptionBox>\r\n      </ProductImgWrap>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst DescriptionBox = styled.div`\r\n  position: relative;\r\n  margin: 25px 20px;\r\n  padding: 10px;\r\n  height: 60%;\r\n`;\r\nconst DDescriptionBox = styled.div`\r\n  /* background-color: #fff5f9; */\r\n  border-radius: 21px;\r\n  margin: auto;\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\n//카드 헤더\r\nconst CardHeader = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 55px;\r\n  border-radius: 21px 21px 0px 0px;\r\n  background-color: #ecc0f1;\r\n  ${(props) =>\r\n    props.projectStatus === \"모집중\" && `background-color: #17334A;`};\r\n  ${(props) =>\r\n    props.projectStatus === \"진행중\" && `background-color: #17334A;`};\r\n  ${(props) => props.projectStatus === \"종료\" && `background-color: #878787;`};\r\n`;\r\n\r\n//헤더 까지\r\n\r\nconst Title = styled.span`\r\n  margin-top: 8%;\r\n  margin-bottom: 14%;\r\n  font-size: 20px;\r\n  width: 100%;\r\n  font-weight: 500;\r\n  /* white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: #606060; */\r\n  white-space: normal;\r\n  line-height: 1.2;\r\n  height: 2.4em;\r\n  text-align: left;\r\n  word-wrap: break-word;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n`;\r\n\r\nconst Date = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  margin: 8% auto 15% auto;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  text-overflow: ellipsis;\r\n  @media (max-width: 750px) {\r\n    font-size: 14px;\r\n    margin-left: 0%;\r\n  }\r\n  @media (max-width: 450px) {\r\n    font-size: 10px;\r\n    margin: 0% auto 1% auto;\r\n  }\r\n`;\r\n\r\nconst ProjectState = styled.div`\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  width: 58px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  height: 24px;\r\n  margin: 4% 0;\r\n  padding: 1% 0 0 0;\r\n  font-size: 13px;\r\n  ${(props) =>\r\n    props.projectStatus === \"모집중\" && `background-color: #2699FB;`};\r\n  ${(props) =>\r\n    props.projectStatus === \"진행중\" && `background-color: #15B915;`};\r\n  ${(props) => props.projectStatus === \"종료\" && `background-color: #878787;`};\r\n`;\r\n\r\nconst ProductImgWrap = styled.div`\r\n  cursor: pointer;\r\n  z-index: 1;\r\n  position: relative;\r\n  background-color: white;\r\n  width: 330px;\r\n  height: 330px;\r\n  max-width: 350px;\r\n  margin: 30px auto;\r\n  border-radius: 20px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.12), 0 2px 5px rgba(0, 0, 0, 0.24);\r\n  transition: all 0.2s linear;\r\n  :hover {\r\n    transform: scale(1.03);\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    margin: auto;\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n    width: 270px;\r\n    height: 270px;\r\n  }\r\n`;\r\n//프로그래스바\r\nconst ProgressBar = styled.div`\r\n  border: 1px solid #111;\r\n  background: #f6f4f6;\r\n  width: 55%;\r\n  height: 15px;\r\n  border: none;\r\n  ${(props) =>\r\n    props.projectStatus === \"모집중\" && `background-color: #BCE0FD;`};\r\n  ${(props) =>\r\n    props.projectStatus === \"진행중\" && `background-color: #DFDFDF;`};\r\n  ${(props) => props.projectStatus === \"종료\" && `background-color: #DFDFDF;`};\r\n`;\r\n\r\nconst HighLight = styled.div`\r\n  transition: 1s;\r\n  width: ${(props) => props.width};\r\n  ${(props) =>\r\n    props.projectStatus === \"모집중\" && `background-color: #2699FB;`};\r\n  ${(props) =>\r\n    props.projectStatus === \"진행중\" && `background-color: #878787 ;`};\r\n  ${(props) => props.projectStatus === \"종료\" && `background-color: #878787;`};\r\n  height: 15px;\r\n`;\r\n\r\n//프로그래스바 까지\r\n\r\nexport default Post;\r\n","/* eslint-disable */\r\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid width=\"100%\" margin=\"auto\">\r\n        <IMG src=\"/img/호랭이.gif\" alt=\"spinner\"></IMG>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst IMG = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  margin: auto;\r\n`;\r\n\r\nexport default Spinner;\r\n","/* eslint-disable */\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"./Post\";\nimport PostTest from \"./PostTest\";\nimport { postActions } from \"../redux/modules/post\";\nimport styled from \"styled-components\";\n// import { useInView } from \"react-intersection-observer\";\n\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\nimport Spinner from \"../shared/Spinner\";\n\nconst PostList = props => {\n  const dispatch = useDispatch();\n  const [post, setPost] = React.useState();\n  const [allPost, setAllPost] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n\n  // let paging = useSelector((state) => state?.infinity.paging.next);\n  let paging = props.paging;\n  let reBook = useSelector(state => state.rebook.reBook);\n  let sort = useSelector(state => state.sort.sort);\n  let post_list = useSelector(state => state.post.posts);\n  let stacks = useSelector(state => state.stack.stacks);\n  let Render = props.Render;\n  let isLogin = props.isLogin;\n\n  // let stacks = props.stacks;\n  // console.log(stackss);\n\n  const findStack = item => {\n    const itemStack = item.techStack;\n    if (stacks) {\n      for (let i = 0; i < stacks.length; i++) {\n        for (let j = 0; j < itemStack.length; j++) {\n          if (stacks[i] === itemStack[j]) {\n            return true;\n          }\n        }\n      }\n    }\n  };\n\n  // let post_list = props.post;\n  React.useEffect(() => {\n    setPost();\n    if (stacks.length !== 0) {\n      const postList = props.post.filter(findStack);\n      let posts = postList.slice(0, paging);\n      setPost(posts);\n    }\n    if (stacks.length === 0) {\n      let posts = props.post.slice(0, paging);\n      setPost(posts);\n    }\n    setLoading(false);\n  }, [stacks, paging, sort, reBook, Render, isLogin]);\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          {post && (\n            <>\n              <PostWrap>\n                {post.map(item => {\n                  return <Post key={item.postId} {...item} />;\n                })}\n              </PostWrap>\n              {post.length === 0 && (\n                <Grid justifyContent=\"center\" margin=\"10px auto\" width=\"100%\">\n                  <NoIntroduction src=\"/img/너구리.png\"></NoIntroduction>\n                  <NoIntroductionText>\n                    아직 포스트가 없습니다.\n                  </NoIntroductionText>\n                </Grid>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst PostWrap = styled.div`\n  max-width: 100%;\n  margin: auto;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n  /* grid-gap: 1px; */\n  @media (max-width: 420px) {\n    grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\n  }\n`;\nconst NoIntroduction = styled.img`\n  width: 500px;\n  margin: auto;\n  display: flex;\n  justify-content: center;\n  @media screen and (max-width: 600px) {\n    width: 100px;\n    height: 100px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst NoIntroductionText = styled.p`\n  color: #737373;\n  font-size: 25px;\n  text-align: center;\n`;\n\nexport default PostList;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Button, Input, Text } from \"../elements/Index\";\nimport styled from \"styled-components\";\nimport { Dialog } from \"@material-ui/core\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { apis } from \"../lib/axios\";\nimport Swal from \"sweetalert2\";\n\nconst EmailAuth = (props) => {\n  const [email, setEmail] = React.useState();\n  const { modal, setModal } = props;\n  // console.log(props);\n  const modalClose = () => {\n    setModal(false);\n  };\n\n  const EmailInput = (data) => {\n    setEmail(data);\n  };\n\n  const EmailSend = () => {\n    const fetchData = async () => {\n      const result = await apis.authEmail(email);\n      try {\n        props.setModal();\n        // window.alert(result.data.msg);\n        Swal.fire(`${result.data.msg}`, \"\", \"success\");\n      } catch (err) {\n        // console.log(err.response);\n      }\n    };\n    fetchData();\n  };\n  return (\n    <Dialog maxWidth={\"sm\"} scroll=\"paper\" open={modal} onClose={modalClose}>\n      <ModalWrap>\n        <Grid>\n          {/* 헤더 */}\n          <Grid\n            width=\"100%\"\n            height=\"13%\"\n            // bg=\"#B29CF4\"\n            position=\"relative\"\n            textAlign=\"center\"\n            padding=\"10px 0 10px 0\"\n          >\n            <Grid\n              position=\"absolute\"\n              top=\"0px\"\n              right=\"20px\"\n              width=\"20px\"\n              padding=\"10px\"\n            >\n              <CloseIcon fontSize=\"large\" onClick={modalClose} />\n            </Grid>\n            <Grid margin=\"20px 0 0 0\">\n              <Text size=\"30px\" bold=\"bold\" color=\"#08061D\">\n                이메일 인증\n              </Text>\n            </Grid>\n          </Grid>\n          {/* 내용작성 */}\n          <Grid height=\"45%\">\n            <Dec>이메일 인증을 하고 이메일 알림을 받아 보세요!</Dec>\n\n            <Input\n              padding=\"10px\"\n              placeholder=\"이메일을 입력해 주세요.\"\n              margin=\"10px 0 0 16%\"\n              fontSize=\"15px\"\n              border=\"1px solid #C9C9C9\"\n              borderRadius=\"8px\"\n              width=\"70%\"\n              height=\"40px\"\n              _onChange={(e) => {\n                EmailInput(e.target.value);\n              }}\n            ></Input>\n\n            <Button\n              width=\"70%\"\n              height=\"50px\"\n              margin=\"-90px 0 0 16%\"\n              _onClick={() => {\n                EmailSend();\n              }}\n            >\n              인증하기\n            </Button>\n          </Grid>\n        </Grid>\n      </ModalWrap>\n    </Dialog>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 500px;\n  height: 300px;\n  border-radius: 20px;\n  @media screen and (max-width: 560px) {\n    width: 300px;\n    height: 280px;\n  } ;\n`;\nconst Dec = styled.p`\n  color: #08061d;\n  font-size: 14px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n`;\n\nexport default EmailAuth;\n","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport \"./MainSlide.css\";\nimport { history } from \"../../redux/configureStore\";\nimport styled from \"styled-components\";\nimport Slider from \"react-slick\";\n\nimport PropensityTest from \"../propensityTest/PropensityTest\";\nimport LoginModal from \"../LoginModal\";\nimport { Dialog } from \"@material-ui/core\";\nimport Slide from \"./SlideData.json\";\nimport EmailAuth from \"../EmailAuth\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst MainSlide = () => {\n  const [imageIndex, setImageIndex] = useState(0);\n  const [showModal, setShowModal] = React.useState(false);\n  const [loginShowModal, setLoginShowModal] = React.useState(false);\n  const [emailShowModal, setEmailShowModal] = React.useState(false);\n  const userInfo = useSelector((state) => state.user);\n  const isToken = document.cookie;\n\n  const history = useHistory();\n\n  const settings = {\n    dots: true, //화면아래 컨텐츠 갯수 표시\n    autoplay: true, // 자동 스크롤 사용 여부\n    autoplaySpeed: 5000, // 자동 스크롤 시 다음으로 넘어가는데 걸리는 시간 (ms)\n    draggable: true, //드래그 가능 여부\n    infinite: true, //무한반복옵션\n    lazyLoad: true,\n    speed: 400, //다음버튼 누르고 다음화면 뜨는데까지 걸리는 시간\n    slidesToShow: 1, //화면에 보여질 개수\n    centerMode: true, //활성화 된 슬라이드 가운데 배치\n    centerPadding: 0, //center 슬라이드 패딩값\n    // nextArrow: <NextArrow />, //다음 화살표 모양 설정\n    // prevArrow: <PrevArrow />, //다음 화살표 모양 설정\n    // beforeChange: (current, next) => setImageIndex(next), // beforeChange(slick, currentSlide)\t슬라이드 전 호출\n    // responsive: [\n    //   //반응형웹구현 옵션\n    //   {\n    //     breakpoint: 768, //화면사이즈\n    //     settings: {\n    //       centerMode: true,\n    //       centerPadding: \"40px\",\n    //       slidesToShow: 1,\n    //     },\n    //   },\n    // ],\n  };\n\n  const ClickEvent = (item) => {\n    if (!isToken && item.division !== null) {\n      setLoginShowModal(true);\n    }\n    if (item.division === \"test\" && isToken) {\n      setShowModal(true);\n    }\n    if (item.division === \"email\" && isToken) {\n      setEmailShowModal(true);\n    }\n    if (item.division === \"mypage\" && isToken) {\n      history.push(`/mypage/${userInfo.userId}`);\n    }\n  };\n\n  const TestClose = () => {\n    setShowModal(false);\n  };\n  const EmailClose = () => {\n    setEmailShowModal(false);\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"Container\" style={{ width: \"97%\" }}>\n        <Slider {...settings}>\n          {Slide.slide.map((item) => (\n            <div key={item.id} className=\"slide\">\n              <img\n                src={item.img}\n                alt={item.img}\n                onClick={() => {\n                  ClickEvent(item);\n                }}\n              />\n            </div>\n          ))}\n        </Slider>\n        <Dialog maxWidth={\"sm\"} scroll=\"paper\" open={showModal}>\n          <SignupModalWrap width=\"550px\" height=\"100%\">\n            <PropensityTest TestClose={TestClose} />\n          </SignupModalWrap>\n        </Dialog>\n        <LoginModal\n          showModal={loginShowModal}\n          setShowModal={setLoginShowModal}\n        />\n        <EmailAuth\n          modal={emailShowModal}\n          setModal={setEmailShowModal}\n          EmailClose={EmailClose}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst SignupModalWrap = styled.div`\n  height: 100%;\n  width: 550px;\n\n  @media (max-width: 650px) {\n    width: 310px;\n    height: 550px;\n    font-size: 11px;\n  }\n`;\n\nexport default MainSlide;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Button } from \"../../elements/Index\";\r\nconst SortText = (props) => {\r\n  //   console.log(\"소트\", props);\r\n  return (\r\n    <Filtering\r\n      id={props.item.id}\r\n      active={props.item.active}\r\n      onClick={() => {\r\n        props.onClick();\r\n      }}\r\n    >\r\n      {props.item.id}\r\n    </Filtering>\r\n  );\r\n};\r\n\r\nconst Filtering = styled.p`\r\n  margin: 25px 10px 25px 10px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  border-bottom: ${(props) =>\r\n    props.active ? \"1mm ridge rgb(170, 50, 220, .6)\" : null};\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    -webkit-transform: scale(1.05);\r\n    -moz-transform: scale(1.05);\r\n    -ms-transform: scale(1.05);\r\n    -o-transform: scale(1.05);\r\n    /* text-decoration: underline; */\r\n    color: #dacceb;\r\n  }\r\n`;\r\nexport default SortText;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport SortText from \"./SortText\";\r\nimport { Grid, Button } from \"../../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport { postActions } from \"../../redux/modules/post\";\r\nimport { sortAction } from \"../../redux/modules/sort\";\r\nimport { bookRecommendAction } from \"../../redux/modules/bookRecommend\";\r\nimport { pageAction } from \"../../redux/modules/infinity\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Sort = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isLoginUser = useSelector((state) => state.user.userId);\r\n  const [clickCheck, setClickCheck] = React.useState();\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"최신\",\r\n      status: \"createdAt\",\r\n      active: true,\r\n    },\r\n    {\r\n      id: \"마감순\",\r\n      status: \"deadline\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"북마크\",\r\n      status: \"bookmark\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"추천\",\r\n      status: \"recommend\",\r\n      active: false,\r\n    },\r\n  ]);\r\n\r\n  const onclickSort = (data) => {\r\n    // console.log(\"최신 마감순\", data);\r\n    dispatch(postActions.isMainPage(true));\r\n    dispatch(sortAction.getSort(data));\r\n    dispatch(bookRecommendAction.getRb(\"\"));\r\n    props.setPaging(12);\r\n  };\r\n  //bookmark,recommend\r\n  const onclickRb = (data) => {\r\n    // console.log(\"북마크 추천\", data);\r\n    dispatch(postActions.isMainPage(true));\r\n    dispatch(bookRecommendAction.getRb(data));\r\n    dispatch(sortAction.getSort(\"\"));\r\n    // if (paging > 0) {\r\n    //   setPaging(paging - 1);\r\n    // }\r\n    props.setPaging(12);\r\n  };\r\n\r\n  const Filter = (getItem) => {\r\n    if (!isLoginUser && (getItem.id === \"북마크\" || getItem.id === \"추천\")) {\r\n      return;\r\n    }\r\n    if (clickCheck === getItem.id) {\r\n      return;\r\n    }\r\n    const checked = arr.find((e) => e.active === true);\r\n    // console.log(\"ddddd\", checked);\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id === getItem.id) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id !== getItem.id && stateItem.active === true) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {arr && (\r\n        <FilterBox>\r\n          {arr.map((item) => {\r\n            return (\r\n              <SortText\r\n                item={item}\r\n                key={item.id}\r\n                page={props.page}\r\n                onClick={() => {\r\n                  Filter(item);\r\n                  if (item.id === \"최신\" || item.id === \"마감순\") {\r\n                    onclickSort(item.status);\r\n                  }\r\n                  if (\r\n                    isLoginUser &&\r\n                    (item.id === \"북마크\" || item.id === \"추천\")\r\n                  ) {\r\n                    onclickRb(item.status);\r\n                  }\r\n                  if (\r\n                    !isLoginUser &&\r\n                    (item.id === \"북마크\" || item.id === \"추천\")\r\n                  ) {\r\n                    // console.log(\"나는 유저\", isLoginUser);\r\n                    Swal.fire(\r\n                      \"로그인 후 이용하실 수 있습니다!\",\r\n                      \"로그인하고 프로젝트를 추천받아 보세요!\",\r\n                      \"warning\"\r\n                    );\r\n                  }\r\n                  setClickCheck(item.id);\r\n                }}\r\n              ></SortText>\r\n            );\r\n          })}\r\n        </FilterBox>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst FilterBox = styled.div`\r\n  display: flex;\r\n  font-size: 20px;\r\n  margin: 10px auto;\r\n  justify-content: flex-end;\r\n  width: 75%;\r\n  max-width: 1920px;\r\n  @media screen and (max-width: 1850px) {\r\n    justify-content: center;\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    justify-content: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\nexport default Sort;\r\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header\";\nimport TopBanner from \"../components/carousel/TopBanner\";\nimport { Grid, Button } from \"../elements/Index\";\nimport Stack from \"../components/Stack\";\nimport PostList from \"../components/PostList\";\nimport { postActions } from \"../redux/modules/post\";\nimport { sortAction } from \"../redux/modules/sort\";\nimport { bookRecommendAction } from \"../redux/modules/bookRecommend\";\nimport { pageAction } from \"../redux/modules/infinity\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MainSlide from \"../components/carousel/MainSlide\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Tune } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router\";\nimport Sort from \"../components/filter/Sort\";\nimport { apis } from \"../lib/axios\";\nimport useScrollMove from \"../components/useScrollMove\";\nimport Spinner from \"../shared/Spinner\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nconst MainPage = () => {\n  // const { scrollOnceMove } = useScrollMove();\n  // let refs = React.useRef();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const stack = useSelector((state) => state.stack.stack);\n  const sortC = useSelector((state) => state.sort.sort);\n  const isToken = document.cookie;\n  // const cards = useSelector((state) => state.post.posts);\n  // console.log(cards);\n  const reBookC = useSelector((state) => state.rebook.reBook);\n  const pageCheck = useSelector((state) => state.post.pageCheck);\n  const infinity = useSelector((state) => state.infinity.paging);\n  const Render = useSelector((state) => state.post.render);\n  const [ref, inView] = useInView();\n  const [paging, setPaging] = React.useState(infinity.next);\n  const [pPaging, setPPaging] = React.useState(12);\n  const [nowFilter, setNowFilter] = React.useState(\"최신\");\n  const [post, setPost] = React.useState();\n\n  //프론트쪽에서 필터\n  const [stacks, setStacks] = React.useState([]);\n  const [sorts, setSrots] = React.useState();\n  const [reBooks, setReBookss] = React.useState();\n\n  const postList = useSelector((state) => state.post.posts);\n  const isLoginUser = useSelector((state) => state.user.userId);\n  const isLogin = useSelector((state) => state.user.isLogin);\n\n  // let container = React.useRef();\n  React.useLayoutEffect(() => {\n    setPost();\n    dispatch(postActions.whatPage(\"mainPage\"));\n\n    const fetchData = async () => {\n      try {\n        const result = await apis.getPost(stack, sortC, reBookC);\n        setPost(result.data.data);\n        console.log(result);\n        // container.current.scrollTo(0, lastScroll);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n  }, [sortC, reBookC, Render, isToken, Render, isLogin]);\n\n  // React.useLayoutEffect(() => {\n  //   dispatch(postActions.whatPage(\"mainPage\"));\n  //   // dispatch(postActions.getPostAPI());\n  //   // console.log(cards);\n\n  //   // console.log(post);\n  // }, [sortC, stack, reBookC, Render, isLogin]);\n  // stack, sortC, reBookC, Render, isLogin\n\n  React.useEffect(() => {\n    if (inView === true) {\n      // setPaging(paging + 12);\n      setPPaging(pPaging + 12);\n      // console.log(\"내가 페이지\", infinity);\n      // dispatch(pageAction.getPage(paging));\n      if (postList.length === 0 && pageCheck === false) {\n        dispatch(postActions.pageCheck(true));\n      }\n    } // 옵저버를 좀 더 위로\n    // console.log(pPaging);\n  }, [inView]);\n\n  const goPage = () => {\n    window.open(\n      \"https://docs.google.com/forms/u/0/d/e/1FAIpQLSfl6t0O_P5mXR6wo1cqIZ7TWkYduTkZiNlx0r5HynoArgS9Tg/formResponse\",\n      \"_blank\"\n    );\n  };\n\n  // const lastScroll = useSelector((state) => state.infinity.current_scroll);\n  // let timer;\n  // const scroll = (e) => {\n  //   console.log(e);\n  //   if (timer) {\n  //     clearTimeout(timer);\n  //   }\n  //   timer = setTimeout(function () {\n  //     dispatch(pageAction.getScroll(e.target.scrollTop));\n  //   }, 500);\n  // };\n\n  // React.useEffect(() => {\n\n  // }, []);\n  // onScroll={scroll} ref={container}\n\n  // React.useEffect(() => {\n  //   scrollOnceMove();\n  // }, [scrollOnceMove]);\n\n  const ScrollTop = () => {\n    window.scrollTo({\n      behavior: \"smooth\",\n      left: 0,\n      top: 0,\n    });\n  };\n\n  return (\n    // <div ref={refs}>\n    <div>\n      <Grid\n        maxWidth=\"1920px\"\n        height=\"100%\"\n        bg=\"#ffff\"\n        padding=\"0px 0px 10px 0\"\n      ></Grid>\n      <Grid margin=\"-10px 0 0 0 \">\n        <Inside>\n          <MainSlide />\n          <Stacks>\n            <Stack\n              do={\"StacksComponent\"}\n              setStacks={setStacks}\n              stacks={stacks}\n            />\n          </Stacks>\n          <Sort setPaging={setPaging} page=\"mainPage\"></Sort>\n          {post && (\n            <>\n              <InsideCard>\n                <PostList\n                  post={post}\n                  paging={pPaging}\n                  stacks={stacks}\n                  Render={Render}\n                  isLogin={isLogin}\n                ></PostList>\n              </InsideCard>\n\n              {nowFilter !== \"bookmark\" && (\n                <Grid margin=\"-550px 0 0 0\">\n                  <div\n                    ref={ref}\n                    style={{\n                      height: \"500px\",\n                      backgroundColor: \"white\",\n                    }}\n                  ></div>\n                </Grid>\n              )}\n            </>\n          )}\n          {!post && (\n            <SpinnerLocation>\n              <Spinner />\n            </SpinnerLocation>\n          )}\n          <Scrollup\n            onClick={() => {\n              ScrollTop();\n            }}\n          >\n            <ArrowUpwardIcon\n              sx={{ fontSize: \"60px\", color: \"#c4c4c4\" }}\n            ></ArrowUpwardIcon>\n          </Scrollup>\n          {isLoginUser && (\n            <Btn\n              onClick={() => {\n                history.push(\"/postadd\");\n              }}\n            >\n              <i\n                style={{\n                  fontSize: \"25px\",\n                  margin: \"auto\",\n                  color: \"white\",\n                }}\n                className=\"fas fa-plus\"\n              ></i>\n            </Btn>\n          )}\n\n          <BtnFeedback\n            src=\"/img/FeedbackBox.png\"\n            onClick={() => {\n              goPage();\n            }}\n          ></BtnFeedback>\n        </Inside>\n        <Grid height=\"600px\"></Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst Inside = styled.div`\n  margin: auto;\n  @media screen and (max-width: 750px) {\n  } ;\n`;\n\nconst InsideCard = styled.div`\n  margin: 10px auto;\n  width: 75%;\n  max-width: 1920px;\n  @media screen and (max-width: 750px) {\n    margin: auto;\n  } ;\n`;\n\nconst Stacks = styled.div`\n  display: flex;\n  font-size: 50px;\n  margin-top: 20px;\n`;\n\nconst Btn = styled.button`\n  position: fixed;\n  bottom: 70px;\n  border: 1px solid #c4c4c4;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  right: 50px;\n  margin: auto;\n  background: #c4c4c4;\n  cursor: pointer;\n  z-index: 999;\n  &:hover {\n    background: #17334a;\n    transform: translate();\n    transition: 0.1s ease-out;\n  }\n\n  @media screen and (max-width: 750px) {\n    position: fixed;\n    display: none;\n    border: 1px solid #42309b;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    text-align: center;\n    right: 5px;\n    bottom: 5px;\n    margin: auto;\n    background: #42309b;\n    cursor: pointer;\n    z-index: 999;\n  } ;\n`;\n\nconst BtnFeedback = styled.img`\n  position: fixed;\n  bottom: 70px;\n  /* border: 1px solid #c4c4c4; */\n  /* border-radius: 50%; */\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  left: 50px;\n  margin: auto;\n  /* background: #c4c4c4; */\n  cursor: pointer;\n  z-index: 999;\n  transition: all ease 0.3s;\n  &:hover {\n    transform: rotate(45deg);\n  }\n\n  @media screen and (max-width: 767px) {\n    position: fixed;\n\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    left: 5px;\n    bottom: 120px;\n    margin: auto;\n    cursor: pointer;\n    z-index: 999;\n  } ;\n`;\n\nconst SpinnerLocation = styled.div`\n  margin: -250px 0 0 0;\n  @media screen and (max-width: 767px) {\n    margin: 0px 0 0 0;\n  } ;\n`;\n\nconst Scrollup = styled.div`\n  background-color: transparent;\n  border-radius: 50px;\n\n  position: fixed;\n  bottom: 150px;\n  /* border: 1px solid #c4c4c4; */\n  /* border-radius: 50%; */\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  right: 50px;\n  margin: auto;\n  /* background: #c4c4c4; */\n  cursor: pointer;\n  z-index: 999;\n\n  @media screen and (max-width: 767px) {\n    position: fixed;\n\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    right: 25px;\n    bottom: 120px;\n    margin: auto;\n    cursor: pointer;\n    z-index: 999;\n  } ;\n`;\n\nexport default MainPage;\n","/* eslint-disable */\nimport React from \"react\";\n\nimport { userCreators } from \"../redux/modules/user\";\nimport Spinner from \"./Spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst KakaoRedirect = (props) => {\n  const dispatch = useDispatch();\n  const pageGo = useSelector((state) => state.pagecheck);\n\n  // 인가코드\n  let code = new URL(window.location.href).searchParams.get(\"code\");\n\n  React.useEffect(() => {\n    if (pageGo) {\n      // console.log(pageGo);\n      dispatch(userCreators.kakaologinMiddleware(code, pageGo));\n    }\n  }, []);\n\n  return <Spinner />;\n};\n\nexport default KakaoRedirect;\n","/* eslint-disable */\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { userCreators } from \"../redux/modules/user\";\nimport Spinner from \"./Spinner\";\n\nconst KakaoRedirect = (props) => {\n  const dispatch = useDispatch();\n\n  // 인가코드\n  let code = new URL(window.location.href).searchParams.get(\"code\");\n\n  React.useEffect(() => {\n    dispatch(userCreators.githubLoginMiddleware(code));\n  }, []);\n\n  return <Spinner />;\n};\n\nexport default KakaoRedirect;\n","/* eslint-disable */\r\nimport React from \"react\";\r\n// import MypagePost from \"./MypagePost\";\r\nimport Post from \"../Post\";\r\nimport { Grid, Image } from \"../../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst MypagePostList = (props) => {\r\n  // console.log(props);\r\n  const userId = useParams();\r\n\r\n  // console.log(props);\r\n  const mypage = true;\r\n\r\n  const myCards = props.post;\r\n  const newMyCards = Object.values(myCards);\r\n  // console.log(myCards);\r\n  // console.log(newMyCards);\r\n\r\n  return (\r\n    <>\r\n      {newMyCards && (\r\n        <React.Fragment>\r\n          <PostWrap>\r\n            {newMyCards.map((p) => {\r\n              return (\r\n                <Post\r\n                  mypage={mypage}\r\n                  key={p.postId}\r\n                  {...p}\r\n                  userId={userId}\r\n                  myUserId={props.myUserId}\r\n                  assessment={props.assessment}\r\n                  doSetAssessment={props.doSetAssessment}\r\n                ></Post>\r\n              );\r\n            })}\r\n          </PostWrap>\r\n        </React.Fragment>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst PostWrap = styled.div`\r\n  width: 50%;\r\n  margin: 0 0 0 33%;\r\n  display: grid;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));\r\n  /* grid-gap: 1px; */\r\n  @media (max-width: 1200px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\r\n    margin: auto;\r\n  }\r\n  @media (max-width: 420px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\r\n  }\r\n`;\r\n\r\nexport default MypagePostList;\r\n","/* eslint-disable */\r\nimport { Container } from \"@material-ui/core\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\";\r\nimport { Viewer } from \"@toast-ui/react-editor\";\r\n\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ContentPage(props) {\r\n  // console.log(props);\r\n  const textData = props.introduction;\r\n  return (\r\n    <>\r\n      {textData && (\r\n        <>\r\n          <MarkdownWrap>\r\n            <Viewer initialValue={textData} />\r\n          </MarkdownWrap>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst MarkdownWrap = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n`;\r\nexport default ContentPage;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport EmailAuth from \"../EmailAuth\";\r\nconst Banners = (props) => {\r\n  //   console.log(props);\r\n  const [myData, setMyData] = React.useState();\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"LVG\",\r\n      name: \"호랑이\",\r\n      img: \"/img/호랑이배너.jpg\",\r\n      color: \"#eed691\",\r\n    },\r\n    {\r\n      id: \"LVP\",\r\n      name: \"늑대\",\r\n      img: \"/img/늑대배너.jpg\",\r\n      color: \"#afa9a0\",\r\n    },\r\n    {\r\n      id: \"LHG\",\r\n      name: \"여우\",\r\n      img: \"/img/여우배너.jpg\",\r\n      color: \"#e4812a\",\r\n    },\r\n    {\r\n      id: \"LHP\",\r\n      name: \"팬더\",\r\n      img: \"/img/팬더배너.jpg\",\r\n      color: \"#e4812a\",\r\n    },\r\n    {\r\n      id: \"FVG\",\r\n      name: \"토끼\",\r\n      img: \"/img/토끼배너.jpg\",\r\n      color: \"#998fc9\",\r\n    },\r\n    {\r\n      id: \"FVP\",\r\n      name: \"강아지\",\r\n      img: \"/img/강아지배너.jpg\",\r\n      color: \"#e8ddb8\",\r\n    },\r\n    {\r\n      id: \"FHG\",\r\n      name: \"고양이\",\r\n      img: \"/img/고양이배너.jpg\",\r\n      color: \"#6d6e72\",\r\n    },\r\n    {\r\n      id: \"FHP\",\r\n      name: \"물개\",\r\n      img: \"/img/물개배너.jpg\",\r\n      color: \"#a9adb3\",\r\n    },\r\n    {\r\n      id: \"RHP\",\r\n      name: \"너구리\",\r\n      img: \"/img/너구리배너.jpg\",\r\n      color: \"#926D41\",\r\n    },\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    arr.map((item) => {\r\n      if (props.type === item.id) {\r\n        setMyData(item);\r\n      }\r\n    });\r\n    // console.log(myData);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {myData && (\r\n        <BannerAnimals color={myData.color}>\r\n          <BannerImg src={myData.img}></BannerImg>\r\n          {/* <Grid\r\n            margin=\"-600px 0 0 33.5%\"\r\n            display=\"flex\"\r\n            height=\"200px\"\r\n            width=\"100%\"\r\n            justifyContent=\"space-between\"\r\n            \r\n          >\r\n            <WhiteP>\r\n              {myData.id} / {myData.name}\r\n            </WhiteP> */}\r\n\r\n          {/* {props.myPage === true && (\r\n              <Grid alignItems=\"center\" display=\"flex\" justifyContent=\"center\">\r\n                <ConfirmEmail\r\n                  onClick={() => {\r\n                    props.onClick();\r\n                  }}\r\n                >\r\n                  이메일 인증하기\r\n                </ConfirmEmail>\r\n                <EmailAuth modal={props.modal} setModal={props.setModal} />\r\n              </Grid>\r\n            )} */}\r\n          {/* </Grid> */}\r\n        </BannerAnimals>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst BannerImg = styled.img`\r\n  object-fit: cover;\r\n`;\r\n\r\nconst BannerAnimals = styled.div`\r\n  width: 100%;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n\r\n  background-color: ${(props) => (props.color ? props.color : \"#white\")};\r\n  z-index: 0;\r\n`;\r\n\r\nexport default Banners;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport ImgType from \"../../../shared/ImgType\";\r\n\r\nconst CardImgs = props => {\r\n  return (\r\n    <div>\r\n      <ImgType\r\n        type={props.myType}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        object_fit=\"cover\"\r\n        position=\"relative\"\r\n\r\n        // right=\"60px\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default CardImgs;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport { Grid, Button, Input, Text } from \"../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { apis } from \"../lib/axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { userCreators } from \"../redux/modules/user\";\r\nimport { deleteCookie } from \"../shared/Cookie\";\r\nimport { useHistory } from \"react-router\";\r\nconst EmailAuth = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { modal, setModal } = props;\r\n  const modalClose = () => {\r\n    setModal(false);\r\n  };\r\n  // console.log(props);\r\n\r\n  const UserDelete = () => {\r\n    const fetchData = async () => {\r\n      const result = await apis.deleteUser(props.userId);\r\n      try {\r\n        // console.log(result);\r\n        // window.alert(result.data.msg);\r\n        Swal.fire(`${result.data.msg}`, \"\", \"info\");\r\n        deleteCookie(\"ScopeUser\");\r\n        history.push(\"/\");\r\n\r\n        dispatch(userCreators.logOut());\r\n        setModal(false);\r\n      } catch (err) {\r\n        console.log(err.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  };\r\n  return (\r\n    <Dialog maxWidth={\"sm\"} scroll=\"paper\" open={modal}>\r\n      <ModalWrap>\r\n        <Grid>\r\n          {/* 헤더 */}\r\n          <Grid\r\n            width=\"100%\"\r\n            height=\"13%\"\r\n            // bg=\"#B29CF4\"\r\n            position=\"relative\"\r\n            textAlign=\"center\"\r\n            padding=\"10px 0 10px 0\"\r\n          >\r\n            <Grid\r\n              position=\"absolute\"\r\n              top=\"0px\"\r\n              right=\"20px\"\r\n              width=\"20px\"\r\n              padding=\"10px\"\r\n            >\r\n              <CloseIcon fontSize=\"large\" onClick={modalClose} />\r\n            </Grid>\r\n            <Grid margin=\"20px 0 0 0\">\r\n              <Text size=\"30px\" bold color=\"#08061D\">\r\n                회원 탈퇴\r\n              </Text>\r\n            </Grid>\r\n          </Grid>\r\n          {/* 내용작성 */}\r\n          <Grid margin=\"60px 0 0 0\">\r\n            <Dec>정말 탈퇴 하시겠습니까?</Dec>\r\n            <Dec>게시자가 회원 탈퇴시 작성된 포스트는 모두 제거됩니다.</Dec>\r\n            <Dec>지원한 프로젝트는 모두 탈퇴됩니다.</Dec>\r\n\r\n            {/* <Grid margin=\"10px 0 0 18%\" width=\"320px\"></Grid> */}\r\n\r\n            <Button\r\n              width=\"320px\"\r\n              // height=\"50px\"\r\n              margin=\"50px 0 0 21%\"\r\n              _onClick={() => {\r\n                UserDelete();\r\n              }}\r\n            >\r\n              회원 탈퇴하기\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </ModalWrap>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ModalWrap = styled.div`\r\n  width: 550px;\r\n  height: 350px;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n`;\r\nconst Dec = styled.p`\r\n  color: #08061d;\r\n  font-size: 14px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  /* margin-top: 80px; */\r\n`;\r\n\r\nexport default EmailAuth;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../../elements/Index\";\r\n\r\nconst CardUserInfo = (props) => {\r\n  const [techStack, setTeckstack] = React.useState([]);\r\n  const [nickName, setNickName] = React.useState();\r\n  const [email, setEmail] = React.useState();\r\n\r\n  return (\r\n    <div>\r\n      {props.nickName && props.email && (\r\n        <>\r\n          <MyInfoText1>\r\n            <div style={{ width: \"95px\", marginLeft: \"25px\" }}>\r\n              <p>NickName </p>\r\n            </div>\r\n            <div style={{ width: \"100px\" }}>\r\n              <p>{props.nickName}</p>\r\n            </div>\r\n          </MyInfoText1>\r\n          {/* Email */}\r\n          <MyInfoText1>\r\n            <div\r\n              style={{\r\n                width: \"95px\",\r\n                marginLeft: \"25px\",\r\n              }}\r\n            >\r\n              <p>E-mail </p>\r\n            </div>\r\n            <div style={{ width: \"90px\" }}>\r\n              <p>{props.email}</p>\r\n            </div>\r\n          </MyInfoText1>\r\n        </>\r\n      )}\r\n\r\n      {/* 기술 스텍 */}\r\n      <MyInfoText1>\r\n        <div\r\n          style={{\r\n            width: \"95px\",\r\n            marginLeft: \"25px\",\r\n            height: \"150px\",\r\n          }}\r\n        >\r\n          <p>TechStack </p>\r\n        </div>\r\n        {props.techStack && (\r\n          <>\r\n            <div style={{ width: \"120px\" }}>\r\n              {props.techStack?.map((p, idx) => {\r\n                return <p key={idx}>{p}</p>;\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </MyInfoText1>\r\n      <Line></Line>\r\n      {/* 진행 프로젝트 */}\r\n      <MyInfoText2>\r\n        <div style={{ width: \"300px\", marginLeft: \"30px\" }}>\r\n          <p>모집 프로젝트 </p>\r\n        </div>\r\n        <div style={{ width: \"50px\", marginLeft: \"100px\" }}>\r\n          <p>{props.mydata.recruitment.length}</p>\r\n        </div>\r\n      </MyInfoText2>\r\n      {/* 참여 프로젝트 */}\r\n      <MyInfoText2>\r\n        <div style={{ width: \"300px\", marginLeft: \"30px\" }}>\r\n          <p>진행 프로젝트 </p>\r\n        </div>\r\n        <div style={{ width: \"50px\", marginLeft: \"100px\" }}>\r\n          <p>{props.mydata.inProgress.length}</p>\r\n        </div>\r\n      </MyInfoText2>\r\n      {/* 마감 프로젝트 */}\r\n      <MyInfoText2>\r\n        <div style={{ width: \"300px\", marginLeft: \"30px\" }}>\r\n          <p>완료 프로젝트 </p>\r\n        </div>\r\n        <div style={{ width: \"50px\", marginLeft: \"100px\" }}>\r\n          <p>{props.mydata.end.length}</p>\r\n        </div>\r\n      </MyInfoText2>\r\n      {props.mydata?.isMyMypage === true && (\r\n        <>\r\n          <Button\r\n            margin=\"15px auto 15px 30%\"\r\n            height=\"40px\"\r\n            width=\"132px\"\r\n            text=\"프로필 수정하기\"\r\n            _onClick={() => {\r\n              props.onClick();\r\n            }}\r\n          ></Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MyInfoText1 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\nconst MyInfoText2 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\n\r\nconst Line = styled.hr`\r\n  width: 80%;\r\n  color: black;\r\n`;\r\nexport default CardUserInfo;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport CardImgs from \"./card/CardImgs\";\r\nimport Select from \"react-select\";\r\nimport DeleteUserModal from \"../../modal/DeleteUserModal\";\r\nimport Swal from \"sweetalert2\";\r\nimport { apis } from \"../../lib/axios\";\r\nimport CardUserInfo from \"./card/CardUserInfo\";\r\n\r\nconst MypageCard = (props) => {\r\n  const [editMyProfile, setEditMyProfile] = React.useState(false); //\r\n  const [checkEmail, setCheckEmail] = React.useState();\r\n  const [deleteModal, setDeleteModal] = React.useState(false);\r\n  const [techStack, setTeckstack] = React.useState([]);\r\n  const [nickName, setNickName] = React.useState(props.nickName);\r\n  const [email, setEmail] = React.useState(props.email);\r\n\r\n  const styles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      boxShadow: state.isFocused ? 0 : 0,\r\n      borderWidth: 2,\r\n      minHeight: 40,\r\n      borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\r\n      \"&:hover\": {\r\n        borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\r\n      },\r\n    }),\r\n  };\r\n\r\n  function fn_submit(data) {\r\n    let userData = {\r\n      nickname: nickName,\r\n      // email: email,\r\n      userTechStack: techStack,\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        // console.log(userData);\r\n        const result = await apis.editUserInfo(props.userId, userData);\r\n        // console.log(result);\r\n        setEditMyProfile(false);\r\n        props.onClick2();\r\n        Swal.fire(\"수정 완료!\", \"\", \"success\");\r\n      } catch (err) {\r\n        // console.log(err.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  }\r\n\r\n  const setEditProfile = () => {\r\n    if (nickName.length < 2 || nickName.length > 5) {\r\n      Swal.fire(\"닉네임은 2자~5자 까지 입력 가능합니다.\", \"\", \"warning\");\r\n    }\r\n    if (techStack.length > 8) {\r\n      Swal.fire(\"기술은 7개 까지 선택 가능합니다.\", \"\", \"warning\");\r\n      return;\r\n    }\r\n    fn_submit(email);\r\n  };\r\n  const deleteUser = () => {\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  //테크스택 옵션\r\n  const techStackOption = [\r\n    { value: \"React\", label: \"React\" },\r\n    { value: \"Java\", label: \"Java\" },\r\n    { value: \"JavaScript\", label: \"JavaScript\" },\r\n    { value: \"Python\", label: \"Python\" },\r\n    { value: \"Spring\", label: \"Spring\" },\r\n    { value: \"Node\", label: \"Node\" },\r\n    { value: \"C++\", label: \"C++\" },\r\n    { value: \"Flask\", label: \"Flask\" },\r\n    { value: \"Django\", label: \"Django\" },\r\n    { value: \"Vue\", label: \"Vue\" },\r\n    { value: \"php\", label: \"php\" },\r\n    { value: \"Swift\", label: \"Swift\" },\r\n    { value: \"Kotlin\", label: \"Kotlin\" },\r\n    { value: \"TypeScript\", label: \"TypeScript\" },\r\n  ];\r\n\r\n  return (\r\n    <Cards>\r\n      <CardImgs myType={props.myType} />\r\n\r\n      {props.editMyProfile === false && (\r\n        <>\r\n          <CardUserInfo\r\n            editMyProfile={props.editMyProfile}\r\n            setEditMyProfile={props.setEditMyProfile}\r\n            mydata={props.mydata}\r\n            myType={props.myType}\r\n            myUserId={props.myUserId}\r\n            userId={props.userId}\r\n            nickName={props.nickName}\r\n            email={props.email}\r\n            techStack={props.techStack}\r\n            onClick={props.onClick}\r\n          />\r\n        </>\r\n      )}\r\n      {props.editMyProfile === true && (\r\n        <>\r\n          {/* 닉네임 */}\r\n          <MyInfoText1>\r\n            <div style={{ width: \"90px\", marginLeft: \"30px\" }}>\r\n              <p>NickName </p>\r\n            </div>\r\n            <div style={{ width: \"150px\", alignItems: \"center\" }}>\r\n              <input\r\n                style={{\r\n                  borderRadius: \"5px\",\r\n                  borderColor: \"#707070\",\r\n                  WebkitAppearance: \"none\",\r\n                  MozAppearance: \"none\",\r\n                  appearance: \"none\",\r\n                  color: \"#707070\",\r\n                  border: \"1px solid #707070\",\r\n                  outlineStyle: \"none\",\r\n                  margin: \"13px 0 0 0\",\r\n                  width: \"150px\",\r\n                  padding: \"7px\",\r\n                }}\r\n                defaultValue={props.nickName}\r\n                onChange={(e) => {\r\n                  setNickName(e.target.value);\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </MyInfoText1>\r\n\r\n          {/* 이메일 */}\r\n          {/* <MyInfoText1>\r\n            <div\r\n              style={{\r\n                width: \"90px\",\r\n                marginLeft: \"30px\",\r\n                height: \"60px\",\r\n              }}\r\n            >\r\n              <p style={{ marginTop: \"20px\" }}>E-mail </p>\r\n            </div>\r\n            <div style={{ width: \"90px\" }}>\r\n              <input\r\n                style={{\r\n                  borderRadius: \"5px\",\r\n                  borderColor: \"#707070\",\r\n                  WebkitAppearance: \"none\",\r\n                  MozAppearance: \"none\",\r\n                  appearance: \"none\",\r\n                  color: \"#707070\",\r\n                  border: \"1px solid #707070\",\r\n                  outlineStyle: \"none\",\r\n                  margin: \"15px 0 0 0\",\r\n                  width: \"150px\",\r\n                  padding: \"7px\",\r\n                }}\r\n                defaultValue={props.email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </MyInfoText1> */}\r\n          {/* 기술스택 */}\r\n          <MyInfoText1>\r\n            <div\r\n              style={{\r\n                width: \"90px\",\r\n                marginLeft: \"30px\",\r\n                height: \"80px\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              <p style={{}}>TechStack </p>\r\n            </div>\r\n            <Grid width=\"167px\" margin=\"20px 0 0 0\">\r\n              <Select\r\n                isMulti\r\n                name=\"techStack\"\r\n                options={techStackOption}\r\n                styles={styles}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={(e) => {\r\n                  let techStack = [];\r\n                  let arr = e;\r\n                  let idx = 0;\r\n                  for (idx = 0; idx < e.length; idx++) {\r\n                    techStack.push(arr[idx][\"value\"]);\r\n                  }\r\n                  setTeckstack(techStack);\r\n                  // console.log(techStack);\r\n                }}\r\n              >\r\n                기술스택\r\n              </Select>\r\n            </Grid>\r\n          </MyInfoText1>\r\n          <Line></Line>\r\n          {/* 진행 프로젝트 */}\r\n          <MyInfoText2>\r\n            <div style={{ width: \"150px\", marginLeft: \"30px\" }}></div>\r\n            <div style={{ width: \"50px\", marginLeft: \"100px\" }}></div>\r\n          </MyInfoText2>\r\n          {/* 참여 프로젝트 */}\r\n          <MyInfoText2>\r\n            <div style={{ width: \"150px\", marginLeft: \"30px\" }}></div>\r\n            <div style={{ width: \"50px\", marginLeft: \"100px\" }}></div>\r\n          </MyInfoText2>\r\n          {/* 마감 프로젝트 */}\r\n          <MyInfoText2>\r\n            <div style={{ width: \"150px\", marginLeft: \"30px\" }}></div>\r\n            <div style={{ width: \"50px\", marginLeft: \"100px\" }}></div>\r\n          </MyInfoText2>\r\n\r\n          <div style={{ display: \"flex\" }}>\r\n            <Button\r\n              margin=\"15px auto 15px 6%\"\r\n              height=\"40px\"\r\n              width=\"132px\"\r\n              text=\"프로필 저장하기\"\r\n              _onClick={setEditProfile}\r\n            ></Button>\r\n            <Button\r\n              margin=\"15px auto 15px -4%\"\r\n              height=\"40px\"\r\n              width=\"132px\"\r\n              text=\"취소하기\"\r\n              _onClick={() => {\r\n                props.onClick2();\r\n              }}\r\n            ></Button>\r\n\r\n            <DeleteUserModal\r\n              modal={deleteModal}\r\n              setModal={setDeleteModal}\r\n              userId={props.myUserId}\r\n            />\r\n          </div>\r\n          <Exit onClick={deleteUser}> 회원탈퇴 </Exit>\r\n        </>\r\n      )}\r\n    </Cards>\r\n  );\r\n};\r\n\r\nconst Cards = styled.div`\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\r\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\r\n\r\n  width: 100%;\r\n  height: 900px;\r\n  /* background-color: rgba(255, 255, 255, 0); */\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n\r\n  position: absolute;\r\n  right: -35%;\r\n  top: -600%;\r\n  @media screen and (max-width: 1600px) {\r\n    width: 90%;\r\n    position: absolute;\r\n    right: -15%;\r\n  }\r\n  @media screen and (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst MyInfoText1 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\nconst MyInfoText2 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\nconst Line = styled.hr`\r\n  width: 80%;\r\n  color: black;\r\n`;\r\nconst Exit = styled.button`\r\n  margin: 0px auto 15px 28%;\r\n  height: 40px;\r\n  width: 132px;\r\n  background-color: white;\r\n  border: 1px solid #d1d1d1;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: black;\r\n    background-color: #d1d1d1;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\nexport default MypageCard;\r\n","/* eslint-disable */\r\n\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport PropensityTest from \"../propensityTest/PropensityTest\";\r\nimport styled from \"styled-components\";\r\nimport { map, stubFalse } from \"lodash\";\r\nimport { Grid4x4 } from \"@mui/icons-material\";\r\nimport EmailAuth from \"../EmailAuth\";\r\nimport { useParams } from \"react-router\";\r\n\r\nconst TypeResultTest = (props) => {\r\n  const [myData, setMyData] = React.useState();\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"LVG\",\r\n      name: \"호랑이\",\r\n      type: \"리더\",\r\n      type2: \"수직\",\r\n      type3: \"결과\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수직적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"LVP\",\r\n      name: \"늑대\",\r\n      type: \"리더\",\r\n      type2: \"수직\",\r\n      type3: \"과정\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수직적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \" 결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"LHG\",\r\n      name: \"여우\",\r\n      type: \"리더\",\r\n      type2: \"수평\",\r\n      type3: \"결과\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수평적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"LHP\",\r\n      name: \"팬더\",\r\n      type: \"리더\",\r\n      type2: \"수평\",\r\n      type3: \"과정\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수평적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FVG\",\r\n      name: \"토끼\",\r\n      type: \"팔로워\",\r\n      type2: \"수직\",\r\n      type3: \"결과\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수직적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FVP\",\r\n      name: \"강아지\",\r\n      type: \"팔로워\",\r\n      type2: \"수직\",\r\n      type3: \"과정\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수직적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FHG\",\r\n      name: \"고양이\",\r\n      type: \"팔로워\",\r\n      type2: \"수평\",\r\n      type3: \"결과\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수평적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FHP\",\r\n      name: \"물개\",\r\n      type: \"팔로워\",\r\n      type2: \"수평\",\r\n      type3: \"과정\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수평적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"RHP\",\r\n      name: \"너구리\",\r\n      type: \"팔로워\",\r\n      type2: \"수평\",\r\n      type3: \"과정\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수평적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n  ]);\r\n  const params = useParams();\r\n  // console.log(params.id, props.nickName);\r\n\r\n  React.useEffect(() => {\r\n    // console.log(\"테스트결과\", props);\r\n    arr.map((item) => {\r\n      if (item.id === props.myType) {\r\n        setMyData(item);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Wrap>\r\n      {myData && (\r\n        <Grid\r\n          zIndex=\"1\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid\r\n            display=\"flex\"\r\n            // border=\"1px solid #333\"\r\n            borderRadius=\"15px\"\r\n            height=\"1%\"\r\n          >\r\n            <MyResultDiv>\r\n              <MyResultText>#{myData.type}</MyResultText>\r\n              <MyResultText>#{myData.type2}</MyResultText>\r\n              <MyResultText>#{myData.type3}</MyResultText>\r\n            </MyResultDiv>\r\n          </Grid>\r\n          <Grid height=\"23%\">\r\n            <WhiteP>\r\n              {myData.id} / {myData.name}\r\n            </WhiteP>\r\n          </Grid>\r\n\r\n          <Grid margin=\"0 0 0 20px\" height=\"11%\">\r\n            <Grid display=\"flex\" height=\"80%\">\r\n              <MyResultText2>{myData.text1}</MyResultText2>\r\n              <MyResultTextBold>{myData.text2}</MyResultTextBold>\r\n              <MyResultText2>{myData.text3}</MyResultText2>\r\n            </Grid>\r\n            <Grid display=\"flex\">\r\n              <MyResultText2>{myData.text4}</MyResultText2>\r\n            </Grid>\r\n\r\n            {props.userId == props.myUserId &&\r\n              props.mydata?.isMyMypage === true && (\r\n                <Grid\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  height=\"100%\"\r\n                  position=\"relative\"\r\n                  margin=\"15px 0 0 0\"\r\n                  width=\"94%\"\r\n                  maxWidth=\"1150px\"\r\n                >\r\n                  <GotoTest\r\n                    onClick={() => {\r\n                      props.EditTest();\r\n                    }}\r\n                  >\r\n                    성향 테스트 다시하기⇀\r\n                  </GotoTest>\r\n\r\n                  <ConfirmEmail\r\n                    onClick={() => {\r\n                      props.onClick();\r\n                    }}\r\n                  >\r\n                    이메일 인증하기\r\n                  </ConfirmEmail>\r\n                  <EmailAuth\r\n                    modal={props.modal}\r\n                    setModal={props.setModal}\r\n                  ></EmailAuth>\r\n                </Grid>\r\n              )}\r\n            {params.id != props.myUserId && (\r\n              <YourName> Nikname | {props.nickName}</YourName>\r\n            )}\r\n            <Dialog scroll=\"paper\" open={props.testmodal}>\r\n              <TestWrap>\r\n                <PropensityTest TestClose={props.TestClose} />\r\n              </TestWrap>\r\n            </Dialog>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  height: 100%;\r\n  width: 60vw;\r\n  margin-left: 30%;\r\n\r\n  @media screen and (max-width: 1600px) {\r\n    margin-left: 35%;\r\n  }\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    width: 90vw;\r\n    margin: auto;\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    width: 90vw;\r\n    margin: auto;\r\n  } ;\r\n`;\r\nconst MyResultDiv = styled.div`\r\n  display: flex;\r\n  width: auto;\r\n  align-items: center;\r\n`;\r\n\r\nconst MyResultText = styled.div`\r\n  width: auto;\r\n  height: 32px;\r\n\r\n  color: white;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst GotoTest = styled.p`\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  /* float: right; */\r\n  margin-right: 10px;\r\n  margin-top: 30px;\r\n  position: relative;\r\n  z-index: 999;\r\n  @media screen and (max-width: 370px) {\r\n    font-size: 12px;\r\n  } ;\r\n`;\r\nconst MyResultText2 = styled.p`\r\n  color: white;\r\n  font-size: 17px;\r\n  height: 17px;\r\n  width: auto;\r\n  @media screen and (max-width: 670px) {\r\n    display: none;\r\n  } ;\r\n`;\r\nconst MyResultTextBold = styled.p`\r\n  color: white;\r\n  font-size: 17px;\r\n  height: 17px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ConfirmEmail = styled.button`\r\n  width: 160px;\r\n  height: 35px;\r\n  padding: 8px 20px;\r\n  border: 1px solid white;\r\n  background-color: transparent;\r\n  color: white;\r\n  border-radius: 10px;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: black;\r\n    background-color: white;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  @media screen and (max-width: 750px) {\r\n    color: black;\r\n  } ;\r\n`;\r\n\r\nconst WhiteP = styled.p`\r\n  font-size: 30px;\r\n  color: white;\r\n  font-weight: bold;\r\n  width: 300px;\r\n  margin-left: 13px;\r\n`;\r\n\r\nconst TestWrap = styled.div`\r\n  height: 100%;\r\n  width: 550px;\r\n\r\n  @media (max-width: 650px) {\r\n    width: 310px;\r\n    height: 550px;\r\n    font-size: 11px;\r\n  }\r\n`;\r\nconst YourName = styled.div`\r\n  display: none;\r\n  @media screen and (max-width: 1200px) {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-weight: 500;\r\n    margin: 10px 0;\r\n    height: 40px;\r\n    width: 200px;\r\n    color: #333;\r\n\r\n    background-color: #fff;\r\n    border-radius: 11px;\r\n    box-shadow: 0 5px 5px #aaa;\r\n    opacity: 0.8;\r\n  } ;\r\n`;\r\nexport default TypeResultTest;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../../elements/Index\";\r\n\r\nconst MyFilter = (props) => {\r\n  // console.log(props);\r\n  return (\r\n    <>\r\n      {props && (\r\n        <Grid>\r\n          <FilterDiv active={props.active}>\r\n            <Filter\r\n              id={props.id}\r\n              active={props.active}\r\n              onClick={() => {\r\n                props.setStatus(props.id);\r\n                props.onClick(props.id);\r\n              }}\r\n            >\r\n              {props.id}\r\n            </Filter>\r\n          </FilterDiv>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst FilterDiv = styled.div`\r\n  align-items: center;\r\n  margin: 50px auto;\r\n  width: 80%;\r\n  height: 35px;\r\n\r\n  /* background-color: ${(props) => (props.active ? \"black\" : \" yellow\")}; */\r\n  border-bottom: ${(props) => (props.active ? \"1mm ridge #554475\" : null)};\r\n`;\r\n\r\nconst Filter = styled.p`\r\n  text-align: center;\r\n  cursor: pointer;\r\n  width: auto;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    -webkit-transform: scale(1.05);\r\n    -moz-transform: scale(1.05);\r\n    -ms-transform: scale(1.05);\r\n    -o-transform: scale(1.05);\r\n\r\n    color: #737373;\r\n  }\r\n  @media screen and (max-width: 1400px) {\r\n    /* margin-top: 1050px; */\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    /* margin-top: 1050px; */\r\n  } ;\r\n`;\r\nexport default MyFilter;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport MyFilter from \"./filter/MyFilter\";\r\n\r\nconst MypageFilter = props => {\r\n  // console.log(props);\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"소개\",\r\n      active: true,\r\n    },\r\n    {\r\n      id: \"진행\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"관심\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"완료\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"모집\",\r\n      active: false,\r\n    },\r\n  ]);\r\n  const filters = item => {\r\n    setArr(state => {\r\n      return state.map(stateItem => {\r\n        if (stateItem.id === item.id) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n    setArr(state => {\r\n      return state.map(stateItem => {\r\n        if (stateItem.id !== item.id && stateItem.active === true) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {arr && (\r\n        <Wrap>\r\n          {arr.map(item => {\r\n            return (\r\n              <MyFilter\r\n                onClick={() => {\r\n                  if (item.id !== props.filter) {\r\n                    filters(item);\r\n                  }\r\n                }}\r\n                key={item.id}\r\n                {...item}\r\n                setStatus={props.onClicks}\r\n              ></MyFilter>\r\n            );\r\n          })}\r\n        </Wrap>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-around;\r\n  max-width: 1050px;\r\n`;\r\n\r\nexport default MypageFilter;\r\n","/* eslint-disable */\n\n// 나의 마이페이지에서 뜨는 버튼들과 다른사람 마이페이지에서 뜨는 버튼들\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\nimport { postActions } from \"../redux/modules/post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { apis } from \"../lib/axios\";\nimport MypagePostList from \"./mypagePost/MypagePostList\";\nimport MarkdownRead from \"./MarkdownRead\";\nimport { history } from \"../redux/configureStore\";\nimport Spinner from \"../shared/Spinner\";\nimport Banners from \"./myPage/Banners\";\nimport MypageCard from \"./myPage/MypageCard\";\nimport TypeResultTest from \"./myPage/TypeResultTest\";\nimport MypageFilter from \"./myPage/MypageFilter\";\nimport { pageCheckAction } from \"../redux/modules/pageCheck\";\n\n// MyPageInfo의 함수형 컴포넌트를 만든다.\nconst MyPageInfo = (props) => {\n  const dispatch = useDispatch();\n  const userId = props.match.params.id;\n\n  const myUserId = useSelector((state) => state.user.userId);\n  const [myUrl, setMyUrl] = React.useState();\n  const [filter, setFilter] = React.useState(\"소개\");\n  const [mydata, setMydata] = React.useState();\n  const [editMyProfile, setEditMyProfile] = React.useState(false); // 내려줘야함\n  const [techStack, setTeckstack] = React.useState([]); //\n  const [nickName, setNickName] = React.useState(); //\n  const [email, setEmail] = React.useState(); //\n  const myType = mydata?.user.userPropensityType;\n  const [modal, setModal] = React.useState(false);\n  const [testmodal, setTestModal] = React.useState(false);\n  const [assessment, setAssessment] = React.useState(false);\n\n  const [memberId, setMemberId] = React.useState(); //멤버아이디\n  const [writerEquals, setWriterEquals] = React.useState(); //포스트의 작성자확인\n\n  const pageCheck = useSelector((state) => state.pagecheck.pageGo);\n\n  //click\n  const introduction = mydata?.user.introduction ? true : false;\n\n  const recruitmentProject = mydata?.recruitment;\n  const inProgressProject = mydata?.inProgress;\n  const bookMarkProject = mydata?.bookmark;\n  const endProject = mydata?.end;\n\n  const [loading, setLoading] = React.useState(true);\n\n  const doSetAssessment = () => {\n    // console.log(\"실행됨\");\n    setAssessment(!assessment);\n  };\n\n  const SetFilter = (data) => {\n    setFilter(data);\n  };\n\n  React.useEffect(() => {\n    setMydata(null);\n    dispatch(postActions.isMainPage(false));\n    dispatch(postActions.whatPage(\"myPage\"));\n    const fetchData = async () => {\n      try {\n        const result = await apis.getMypage(userId);\n        // console.log(result);\n        setNickName(result.data.data.user.nickname);\n        setEmail(result.data.data.user.email);\n        setTeckstack(result.data.data.user.techStackList);\n\n        setMydata(result.data.data);\n        dispatch(pageCheckAction.getPageCheck(`/mypage/${userId}`));\n\n        setLoading(false);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n    // console.log(mydata);\n  }, [assessment, editMyProfile, testmodal]);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await apis.getMypage(userId);\n\n        setMydata(result.data.data);\n        dispatch(pageCheckAction.getPageCheck(`/mypage/${userId}`));\n\n        setLoading(false);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n    // console.log(mydata);\n  }, [filter]);\n\n  const EmailConfirm = () => {\n    setModal(true);\n  };\n\n  const EditTest = () => {\n    setTestModal(true);\n  };\n\n  const TestClose = () => {\n    setTestModal(false);\n  };\n\n  const EditProfile = () => {\n    setEditMyProfile(true);\n  };\n\n  const editProfileCancle = () => {\n    setEditMyProfile(false);\n  };\n\n  React.useLayoutEffect(() => {}, [props.goMypage]);\n\n  return (\n    <Grid margin=\"0 0 250px 0\">\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          {mydata && myType && (\n            <Grid className=\"전체페이지\" maxWidth=\"1900px\" margin=\"auto\">\n              <Grid height=\"30%\" position=\"relative\">\n                <Banner>\n                  <Banners\n                    type={myType}\n                    myPage={mydata?.isMyMypage}\n                    // setModal={setModal}\n                    // modal={modal}\n                    // onClick={() => {\n                    //   EmailConfirm();\n                    // }}\n                  ></Banners>\n                  <Grid position=\"absolute\" top=\"120px\" height=\"75%\">\n                    <TypeResultTest\n                      myType={myType}\n                      userId={userId}\n                      myUserId={myUserId}\n                      mydata={mydata}\n                      testmodal={testmodal}\n                      EditTest={EditTest}\n                      TestClose={TestClose}\n                      setModal={setModal}\n                      nickName={nickName}\n                      modal={modal}\n                      onClick={() => {\n                        EmailConfirm();\n                      }}\n                    />\n                  </Grid>\n                </Banner>\n              </Grid>\n              <Grid width=\"340px\" height=\"10px\" position=\"relative\">\n                <MypageCard\n                  setEditMyProfile={setEditMyProfile}\n                  editMyProfile={editMyProfile}\n                  mydata={mydata}\n                  myType={myType}\n                  myUserId={myUserId}\n                  userId={userId}\n                  nickName={nickName}\n                  email={email}\n                  techStack={techStack}\n                  onClick={EditProfile}\n                  onClick2={editProfileCancle}\n                />\n              </Grid>\n              <Grid margin=\"100px 0 0 0 \">\n                <FilterWrap>\n                  <MypageFilter filter={filter} onClicks={SetFilter} />\n                </FilterWrap>\n\n                {filter === \"모집\" && (\n                  <MypagePostList post={recruitmentProject}></MypagePostList>\n                )}\n\n                <IntroduceWrap>\n                  {filter === \"모집\" && recruitmentProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </IntroduceWrap>\n\n                {filter === \"진행\" && (\n                  <MypagePostList post={inProgressProject}></MypagePostList>\n                )}\n                <IntroduceWrap>\n                  {filter === \"진행\" && inProgressProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </IntroduceWrap>\n                {filter === \"관심\" && (\n                  <MypagePostList post={bookMarkProject}></MypagePostList>\n                )}\n                <IntroduceWrap>\n                  {filter === \"관심\" && bookMarkProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </IntroduceWrap>\n                {filter === \"완료\" && (\n                  <MypagePostList\n                    post={endProject}\n                    myUserId={myUserId}\n                    assessment={assessment}\n                    doSetAssessment={doSetAssessment}\n                  ></MypagePostList>\n                )}\n                <IntroduceWrap margin=\"0 0 0 25%\" width=\"49%\">\n                  {filter === \"완료\" && endProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </IntroduceWrap>\n                {filter === \"소개\" &&\n                  mydata?.isMyMypage === true &&\n                  introduction === true && (\n                    <button\n                      style={{\n                        float: \"right\",\n                        margin: \"55px 18% 0 0\",\n                        border: \"none\",\n                        borderRadius: \"15px\",\n                        cursor: \"pointer\",\n                        backgroundColor: \" transparent \",\n                      }}\n                      onClick={() => {\n                        history.push({\n                          pathname: \"/addmarkdown\",\n                          state: { userId: userId },\n                        });\n                      }}\n                    >\n                      <img\n                        src=\"/img/소개글.png\"\n                        style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}\n                      />\n                    </button>\n                  )}\n                <Grid margin=\"0 0 0 34%\" width=\"49%\">\n                  {filter === \"소개\" && introduction === true && (\n                    <Grid margin=\"50px 0 0 0\" border=\"1px solid #707070 \">\n                      <MarkdownRead\n                        introduction={mydata?.user.introduction}\n                      ></MarkdownRead>\n                    </Grid>\n                  )}\n                </Grid>\n                <IntroduceWrap>\n                  {filter === \"소개\" && introduction === false && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        작성된 소개가 없네요.\n                      </NoIntroductionText>\n                      <NoIntroductionText2>\n                        소개글 작성은 PC환경에서 가능합니다.\n                      </NoIntroductionText2>\n                      {mydata?.isMyMypage === true && (\n                        <>\n                          <IntroduceBtn>\n                            <Button\n                              _onClick={() => {\n                                history.push({\n                                  pathname: \"/addmarkdown\",\n                                  state: { userId: userId },\n                                });\n                              }}\n                            >\n                              {\" \"}\n                              소개글 작성하기\n                            </Button>\n                          </IntroduceBtn>\n                          {/* <NoticeText>\n                            소개 작성은 PC환경에서 작성 가능합니다.\n                          </NoticeText> */}\n                        </>\n                      )}\n                    </>\n                  )}\n                </IntroduceWrap>\n              </Grid>\n              {/* 소개글 있거나 없거나 */}\n            </Grid>\n          )}\n          {/* //  mydata와 myType가 있을때 */}\n        </>\n        // 스피너를 감싸는 친구\n      )}\n      {/* 스피너를 감싸는 괄호 */}\n    </Grid>\n  );\n};\n\nconst Banner = styled.div`\n  width: 100%;\n  max-width: 1920px;\n  margin: -100px auto;\n  display: flex;\n  height: 457px;\n  overflow: hidden;\n`;\n\nconst FilterWrap = styled.div`\n  display: flex;\n  margin-left: 30%;\n  width: 60vw;\n  z-index: 999;\n\n  @media screen and (max-width: 1600px) {\n    margin-left: 35%;\n  }\n  @media screen and (max-width: 1200px) {\n    width: 90vw;\n    justify-content: center;\n    margin: auto;\n  }\n  @media screen and (max-width: 750px) {\n    width: 90vw;\n    justify-content: center;\n    margin: auto;\n  } ;\n`;\nconst IntroduceWrap = styled.div`\n  margin: 0 0 0 30%;\n  width: 60vw;\n  max-width: 1050px;\n\n  @media screen and (max-width: 1600px) {\n    margin-left: 35%;\n  }\n  @media screen and (max-width: 1200px) {\n    width: 90vw;\n    justify-content: center;\n    margin: auto;\n  }\n  @media screen and (max-width: 750px) {\n    width: 90vw;\n    justify-content: center;\n    margin: auto;\n  } ;\n`;\nconst NoIntroduction = styled.img`\n  width: 40%;\n  height: 40%;\n  object-fit: cover;\n  position: relative;\n  margin-left: 27%;\n  display: flex;\n  justify-content: center;\n`;\nconst NoIntroductionText = styled.p`\n  color: #737373;\n  font-size: 25px;\n  width: auto;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n`;\nconst NoIntroductionText2 = styled.p`\n  display: none;\n  @media screen and (max-width: 375px) {\n    color: #737373;\n    font-size: 12px;\n    width: auto;\n    align-items: center;\n    display: flex;\n    justify-content: center;\n  } ;\n`;\n\nconst IntroduceBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: auto;\n  width: 150px;\n`;\n\nconst NoticeText = styled.div`\n  color: #737373;\n  font-size: 12px;\n\n  @media screen and (min-width: 490px) {\n    color: #737373;\n    font-size: 12px;\n  }\n  @media screen and (min-width: 491px) {\n    display: none;\n  } ;\n`;\n\nexport default MyPageInfo;\n","export default __webpack_public_path__ + \"static/media/PostAdd.2b16c1a9.jpg\";","// LeftBanner.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Img from \"../../images/PostAdd.jpg\";\n\n// LeftBanner의 함수형 컴포넌트를 만든다..\nconst LeftBanner = (props) => {\n  return (\n    <React.Fragment>\n      <SideBarImg src={Img} />\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SideBarImg = styled.img`\n  width: 43%;\n  max-width: 100%;\n  height: 1200px;\n  @media screen and (max-width: 1600px) {\n    max-width: 80%;\n  }\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`;\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default LeftBanner;\n","// TitleWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Input, Text } from \"../../../elements/Index\";\n\n// TitleWrite의 함수형 컴포넌트를 만든다.\nconst TitleWrite = (props) => {\n  return (\n    <React.Fragment>\n      <Grid>\n        <TitleMedia>\n          <Text>제목</Text>\n        </TitleMedia>\n        <Input\n          width=\"100%\"\n          height=\"40px\"\n          padding=\"10px\"\n          margin=\"4px auto\"\n          border=\"1px solid #C4C4C4\"\n          borderRadius=\"10px\"\n          placeholder=\"제목을 입력해주세요.\"\n          maxLength=\"35\"\n          inputFocusOutline=\"none\"\n          _onChange={(e) => {\n            props.setTitle(e.target.value);\n          }}\n        ></Input>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    margin: auto;\n    font-size: 10px;\n  }\n`;\n\nconst InputMedia = styled.input`\n  @media screen and (max-width: 600px) {\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TitleWrite;\n","// StackWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// StackWrite 함수형 컴포넌트를 만든다.\nconst StackWrite = (props) => {\n  const stackSelect = [\n    { value: \"React\", label: \"React\" },\n    { value: \"Java\", label: \"Java\" },\n    { value: \"JavaScript\", label: \"JavaScript\" },\n    { value: \"Python\", label: \"Python\" },\n    { value: \"Node\", label: \"Node\" },\n    { value: \"Flask\", label: \"Flask\" },\n    { value: \"C++\", label: \"C++\" },\n    { value: \"Django\", label: \"Django\" },\n    { value: \"php\", label: \"php\" },\n    { value: \"Vue\", label: \"Vue\" },\n    { value: \"Spring\", label: \"Spring\" },\n    { value: \"Swift\", label: \"Swift\" },\n    { value: \"Kotlin\", label: \"Kotlin\" },\n    { value: \"TypeScript\", label: \"TypeScript\" },\n  ];\n\n  const handleChange = useCallback(\n    (inputValue, { action, removedValue }) => {\n      if (props.techstack.length < 4) {\n        props.setTectstack(inputValue);\n      } else {\n        if (removedValue !== undefined) {\n          let temp = props.techstack.filter(\n            (item) => item[\"value\"] !== removedValue[\"value\"]\n          );\n          props.setTectstack(temp);\n        } else {\n          window.alert(\"최대 4가지만 선택 가능합니다.\");\n        }\n      }\n    },\n    [stackSelect]\n  );\n\n  const formatTech = () => {\n    let tamarray = [];\n    let index;\n    for (index = 0; index < props.techstack.length; index++) {\n      tamarray.push(props.techstack[index][\"label\"]);\n    }\n    props.setTechStackList(tamarray);\n  };\n\n  useEffect(() => {\n    formatTech();\n  }, [props.techstack]);\n\n  return (\n    <React.Fragment>\n      <Grid margin=\"10px auto\">\n        <StackMedia>\n          <Text>\n            기술스택 선택\n            <SubDescription> (최대 4개)</SubDescription>\n          </Text>\n          <Select\n            isMulti\n            value={props.techstack}\n            components={props.animatedComponents}\n            styles={props.styles}\n            options={stackSelect}\n            onChange={handleChange}\n            placeholder={<div>기술 스택을 선택해주세요.</div>}\n          />\n        </StackMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SubDescription = styled.span`\n  color: rgb(186, 187, 192);\n  font-size: 12px;\n`;\n\nconst StackMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    margin: auto;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StackWrite;\n","// DateWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport DatePicker from \"react-datepicker\";\nimport { ko } from \"date-fns/esm/locale\";\n\n// DateWrite의 함수형 컴포넌트를 만든다.\nconst DateWrite = (props) => {\n  const startDate = (date) => {\n    props.setStartdate(date);\n    // if (date <= props.endDate) {\n    //   props.setStartdate(date);\n    // } else {\n    //   window.alert(\"시작일을 잘못 설정했습니다.\");\n    // }\n  };\n\n  const endDate = (date) => {\n    if (date > props.startDate) {\n      props.setEnddate(date);\n    } else {\n      window.alert(\"종료일을 잘못 설정했습니다.\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <DateMedia>\n        <Text>기간설정</Text>\n        <Grid display=\"flex\" textAlign=\"center\" margin=\"20px auto\">\n          {/* 시작 일*/}\n          <Grid>\n            <Text>프로젝트 시작일</Text>\n            <SDatePicker\n              dateFormat=\"yyyy - MM - dd\"\n              selected={props.startDate}\n              onChange={startDate}\n              locale={ko}\n              minDate={new Date()}\n            />\n          </Grid>\n          {/* 종료 일*/}\n          <Grid>\n            <Text>프로젝트 종료일</Text>\n            <SDatePicker\n              dateFormat=\"yyyy - MM - dd\"\n              selected={props.endDate}\n              onChange={endDate}\n              locale={ko}\n              minDate={new Date()}\n            />\n          </Grid>\n        </Grid>\n      </DateMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SDatePicker = styled(DatePicker)`\n  box-sizing: border-box;\n  width: 96%;\n  height: 40px;\n  border-radius: 10px;\n  border: 1px solid #c4c4c4;\n  color: black;\n  font-size: 16px;\n  text-align: center;\n  margin-top: 0.6rem;\n  outline: none;\n`;\n\nconst DateMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default DateWrite;\n","// TotalMenber.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// TotalMember의 함수형 컴포넌트를 만든다.\nconst TotalMember = (props) => {\n  const projectMembers = [\n    { value: 2, label: 2 },\n    { value: 3, label: 3 },\n    { value: 4, label: 4 },\n    { value: 5, label: 5 },\n    { value: 6, label: 6 },\n  ];\n\n  return (\n    <React.Fragment>\n      <Grid margin=\"20px auto\">\n        <TotalMemberMedia>\n          <Text>프로젝트 총 인원</Text>\n          <Select\n            options={projectMembers}\n            styles={props.styles}\n            onChange={(e) => {\n              let b;\n              b = e[\"label\"];\n              props.setTotalmember(b);\n            }}\n            placeholder={<div>총 인원을 선택해주세요.</div>}\n          ></Select>\n        </TotalMemberMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst TotalMemberMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    margin: auto;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TotalMember;\n","// ContentWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// ContentWrite의 함수형 컴포넌트를 만든다.\nconst ContentWrite = props => {\n  return (\n    <React.Fragment>\n      <ContentMedia>\n        <Grid margin=\"10px auto\">\n          <Text>프로젝트 내용적기</Text>\n\n          <TextArea\n            placeholder=\"프로젝트 내용을 입력해주세요.\"\n            onChange={e => {\n              props.setContents(e.target.value);\n            }}\n          ></TextArea>\n        </Grid>\n      </ContentMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst TextArea = styled.textarea`\n  width: 98%;\n  height: 350px;\n  padding: 10px;\n  margin: 4px auto;\n  border: 1px solid #c4c4c4;\n  border-radius: 10px;\n  outline: none;\n  @media screen and (max-width: 600px) {\n    height: 200px;\n  }\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    font-size: 10px;\n  }\n  @media screen and (max-width: 500px) {\n    width: 330px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ContentWrite;\n","// GenerateButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../../../elements/Index\";\n\n// GenerateButton의 함수형 컴포넌트를 만든다..\nconst GenerateButton = (props) => {\n  return (\n    <React.Fragment>\n      <Grid>\n        <Btn\n          onClick={() => {\n            props.submitHandler();\n          }}\n        >\n          프로젝트 생성하기\n        </Btn>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 140px;\n  height: 35px;\n  border: 1px solid #554475;\n  border-radius: 50px;\n  color: #554475;\n  margin: 10px auto 80px auto;\n  cursor: pointer;\n  background-color: white;\n  &:hover {\n    color: white;\n    background-color: #554475;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default GenerateButton;\n","// TitleWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Input, Text } from \"../../../elements/Index\";\n\n// TitleWrite의 함수형 컴포넌트를 만든다.\nconst UrlWrite = (props) => {\n  return (\n    <React.Fragment>\n      <Grid>\n        <TitleMedia>\n          <Text>오픈채팅 URL</Text>\n        </TitleMedia>\n        <Input\n          width=\"100%\"\n          height=\"40px\"\n          padding=\"10px\"\n          margin=\"4px auto\"\n          border=\"1px solid #C4C4C4\"\n          borderRadius=\"10px\"\n          placeholder=\"오픈채팅방 URL을 입력해주세요.\"\n          maxLength=\"35\"\n          inputFocusOutline=\"none\"\n          _onChange={(e) => {\n            props.setChatUrl(e.target.value);\n          }}\n        ></Input>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    margin: auto;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default UrlWrite;\n","// RightWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { postAddActions } from \"../../redux/modules/postadd\";\nimport { postActions } from \"../../redux/modules/post\";\nimport makeAnimated from \"react-select/animated\";\nimport TitleWrite from \"./rightContents/TitleWrite\";\nimport StackWrite from \"./rightContents/StackWrite\";\nimport DateWrite from \"./rightContents/DateWrite\";\nimport TotalMember from \"./rightContents/TotalMember\";\nimport ContentWrite from \"./rightContents/ContentWrite\";\nimport GenerateButton from \"./rightContents/GenerateButton\";\nimport UrlWrite from \"./rightContents/UrlWrite\";\n\n// RightWrite의 함수형 컴포넌트를 만든다.\nconst RightWrite = props => {\n  React.useEffect(() => {\n    dispatch(postActions.isMainPage(false));\n    dispatch(postActions.whatPage(\"addPostPage\"));\n  }, []);\n\n  const dispatch = useDispatch();\n  const animatedComponents = makeAnimated();\n  const [title, setTitle] = React.useState(\"\");\n  const [chatUrl, setChatUrl] = React.useState();\n  const [techstack, setTectstack] = React.useState([]);\n  const [techStackList, setTechStackList] = React.useState();\n  const date = new Date();\n  const [startDate, setStartdate] = React.useState(\n    date.setDate(date.getDate())\n  );\n  const [endDate, setEnddate] = React.useState(\n    date.setDate(date.getDate() + 1)\n  );\n  const [totalMember, setTotalmember] = React.useState();\n  const [projectStatus, setProjectstatus] = React.useState(\"모집중\");\n  const [contents, setContents] = React.useState(\"\");\n\n  let regex =\n    /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n  // 예외처리\n  const submitHandler = () => {\n    if (!regex.test(chatUrl)) {\n      return window.alert(\"올바른 URL 주소가 필요합니다.\");\n    } else if (\n      title.length > 0 &&\n      techstack.length > 0 &&\n      totalMember > 0 &&\n      contents.length > 0 &&\n      startDate < endDate\n    ) {\n      window.alert(\"프로젝트가 생성되었습니다.\");\n      scopeIndex();\n    } else {\n      window.alert(\"값을 다시 입력해주세요.\");\n    }\n  };\n\n  const scopeIndex = () => {\n    const card = {\n      title: title,\n      techStackList: techStackList,\n      startDate: startDate,\n      endDate: endDate,\n      totalMember: totalMember,\n      projectStatus: projectStatus,\n      chatUrl: chatUrl,\n      contents: contents,\n    };\n    console.log(card);\n    dispatch(postAddActions.addPostAPI(card));\n  };\n\n  // Select 공통 스타일\n  const styles = {\n    control: (base, state) => ({\n      ...base,\n      boxShadow: state.isFocused ? 0 : 0,\n      borderWidth: 1,\n      borderRadius: 10,\n      marginTop: 4,\n      minHeight: 40,\n      borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      \"&:hover\": {\n        borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      },\n    }),\n  };\n\n  return (\n    <React.Fragment>\n      <Grid margin=\"auto 85px\" height=\"90%\">\n        <TitleMedia>\n          <Title>게시글 작성하기</Title>\n        </TitleMedia>\n\n        <Grid margin=\"40px auto\">\n          <TitleWrite setTitle={setTitle} />\n          <StackWrite\n            animatedComponents={animatedComponents}\n            styles={styles}\n            setTectstack={setTectstack}\n            techstack={techstack}\n            setTechStackList={setTechStackList}\n          />\n          <DateWrite\n            setStartdate={setStartdate}\n            startDate={startDate}\n            setEnddate={setEnddate}\n            endDate={endDate}\n          />\n          <TotalMember setTotalmember={setTotalmember} styles={styles} />\n          <UrlWrite setChatUrl={setChatUrl} />\n\n          <ContentWrite setContents={setContents} />\n\n          <GenerateButton submitHandler={submitHandler} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Title = styled.div`\n  color: black;\n  font-size: 32px;\n  font-weight: 800;\n  margin-top: 30px;\n`;\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 1000px) {\n    width: 350px;\n    margin: auto;\n    text-align: center;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default RightWrite;\n","// AddPost.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid } from \"../elements/Index\";\nimport LeftBanner from \"../components/postWrite/LeftBanner\";\nimport RightWrite from \"../components/postWrite/RightWrite\";\n\n// WritePost의 함수형 컴포넌트를 만든다.\nconst WritePost = (props) => {\n  return (\n    <React.Fragment>\n      <Grid\n        display=\"flex\"\n        justifyContent=\"center\"\n        border=\"1px solid #C4C4C4\"\n        maxWidth=\"1920px\"\n        margin=\"auto\"\n      >\n        <LeftBanner />\n        <RightWrite />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default WritePost;\n","// PostWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport AddPost from \"../components/AddPost\";\nimport { postActions } from \"../redux/modules/post\";\nimport { useDispatch } from \"react-redux\";\n\n// PostWrite의 함수형 컴포넌트를 만든다.\nconst PostWrite = (props) => {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(postActions.isMainPage(false));\n  }, []);\n\n  return (\n    <React.Fragment>\n      <AddPost />\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PostWrite;\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../lib/axios\";\nimport Swal from \"sweetalert2\";\n// 수정\nconst EDIT_POST = \"EDIT_POST\";\n// 삭제\nconst DELETE_POST = \"DELETE_POST\";\n// 상태 체크\nconst STATUS_POST = \"STATUS_POST\";\n\n// 포스트 수정 액션생성함수 생성\nconst editPost = createAction(EDIT_POST, (editcard) => ({ editcard }));\n// 포스트 삭제 액션생성함수 생성\nconst deletePost = createAction(DELETE_POST, (postId) => ({ postId }));\n// 포스트 상태체크 액션생성함수 생성\nconst statusPost = createAction(STATUS_POST, (postId) => ({ postId }));\n\n// 초기값\nconst initialState = {\n  list: [],\n};\n\n// 포스트 수정\nexport const editPostAPI = (post_id, editcard) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .editPost(post_id, editcard)\n      .then((res) => {\n        history.goBack();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        window.alert(err.response.data.msg);\n      });\n  };\n};\n\n// 포스트 삭제\nexport const deletePostAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .deletePost(postId)\n      .then((res) => {\n        history.goBack();\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n\n// 포스트 상태체크\nexport const statusPostAPI = (post_id, editstatus) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .statusPost(post_id, editstatus)\n      .then((res) => {\n        // history.goBack();\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n\n//북마크 전송\nconst bookMarkAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .bookMarkChecked(postId)\n      .then((res) => {\n        console.log(res);\n        // console.log(res.data.data.isBookmarkChecked);\n        if (res.data.msg == \"북마크 추가 성공\") {\n          return Swal.fire(\"관심 프로젝트에 추가되었습니다!\", \"\", \"success\");\n        }\n        if (res.data.msg == \"북마크 삭제 성공\") {\n          return Swal.fire(\"관심 프로젝트 에서 삭제되었습니다!\", \"\", \"success\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        if (err.response.data.msg == \"해당 유저를 찾을 수 없습니다.\") {\n          return Swal.fire(\"해당 유저를 찾을 수 없습니다!\", \"\", \"question\");\n        }\n        if (err.response.data.msg == \"해당 프로젝트를 찾을 수 없습니다.\") {\n          return Swal.fire(\"해당 프로젝트를 찾을 수 없습니다!\", \"\", \"question\");\n        }\n        if (err.response.data.msg == \"자신의 게시물은 북마크할 수 없습니다.\") {\n          return Swal.fire(\n            \"자신의 게시물은 북마크 할 수 없습니다!\",\n            \"\",\n            \"warning\"\n          );\n        }\n        if (err.response.data.msg == \"로그인 사용자만 사용할 수 있습니다.\") {\n          return Swal.fire(\n            \"로그인 사용자만 이용할 수 있습니다!\",\n            \"\",\n            \"warning\"\n          );\n        }\n        if (err.response.data.msg == \"입력 값이 잘못되었습니다.\") {\n          return Swal.fire(\n            \"로그인 사용자만 이용할 수 있습니다!\",\n            \"\",\n            \"warning\"\n          );\n        }\n      });\n  };\n};\n\n// 리듀서\nexport default handleActions(\n  {\n    [EDIT_POST]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"포스트 수정\", action.payload);\n      }),\n    [DELETE_POST]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"포스트 삭제\", action.payload);\n      }),\n    [STATUS_POST]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"포스트 상태 체크\", action.payload);\n      }),\n  },\n  initialState\n);\n\nconst postDetailActions = {\n  editPostAPI,\n  deletePostAPI,\n  statusPostAPI,\n  bookMarkAPI,\n};\n\nexport { postDetailActions };\n","export default __webpack_public_path__ + \"static/media/PostDetail.71524391.png\";","// LeftBanner.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Img from \"../../images/PostDetail.png\";\n\n// LeftBanner의 함수형 컴포넌트를 만든다.\nconst LeftBanner = (props) => {\n  return (\n    <React.Fragment>\n      <SideBarImg src={Img} />\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SideBarImg = styled.img`\n  width: 43%;\n  max-width: 100%;\n  height: 1280px;\n  @media screen and (max-width: 1600px) {\n    max-width: 80%;\n  }\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`;\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default LeftBanner;\n","// TitleEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text, Input } from \"../../../elements/Index\";\n\n// TitleEdit의 함수형 컴포넌트를 만든다.\nconst TitleEdit = (props) => {\n  return (\n    <React.Fragment>\n      <TitleMedia>\n        <Grid>\n          <Text>제목</Text>\n          <Input\n            width=\"100%\"\n            maxLength=\"35\"\n            height=\"40px\"\n            padding=\"10px\"\n            margin=\"4px auto\"\n            border=\"1px solid #C4C4C4\"\n            borderRadius=\"10px\"\n            placeholder=\"제목을 입력해주세요.\"\n            inputFocusOutline=\"none\"\n            type=\"text\"\n            editValue={props.title}\n            _onChange={(e) => {\n              props.setTitle(e.target.value);\n            }}\n          />\n        </Grid>\n      </TitleMedia>\n    </React.Fragment>\n  );\n};\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 40px;\n    font-size: 10px;\n  }\n`;\n\n// export\nexport default TitleEdit;\n","// StackEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// StackEdit의 함수형 컴포넌트를 만든다.\nconst StackEdit = (props) => {\n  const stackSelect = [\n    { value: \"React\", label: \"React\" },\n    { value: \"Java\", label: \"Java\" },\n    { value: \"JavaScript\", label: \"JavaScript\" },\n    { value: \"Python\", label: \"Python\" },\n    { value: \"Node\", label: \"Node\" },\n    { value: \"Flask\", label: \"Flask\" },\n    { value: \"C++\", label: \"C++\" },\n    { value: \"Django\", label: \"Django\" },\n    { value: \"php\", label: \"php\" },\n    { value: \"Vue\", label: \"Vue\" },\n    { value: \"Spring\", label: \"Spring\" },\n    { value: \"Swift\", label: \"Swift\" },\n    { value: \"Kotlin\", label: \"Kotlin\" },\n    { value: \"TypeScript\", label: \"TypeScript\" },\n  ];\n\n  const orderByLabel = useCallback(\n    (a, b) => a.label.localeCompare(b.label),\n    []\n  );\n\n  const orderOptions = useCallback(\n    (values) =>\n      values\n        .filter((v) => v.isFixed)\n        .sort(orderByLabel)\n        .concat(values.filter((v) => !v.isFixed).sort(orderByLabel)),\n    [orderByLabel]\n  );\n\n  const [value, setValue] = React.useState(orderOptions(stackSelect));\n  const handleChange = useCallback(\n    (inputValue, { action, removedValue }) => {\n      switch (action) {\n        case \"remove-value\":\n        case \"pop-value\":\n          if (removedValue.isFixed) {\n            setValue(orderOptions([...inputValue, removedValue]));\n\n            return;\n          }\n          break;\n        case \"clear\":\n          setValue(stackSelect.filter((v) => v.isFixed));\n          return;\n        default:\n      }\n\n      setValue(inputValue);\n      props.setTectstack(inputValue);\n    },\n    [stackSelect, orderOptions]\n  );\n\n  const formatTech = () => {\n    let tamarray = [];\n    let index;\n    for (index = 0; index < props.techstack.length; index++) {\n      tamarray.push(props.techstack[index][\"label\"]);\n    }\n\n    props.setTest(tamarray);\n  };\n\n  useEffect(() => {\n    formatTech();\n  }, [props.techstack]);\n\n  return (\n    <React.Fragment>\n      <StackMedia>\n        <Grid margin=\"20px auto\">\n          <Text>기술스택 선택</Text>\n          <Select\n            isMulti\n            components={props.animatedComponents}\n            isClearable={value.some((v) => !v.isFixed)}\n            styles={props.styles}\n            value={props.techstack}\n            options={stackSelect}\n            onChange={handleChange}\n            placeholder={<div>기술 스택을 선택해주세요.</div>}\n          />\n        </Grid>\n      </StackMedia>\n    </React.Fragment>\n  );\n};\n\nconst StackMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 40px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StackEdit;\n","// totalMemberEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// totalMemberEdit의 함수형 컴포넌트를 만든다.\nconst totalMemberEdit = (props) => {\n  const projectMembers = [\n    { value: 2, label: 2 },\n    { value: 3, label: 3 },\n    { value: 4, label: 4 },\n    { value: 5, label: 5 },\n    { value: 6, label: 6 },\n  ];\n\n  return (\n    <React.Fragment>\n      <TotalMemberMedia>\n        <Grid margin=\"20px auto\">\n          <Text>프로젝트 총 인원</Text>\n          <Select\n            options={projectMembers}\n            styles={props.styles}\n            value={projectMembers.filter(\n              ({ value }) => value === props.totalMember\n            )}\n            defaultValue={{ value: 6, label: 6 }}\n            onChange={(data) => {\n              props.setTotalmember(data.label);\n            }}\n            placeholder={<div>총인원을 선택해주세요.</div>}\n          ></Select>\n        </Grid>\n      </TotalMemberMedia>\n    </React.Fragment>\n  );\n};\n\nconst TotalMemberMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    font-size: 10px;\n    margin-bottom: 55px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default totalMemberEdit;\n","// StatusEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// StatusEdit의 함수형 컴포넌트를 만든다.\nconst StatusEdit = (props) => {\n  const projectStatused = [\n    { value: \"done\", label: \"모집중\" },\n    { value: \"doing\", label: \"진행중\" },\n    { value: \"ready\", label: \"종료\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <StatusMedia>\n        <Grid margin=\"20px auto\">\n          <Text>프로젝트 상태체크</Text>\n          <Select\n            options={projectStatused}\n            styles={props.styles}\n            value={projectStatused.filter(\n              ({ label }) => label === props.projectStatus\n            )}\n            onChange={(data) => {\n              props.setProjectstatus(data.label);\n            }}\n            placeholder={<div>상태를 설정해주세요.</div>}\n          ></Select>\n        </Grid>\n      </StatusMedia>\n    </React.Fragment>\n  );\n};\n\nconst StatusMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    font-size: 10px;\n    margin-bottom: 70px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StatusEdit;\n","// TitleWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Input, Text } from \"../../../elements/Index\";\n\n// TitleWrite의 함수형 컴포넌트를 만든다.\nconst UrlEdit = (props) => {\n  return (\n    <React.Fragment>\n      <Grid>\n        <TitleMedia>\n          <Text>오픈채팅 URL</Text>\n\n          <Input\n            width=\"100%\"\n            height=\"40px\"\n            padding=\"10px\"\n            margin=\"4px auto\"\n            border=\"1px solid #C4C4C4\"\n            borderRadius=\"10px\"\n            placeholder=\"오픈채팅방 URL을 입력해주세요.\"\n            maxLength=\"35\"\n            editValue={props.chatUrl}\n            inputFocusOutline=\"none\"\n            _onChange={(e) => {\n              props.setChatUrl(e.target.value);\n            }}\n          ></Input>\n        </TitleMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 350px;\n    margin: 10px auto;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default UrlEdit;\n","// ContentEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// ContentEdit의 함수형 컴포넌트를 만든다.\nconst ContentEdit = (props) => {\n  return (\n    <React.Fragment>\n      <ContentMedia>\n        <Grid margin=\"10px auto\">\n          <Text>프로젝트 내용적기</Text>\n          <TextArea\n            value={props.contents}\n            onChange={(e) => {\n              props.setContents(e.target.value);\n            }}\n          />\n        </Grid>\n      </ContentMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst TextArea = styled.textarea`\n  width: 97%;\n  height: 400px;\n  padding: 10px;\n  margin: 4px auto;\n  border: 1px solid #c4c4c4;\n  border-radius: 10px;\n  font-size: 16px;\n  outline: none;\n  @media screen and (max-width: 600px) {\n    height: 200px;\n  }\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 340px;\n    font-size: 10px;\n  }\n  @media screen and (max-width: 500px) {\n    display: flex;\n    width: 335px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ContentEdit;\n","// DateEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport DatePicker from \"react-datepicker\";\nimport { ko } from \"date-fns/esm/locale\";\n\n// DateEdit의 함수형 컴포넌트를 만든다.\nconst DateEdit = (props) => {\n  const startDate = (date) => {\n    props.setStartdate(date);\n    // if (date <= props.endDate) {\n    //   props.setStartdate(date);\n    // } else {\n    //   window.alert(\"시작일을 잘못 설정했습니다.\");\n    // }\n  };\n\n  const endDate = (date) => {\n    if (date > props.startDate) {\n      props.setEnddate(date);\n    } else {\n      window.alert(\"종료일을 잘못 설정했습니다.\");\n    }\n  };\n\n  // const endDate = (data) => {\n  //   props.setEnddate(data);\n  // };\n  return (\n    <React.Fragment>\n      <DateMedia>\n        <Grid>\n          <Text>기간설정</Text>\n          <Grid display=\"flex\" textAlign=\"center\" margin=\"20px auto\">\n            {/* 시작 일*/}\n            <Grid>\n              <Text>프로젝트 시작일</Text>\n              <SDatePicker\n                dateFormat=\"yyyy - MM - dd\"\n                selected={new Date(props.startDate)}\n                onChange={startDate}\n                startdate={props.startDate}\n                selectsStart\n                locale={ko}\n                minDate={new Date()}\n                placeholderText=\"프로젝트 시작일 입력\"\n              />\n            </Grid>\n            {/* 종료 일*/}\n            <Grid>\n              <Text>프로젝트 종료일</Text>\n              <SDatePicker\n                dateFormat=\"yyyy - MM - dd\"\n                selected={new Date(props.endDate)}\n                onChange={endDate}\n                startdate={props.startDate}\n                enddate={props.endDate}\n                selectsEnd\n                locale={ko}\n                minDate={new Date()}\n                placeholderText=\"프로젝트 종료일 입력\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </DateMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SDatePicker = styled(DatePicker)`\n  box-sizing: border-box;\n  width: 96%;\n  height: 40px;\n  border-radius: 10px;\n  border: 1px solid #c4c4c4;\n  color: black;\n  font-size: 16px;\n  text-align: center;\n  margin-top: 0.6rem;\n  margin-left: 8px;\n  outline: none;\n`;\n\nconst DateMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 40px;\n    font-size: 10px;\n  }\n  @media screen and (max-width: 500px) {\n    display: flex;\n    width: 340px;\n    height: 30px;\n    margin-bottom: 55px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default DateEdit;\n","// EditButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../../../elements/Index\";\n\n// EditButton의 함수형 컴포넌트를 만든다.\nconst EditButton = (props) => {\n  return (\n    <React.Fragment>\n      <EditMedia>\n        <Grid display=\"flex\" padding=\"16px\">\n          <Btn\n            onClick={() => {\n              props.editHandler();\n            }}\n          >\n            포스트수정 완료\n          </Btn>\n        </Grid>\n      </EditMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 140px;\n  height: 35px;\n  border: 1px solid #bbb4d9;\n  border-radius: 50px;\n  color: #fff;\n  background: white;\n  color: black;\n  margin: 10px auto 10px auto;\n  cursor: pointer;\n  &:hover {\n    color: white;\n    background-color: #bbb4d9;\n    border: 1px solid;\n    transition-duration: 1s;\n  }\n`;\n\nconst EditMedia = styled.div`\n  display: flex;\n  @media screen and (max-width: 600px) {\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default EditButton;\n","//PostEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { apis } from \"../lib/axios\";\nimport { postDetailActions } from \"../redux/modules/postdetail\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport makeAnimated from \"react-select/animated\";\nimport LeftBanner from \"../components/postEdit/LeftBanner\";\nimport TitleEdit from \"../components/postEdit/rightContentsEdit/TitleEdit\";\nimport StackEdit from \"../components/postEdit/rightContentsEdit/StackEdit\";\nimport TotalMemberEdit from \"../components/postEdit/rightContentsEdit/TotalMemberEdit\";\nimport StatusEdit from \"../components/postEdit/rightContentsEdit/StatusEdit\";\nimport UrlEdit from \"../components/postEdit/rightContentsEdit/UrlEdit\";\nimport ContentEdit from \"../components/postEdit/rightContentsEdit/ContentEdit\";\nimport DateEdit from \"../components/postEdit/rightContentsEdit/DateEdit\";\nimport EditButton from \"../components/postEdit/rightContentsEdit/EditButton\";\nimport Swal from \"sweetalert2\";\nimport Spinner from \"../shared/Spinner\";\n// PostEdit의 함수형 컴포넌트를 만든다.\nconst PostEdit = (props) => {\n  const dispatch = useDispatch();\n  const animatedComponents = makeAnimated();\n  const [checkPost, setCheckPost] = React.useState();\n  const [postId, setPostId] = React.useState();\n  const [title, setTitle] = React.useState(\"\");\n  const [summary, setSummary] = React.useState(\"\");\n  const [techstack, setTectstack] = React.useState([]);\n  const [totalMember, setTotalmember] = React.useState();\n  const [recruitmentMember, setRecruitmentMember] = React.useState();\n  const [projectStatus, setProjectstatus] = React.useState(\"\");\n  const [startDate, setStartdate] = React.useState(new Date());\n  const [endDate, setEnddate] = React.useState(new Date());\n  const [contents, setContents] = React.useState(\"\");\n  const [techStackList, setTest] = React.useState();\n  const [loaded, setLoaded] = React.useState(false);\n  const [chatUrl, setChatUrl] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n\n  // 수정\n  let post_id = props.match.params.id;\n  const scope_edit = () => {\n    let blank_pattern = /^\\s+|\\s+$/g;\n    if (title.replace(blank_pattern, \"\") == \"\") {\n      Swal.fire(\"제목을 다시 확인해 주세요!\", \"\", \"warning\");\n      return false;\n    }\n\n    const editcard = {\n      title: title,\n      contents: contents,\n      techStackList: techStackList,\n      totalMember: totalMember,\n      projectStatus: projectStatus,\n      startDate: startDate,\n      endDate: endDate,\n      chatUrl: chatUrl,\n    };\n    dispatch(postDetailActions.editPostAPI(post_id, editcard));\n  };\n\n  const editHandler = () => {\n    if (techstack.length === 0) {\n      Swal.fire(\"기술스택을 선택해 주세요!\", \"\", \"warning\");\n      return;\n    }\n    if (techstack.length <= 4) {\n      scope_edit();\n    } else {\n      window.alert(\"기술선택은 4개까지 선택 가능합니다.\");\n    }\n  };\n\n  React.useLayoutEffect(() => {\n    const CheckPost = async () => {\n      try {\n        const result = await apis.detailPost(post_id);\n        let setValue = result.data.data.post;\n        setCheckPost(result);\n        setTitle(setValue.title);\n        setSummary(setValue.summary);\n        setContents(setValue.contents);\n        setTectstack(\n          setValue.techStack.map((value) => ({ label: value, value }))\n        );\n        setStartdate(setValue?.startDate);\n        setEnddate(setValue.endDate);\n        setTotalmember(setValue.totalMember);\n        setProjectstatus(setValue.projectStatus);\n        setChatUrl(setValue.chatUrl);\n        setLoaded(true);\n        setLoading(false);\n      } catch (err) {\n        console.log(err.response);\n\n        setLoaded(false);\n      }\n    };\n\n    if (loaded === false) CheckPost();\n  }, []);\n\n  // Select 공통 스타일\n  const styles = {\n    control: (base, state) => ({\n      ...base,\n      boxShadow: state.isFocused ? 0 : 0,\n      borderWidth: 2,\n      borderRadius: 10,\n      marginTop: 4,\n      minHeight: 40,\n      borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      \"&:hover\": {\n        borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      },\n    }),\n  };\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          {checkPost && (\n            <Grid\n              display=\"flex\"\n              justifyContent=\"center\"\n              maxWidth=\"1920px\"\n              height=\"100%\"\n              margin=\"auto\"\n              border=\"1px solid #C4C4C4\"\n              alignItems=\"center\"\n            >\n              <LeftBanner />\n              <Grid margin=\"46px 106px 0px\" position=\"relative\">\n                <TitleMedia>\n                  <Title>게시글 수정하기</Title>\n                </TitleMedia>\n\n                <Grid margin=\"40px auto\">\n                  <TitleEdit title={title} setTitle={setTitle} />\n                  <StackEdit\n                    setTectstack={setTectstack}\n                    techstack={techstack}\n                    setTest={setTest}\n                    animatedComponents={animatedComponents}\n                    styles={styles}\n                  />\n                  <Grid>\n                    <DateEdit\n                      startDate={startDate}\n                      endDate={endDate}\n                      setStartdate={setStartdate}\n                      setEnddate={setEnddate}\n                    />\n                  </Grid>\n                  <TotalMemberEdit\n                    styles={styles}\n                    totalMember={totalMember}\n                    setTotalmember={setTotalmember}\n                  />\n                  <StatusEdit\n                    styles={styles}\n                    projectStatus={projectStatus}\n                    setProjectstatus={setProjectstatus}\n                  />\n                  <Grid>\n                    <UrlEdit chatUrl={chatUrl} setChatUrl={setChatUrl} />\n                    <ContentEdit\n                      contents={contents}\n                      setContents={setContents}\n                    />\n                    <EditButton editHandler={editHandler} />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          )}\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\n// styled-components를 사용한다.\nconst Title = styled.div`\n  color: black;\n  font-size: 32px;\n  font-weight: 800;\n`;\n\nconst Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 140px;\n  height: 35px;\n  border: 1px solid #bbb4d9;\n  border-radius: 50px;\n  color: #bbb4d9;\n  background: white;\n  margin: auto;\n  cursor: pointer;\n  &:hover {\n    color: white;\n    background-color: #bbb4d9;\n    border: 1px solid;\n    transition-duration: 1s;\n  }\n`;\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 1000px) {\n    width: 350px;\n    margin: auto;\n    text-align: center;\n  }\n`;\n\nconst ContainerMedia = styled.div`\n  @media screen and (max-width: 1000px) {\n    width: 600px;\n    margin: auto;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PostEdit;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button, Image } from \"../elements/Index\";\nimport { Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { applyCreators } from \"../redux/modules/applyProject\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { apis } from \"../lib/axios\";\nimport { useHistory } from \"react-router\";\nconst ApplyStatusModal = props => {\n  const dispatch = useDispatch();\n  const applyUsers = useSelector(state => state.apply.applyUsers);\n  const [applyedUsers, setApplyUsers] = React.useState();\n  const [acceptButton, setAcceptButton] = React.useState();\n  const { applyStatusModal, setApplyStatusModal, postId } = props;\n  const history = useHistory();\n\n  const modalClose = () => {\n    setApplyStatusModal(false);\n  };\n\n  React.useEffect(() => {\n    // console.log(applyedUsers);\n    const fetchData = async () => {\n      try {\n        const result = await apis.applyUser(postId);\n        // console.log(result);\n        setApplyUsers(result.data.data);\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n\n    // dispatch(applyCreators.applyUserAPI(postId));\n  }, [applyStatusModal, acceptButton]);\n\n  const acceptOffer = acceptUser => {\n    const acceptInfo = {\n      userId: acceptUser,\n      accept: true,\n    };\n    // console.log(acceptInfo);\n\n    const fetchData = async () => {\n      try {\n        const result = await apis.aceeptOffer(postId, acceptInfo);\n        // console.log(result);\n        setAcceptButton(result);\n        // window.alert(\"신청을 수락하였습니다.\");\n      } catch (err) {\n        // console.log(err);\n      }\n    };\n    fetchData();\n    // dispatch(applyCreators.acceptOfferAPI(postId, acceptInfo));\n  };\n\n  const cancelOffer = cancelUser => {\n    const acceptInfo = {\n      userId: cancelUser,\n      accept: false,\n    };\n    // console.log(acceptInfo);\n    dispatch(applyCreators.acceptOfferAPI(postId, acceptInfo));\n    // window.alert(\"신청을 취소하였습니다.\");\n  };\n\n  return (\n    <>\n      {applyedUsers && (\n        <Dialog\n          maxWidth={\"sm\"}\n          scroll=\"paper\"\n          open={applyStatusModal}\n          onClose={modalClose}\n        >\n          <ModalWrap>\n            <Grid\n              height=\"12%\"\n              bg=\"#17334A\"\n              position=\"relative\"\n              textAlign=\"center\"\n              padding=\"10px 0 0 0\"\n            >\n              <Grid\n                position=\"absolute\"\n                top=\"0px\"\n                right=\"10px\"\n                width=\"20px\"\n                padding=\"10px\"\n              >\n                <CloseIcon\n                  sx={{ color: \"#fff\", fontSize: 35 }}\n                  onClick={modalClose}\n                  cursor=\"pointer\"\n                />\n              </Grid>\n              <Grid\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                height=\"40px\"\n              >\n                <Text size=\"40px\" bold color=\"#fff\">\n                  신청현황\n                </Text>\n              </Grid>\n            </Grid>\n            {applyedUsers == \"\" && (\n              <Grid height=\"0%\" justifyContent=\"center\">\n                <Grid\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  width=\"70%\"\n                  textAlign=\"center\"\n                  margin=\"auto\"\n                >\n                  <Grid height=\"50%\" margin=\"40px auto\">\n                    <img width=\"100%\" src=\"/img/step9.png\" />\n                  </Grid>\n                  <Grid margin=\"250px 0\">지원자가 아직 없습니다!</Grid>\n                </Grid>\n              </Grid>\n            )}\n\n            <Grid display=\"flex\" height=\"85%\" justifyContent=\"center\">\n              <Grid width=\"90%\" margin=\"10px 0\">\n                {applyedUsers.map((user, idx) => (\n                  <Grid\n                    margin=\"10px auto\"\n                    height=\"auto\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-around\"\n                    padding=\"10px\"\n                    width=\"90%\"\n                    key={user.userId}\n                    {...user}\n                  >\n                    <Grid\n                      margin=\"auto\"\n                      width=\"30%\"\n                      _onClick={() => {\n                        history.push(`/mypage/${user.userId}`);\n                      }}\n                    >\n                      {applyedUsers[idx].userPropensityType === \"LVG\" && (\n                        <UserImg src=\"/img/호랑이.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"LVP\" && (\n                        <UserImg src=\"/img/늑대.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"LHG\" && (\n                        <UserImg src=\"/img/여우.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"LHP\" && (\n                        <UserImg src=\"/img/판다.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FVG\" && (\n                        <UserImg src=\"/img/토끼.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FVP\" && (\n                        <UserImg src=\"/img/개.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FHG\" && (\n                        <UserImg src=\"/img/고양이.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FHP\" && (\n                        <UserImg src=\"/img/물개.png\"></UserImg>\n                      )}\n                    </Grid>\n                    <Grid height=\"100%\" width=\"80%\">\n                      <Wrap>\n                        <Grid\n                          margin=\"auto\"\n                          height=\"50px\"\n                          display=\"flex\"\n                          justifyContent=\"space-between\"\n                        >\n                          <Grid height=\"100%\" textAlign=\"center\">\n                            <Grid bg=\"#eee\" height=\"50%\">\n                              닉네임\n                            </Grid>\n                            <Grid bg=\"#aaa\" height=\"50%\">\n                              타입\n                            </Grid>\n                          </Grid>\n                          <Grid margin=\"auto\" height=\"100%\" textAlign=\"center\">\n                            <Grid height=\"50%\">\n                              {applyedUsers[idx].nickname}\n                            </Grid>\n                            <Grid height=\"50%\">\n                              {applyedUsers[idx].userPropensityType}\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Grid display=\"flex\">\n                          <Grid margin=\"auto\" height=\"auto\" width=\"80%\">\n                            <Button\n                              common\n                              isValue={applyedUsers[idx].userId}\n                              _onClick={e => {\n                                // console.log(e);\n                                acceptOffer(e.target.value);\n                              }}\n                            >\n                              수락\n                            </Button>\n                          </Grid>\n                          <Grid\n                            margin=\"auto auto auto 3px\"\n                            height=\"50px\"\n                            width=\"80%\"\n                          >\n                            <Button\n                              common\n                              isValue={applyedUsers[idx].userId}\n                              _onClick={e => {\n                                cancelOffer(e.target.value);\n                              }}\n                            >\n                              취소\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </Wrap>\n                      <CommentBubble>{applyedUsers[idx].comment}</CommentBubble>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n          </ModalWrap>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 500px;\n  @media screen and (max-width: 400px) {\n    width: 300px;\n  } ;\n`;\nconst CommentBubble = styled.div`\n  position: relative;\n  background: #f1f9ff;\n  height: auto;\n  /* border: #b29cf4 solid 1px; */\n  border-radius: 10px;\n  padding: 0 12px;\n  ::after {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-width: 10px 15px 0;\n    border-color: #f1f9ff transparent;\n    display: block;\n    width: 0;\n    z-index: 1;\n    top: 10px;\n    left: -15px;\n  }\n`;\n\nconst UserImg = styled.img`\n  object-fit: cover;\n  width: 90%;\n  border-radius: 12px;\n  background-color: #ececec;\n  cursor: pointer;\n`;\n\nconst Wrap = styled.div`\n  display: flex;\n  height: 60%;\n  margin: auto;\n  @media screen and (max-width: 400px) {\n    display: flex;\n    flex-direction: column;\n    height: 40%;\n  } ;\n`;\n\nexport default ApplyStatusModal;\n","// LeftBanner.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport bannerImg from \"../../images/PostDetail.png\";\n\n// LeftBanner의 함수형 컴포넌트를 만든다.\nconst LeftBanner = (props) => {\n  return (\n    <React.Fragment>\n      <SideBarImg src={bannerImg} />\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SideBarImg = styled.img`\n  width: 43%;\n  max-width: 100%;\n  height: 1260px;\n  @media screen and (max-width: 1600px) {\n    max-width: 80%;\n  }\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default LeftBanner;\n","// TitleDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// TitleDetail의 함수형 컴포넌트를 만든다.\nconst TitleDetail = props => {\n  return (\n    <React.Fragment>\n      <Grid margin=\"60px auto auto\">\n        <TitleMedia>\n          <Text size=\"40px\" bold>\n            {props.passedData?.title}\n          </Text>\n        </TitleMedia>\n        <Line />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Line = styled.hr`\n  width: 100%;\n`;\n\nconst TitleMedia = styled.p`\n  @media screen and (max-width: 376px) {\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TitleDetail;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport { Grid, Input, Text, Button, Image } from \"../../elements/Index\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { applyCreators } from \"../../redux/modules/applyProject\";\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { apis } from \"../../lib/axios\";\r\nconst ExileUserModal = (props) => {\r\n  const dispatch = useDispatch();\r\n  const applyUsers = useSelector((state) => state.apply.applyUsers);\r\n  const [applyedUsers, setApplyUsers] = React.useState();\r\n  const [acceptButton, setAcceptButton] = React.useState();\r\n  const { applyStatusModal, setApplyStatusModal, postId, postUserId } = props;\r\n\r\n  const modalClose = () => {\r\n    setApplyStatusModal(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // console.log(applyedUsers);\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await apis.serachTeamUser(postId);\r\n        // console.log(result);\r\n        setApplyUsers(result.data.data);\r\n      } catch (err) {\r\n        // console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    // dispatch(applyCreators.applyUserAPI(postId));\r\n  }, [applyStatusModal, acceptButton]);\r\n\r\n  const exile = (userId) => {\r\n    // console.log(userId);\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await apis.exileUser(postId, userId);\r\n        // console.log(result);\r\n        setAcceptButton(result);\r\n      } catch (err) {\r\n        // console.log(err.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {applyedUsers && (\r\n        <Dialog\r\n          maxWidth={\"sm\"}\r\n          scroll=\"paper\"\r\n          open={applyStatusModal}\r\n          onClose={modalClose}\r\n        >\r\n          <ModalWrap>\r\n            <Grid\r\n              height=\"10%\"\r\n              bg=\"#17334A\"\r\n              position=\"relative\"\r\n              textAlign=\"center\"\r\n              padding=\"10px 0 10px 0\"\r\n            >\r\n              <Grid\r\n                position=\"absolute\"\r\n                top=\"0px\"\r\n                right=\"10px\"\r\n                width=\"20px\"\r\n                padding=\"10px\"\r\n              >\r\n                <CloseIcon\r\n                  sx={{ color: \"#fff\", fontSize: 35 }}\r\n                  fontSize=\"large\"\r\n                  cursor=\"pointer\"\r\n                  onClick={modalClose}\r\n                />\r\n              </Grid>\r\n              <Text size=\"40px\" bold color=\"#fff\">\r\n                팀원강퇴\r\n              </Text>\r\n            </Grid>\r\n            {applyedUsers == \"\" && (\r\n              <Grid height=\"0%\" justifyContent=\"center\">\r\n                <Grid\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  width=\"70%\"\r\n                  textAlign=\"center\"\r\n                  margin=\"auto\"\r\n                >\r\n                  <Grid height=\"50%\">\r\n                    <img width=\"100%\" src=\"/img/step9.png\" />\r\n                  </Grid>\r\n                  <Grid margin=\"250px 0\">지원자가 아직 없습니다!</Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid display=\"flex\" height=\"85%\" justifyContent=\"center\">\r\n              <Grid width=\"90%\" margin=\"10px 0\">\r\n                {applyedUsers.map((user, idx) => (\r\n                  <Grid\r\n                    margin=\"10px auto\"\r\n                    height=\"100px\"\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"space-around\"\r\n                    padding=\"10px\"\r\n                    width=\"90%\"\r\n                    key={user.userId}\r\n                    {...user}\r\n                  >\r\n                    <Grid margin=\"auto\" width=\"30%\">\r\n                      {applyedUsers[idx].userPropensityType === \"LVG\" && (\r\n                        <UserImg src=\"/img/호랑이.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"LVP\" && (\r\n                        <UserImg src=\"/img/늑대.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"LHG\" && (\r\n                        <UserImg src=\"/img/여우.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"LHP\" && (\r\n                        <UserImg src=\"/img/판다.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FVG\" && (\r\n                        <UserImg src=\"/img/토끼.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FVP\" && (\r\n                        <UserImg src=\"/img/개.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FHG\" && (\r\n                        <UserImg src=\"/img/고양이.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FHP\" && (\r\n                        <UserImg src=\"/img/물개.png\"></UserImg>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid height=\"100%\" width=\"80%\">\r\n                      <Grid display=\"flex\" height=\"60%\" margin=\"auto\">\r\n                        <Grid\r\n                          margin=\"auto\"\r\n                          height=\"50px\"\r\n                          display=\"flex\"\r\n                          justifyContent=\"space-between\"\r\n                        >\r\n                          <Grid height=\"100%\" textAlign=\"center\">\r\n                            <Texts bg=\"#eee\" height=\"50%\">\r\n                              닉네임\r\n                            </Texts>\r\n                            <Texts bg=\"#aaa\" height=\"50%\">\r\n                              타입\r\n                            </Texts>\r\n                          </Grid>\r\n                          <Grid margin=\"auto\" height=\"100%\" textAlign=\"center\">\r\n                            <Texts height=\"50%\">\r\n                              {applyedUsers[idx].nickname}\r\n                            </Texts>\r\n                            <Texts height=\"50%\">\r\n                              {applyedUsers[idx].userPropensityType}\r\n                            </Texts>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid margin=\"auto\" height=\"50px\" width=\"80%\">\r\n                          <Grid margin=\"auto 50%\" width=\"50px\">\r\n                            {applyedUsers[idx].userId !== postUserId && (\r\n                              <Button\r\n                                common\r\n                                isValue={applyedUsers[idx].userId}\r\n                                _onClick={(e) => {\r\n                                  window.confirm(\"추방하시겠습니까?\");\r\n                                  exile(e.target.value);\r\n                                }}\r\n                              >\r\n                                추방\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid\r\n                          margin=\"auto auto auto 3px\"\r\n                          height=\"50px\"\r\n                          width=\"80%\"\r\n                        ></Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </ModalWrap>\r\n        </Dialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ModalWrap = styled.div`\r\n  width: 550px;\r\n  height: 500px;\r\n  @media (max-width: 375px) {\r\n    width: 300px;\r\n  }\r\n`;\r\nconst Texts = styled.p`\r\n  height: 50%;\r\n  width: 50px;\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 9px;\r\n  }\r\n`;\r\nconst CommentBubble = styled.div`\r\n  position: relative;\r\n  background: #f1f9ff;\r\n  height: 40%;\r\n  /* border: #b29cf4 solid 1px; */\r\n  border-radius: 10px;\r\n  padding: 0 12px;\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    border-style: solid;\r\n    border-width: 10px 15px 0;\r\n    border-color: #f1f9ff transparent;\r\n    display: block;\r\n    width: 0;\r\n    z-index: 1;\r\n    top: 10px;\r\n    left: -15px;\r\n  }\r\n`;\r\n\r\nconst UserImg = styled.img`\r\n  object-fit: cover;\r\n  width: 90%;\r\n  border-radius: 12px;\r\n  background-color: #ececec;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default ExileUserModal;\r\n","// ProjectJoinUser.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Text } from \"../elements/Index\";\nimport { useHistory } from \"react-router\";\nimport ImgType from \"../shared/ImgType\";\nimport styled from \"styled-components\";\n\n// ProjectJoinUser의 함수형 컴포넌트를 만든다.\nconst ProjectJoinUser = props => {\n  const history = useHistory();\n  const goToMypage = userId => {\n    history.push(`/mypage/${userId}`);\n  };\n  return (\n    <React.Fragment>\n      <Grid\n        textAlign=\"center\"\n        height=\"120px\"\n        width=\"80px\"\n        margin=\"0 11px 0 0\"\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <JoinUserMedia>\n          <Grid textAlign=\"center\">\n            <Writer number={props.number}>게시자</Writer>\n\n            <Grid\n              width=\"60px\"\n              height=\"60px\"\n              borderRadius=\"50%\"\n              backgroundColor=\"#C4C4C4\"\n              margin=\"6px 0px\"\n            >\n              <ImgType\n                type={props.userPropensityType}\n                cursor=\"pointer\"\n                _onClick={() => {\n                  goToMypage(props.userId);\n                }}\n              ></ImgType>\n\n              <Text size=\"12px\">{props.nickname}</Text>\n              <Grid height=\"30%\">\n                <Text size=\"12px\">({props.userPropensityType})</Text>\n              </Grid>\n            </Grid>\n          </Grid>\n        </JoinUserMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\nconst Writer = styled.p`\n  opacity: ${props => (props.number === 0 ? 1 : 0)};\n  width: 60px;\n  margin: auto auto auto 0;\n  height: 10px;\n`;\n\nconst JoinUserMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ProjectJoinUser;\n","// ApplicantDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport ProjectJoinUser from \"../../ProjectJoinUser\";\n\nconst ApplicantDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid margin=\"4px 0px 0px 0px\">\n        {/* <Grid width=\"100%\" display=\"flex\">\n          <Grid width=\"80px\" textAlign=\"center\">\n            <Text size=\"18px\" bold>\n              게시자\n            </Text>\n          </Grid>\n\n          <Grid width=\"80px\" margin=\"0 0 0 10px\" textAlign=\"center\">\n            <Text size=\"18px\" bold>\n              참여자\n            </Text>\n          </Grid>\n        </Grid> */}\n\n        <Grid\n          display=\"flex\"\n          margin=\"6px 0px 0px 0px\"\n          overflowX=\"auto\"\n          overflowY=\"none\"\n        >\n          {props.passdedMenber?.map((item, number) => (\n            <ProjectJoinUser key={item.userId} {...item} number={number} />\n          ))}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ApplicantDetail;\n","// StackDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// StackDetail의 함수형 컴포넌트를 만든다..\nconst StackDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\" margin=\"20px auto\">\n        <Text margin=\"auto 10px auto 0px\">기술스택</Text>\n        <StackMedia>\n          {props.passedData?.techStack.map((item, index) => {\n            return (\n              <Text margin=\"auto 5px\" key={index}>\n                <StackBox>{item}</StackBox>\n              </Text>\n            );\n          })}\n        </StackMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst StackBox = styled.div`\n  color: white;\n  background-color: #554475;\n  border: 1px solid #554475;\n  border-radius: 10px;\n  padding: 4px 10px;\n  text-align: center;\n`;\n\nconst StackMedia = styled.div`\n  display: flex;\n  @media screen and (max-width: 600px) {\n    font-size: 10px;\n    width: 120px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StackDetail;\n","// DateDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// DateDetail의 함수형 컴포넌트를 만든다.\nconst DateDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\" margin=\"20px 0 0 0px\">\n        <DateMedia>\n          <Grid display=\"flex\">\n            <Text margin=\"auto 10px auto 0px\">프로젝트 기간</Text>\n\n            <DateBox>\n              {props.passedData?.startDate} ~ {props.passedData?.endDate}\n            </DateBox>\n          </Grid>\n        </DateMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst DateBox = styled.div`\n  color: black;\n  padding: 4px 10px;\n  border: 1px solid #554475;\n  border-radius: 10px;\n  text-align: center;\n`;\n\nconst DateMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 300px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default DateDetail;\n","// StatusDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// StatusDetail의 함수형 컴포넌트를 만든다.\nconst StatusDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\">\n        <StatusMedia>\n          <Text margin=\"0px 10px auto 0px\">프로젝트 상태</Text>\n          {props.passedData?.projectStatus === \"모집중\" && (\n            <Text\n              bg=\"#2699FB\"\n              color=\"white\"\n              border=\"1px solid #2699FB\"\n              borderRadius=\"50px\"\n              padding=\"4px\"\n            >\n              {props.passedData?.projectStatus}\n            </Text>\n          )}\n          {props.passedData?.projectStatus === \"진행중\" && (\n            <Text\n              bg=\"#15B915\"\n              color=\"white\"\n              border=\"1px solid #15B915\"\n              borderRadius=\"50px\"\n              padding=\"4px\"\n            >\n              {props.passedData?.projectStatus}\n            </Text>\n          )}\n          {props.passedData?.projectStatus === \"종료\" && (\n            <Text\n              bg=\"#f9a8a8\"\n              color=\"white\"\n              border=\"1px solid #f9a8a8\"\n              borderRadius=\"50px\"\n              padding=\"4px\"\n            >\n              {props.passedData?.projectStatus}\n            </Text>\n          )}\n        </StatusMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst StatusMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    font-size: 10px;\n    width: 360px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StatusDetail;\n","// TitleDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Linkify from \"react-linkify\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport { lightBlue } from \"@material-ui/core/colors\";\n\n// ContentDetail의 함수형 컴포넌트를 만든다.\nconst UrlDetail = (props) => {\n  return (\n    <React.Fragment>\n      <UrlMedia>\n        <Grid margin=\"20px auto auto\">\n          <Text>오픈채팅 URL</Text>\n\n          <Text\n            _onClick={() => {\n              window.open(`${props.passedData?.chatUrl}`, \"_blank\");\n            }}\n            color=\"#554475\"\n            cursor=\"pointer\"\n            decoration=\"none\"\n          >\n            &nbsp; {props.passedData?.chatUrl}\n          </Text>\n        </Grid>\n      </UrlMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst UrlMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 100px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default UrlDetail;\n","// TitleDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Linkify from \"react-linkify\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// ContentDetail의 함수형 컴포넌트를 만든다.\nconst ContentDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid margin=\"20px auto auto\">\n        <ContentMedia>\n          <Text>프로젝트 설명</Text>\n\n          <Linkify>\n            <Content>{props.passedData?.contents}</Content>\n          </Linkify>\n        </ContentMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Content = styled.p`\n  width: 100%;\n  height: 500px;\n  padding: 10px;\n  border: 1px solid #c4c4c4;\n  border-radius: 5px;\n  font-weight: 60;\n  line-height: 30px;\n  white-space: pre-line;\n  overflow: scroll;\n  @media screen and (max-width: 600px) {\n    height: 300px;\n  }\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    font-size: 10px;\n    width: 320px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ContentDetail;\n","// Bookmark.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../../../elements/Index\";\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\nimport BookmarkBorderIcon from \"@mui/icons-material/BookmarkBorder\";\n\n// Bookmark의 함수형 컴포넌트를 만든다.\nconst Bookmark = (props) => {\n  return (\n    <React.Fragment>\n      <BookMarkMedia>\n        {props.userId !== props.postUserId && (\n          <Grid\n            width=\"50px\"\n            position=\"absolute\"\n            top=\"0px\"\n            right=\"10px\"\n            height=\"50px\"\n          >\n            <Grid _onClick={props.ToggleBookMark} cursor=\"pointer\">\n              {!props.passedData?.bookmarkChecked ? (\n                <BookmarkBorderIcon sx={{ color: \"#17334A\", fontSize: 60 }} />\n              ) : (\n                <BookmarkIcon sx={{ color: \"#17334A\", fontSize: 60 }} />\n              )}\n            </Grid>\n          </Grid>\n        )}\n      </BookMarkMedia>\n    </React.Fragment>\n  );\n};\n\nconst BookMarkMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 10px;\n    height: 10px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default Bookmark;\n","// ApplicantButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Button } from \"../../../elements/Index\";\nimport ApplyUserModal from \"../../ApplyUserModal\";\n\n// ApplicantButton의 함수형 컴포넌트를 만든다.\nconst ApplicantButton = (props) => {\n  return (\n    <React.Fragment>\n      <ContentMedia>\n        {props.passedData?.projectStatus === \"모집중\" && (\n          <Grid>\n            {props.isme === \"user\" && (\n              <>\n                <Button\n                  common\n                  width=\"120px\"\n                  isValue=\"apply\"\n                  _onClick={(e) => {\n                    // console.log(e);\n                    props.applyUserModalOpen(e.target.value);\n                  }}\n                  margin=\"auto 10px\"\n                  border=\"1px solid #554475\"\n                  borderRadius=\"50px\"\n                >\n                  지원신청\n                </Button>\n              </>\n            )}\n\n            {props.isme === \"applicant\" && (\n              <Button\n                common\n                width=\"120px\"\n                isValue=\"cancel\"\n                _onClick={(e) => {\n                  props.applyUserModalOpen(e.target.value);\n                }}\n                width=\"120px\"\n              >\n                지원취소\n              </Button>\n            )}\n          </Grid>\n        )}\n        <ApplyUserModal\n          applyUserModalOpen={props.applyUserModalOpen}\n          applyUserModal={props.applyUserModal}\n          setApplyUserModal={props.setApplyUserModal}\n          applyValue={props.applyValue}\n          postId={props.post_id}\n          passdedMenber={props.passdedMenber}\n          statusCheck={props.statusCheck}\n        />\n        {props.passedData?.projectStatus === \"모집중\" &&\n          props.passedUserStatus === \"member\" && (\n            <Grid>\n              {/* <Button\n                common\n                width=\"120px\"\n                isValue=\"memberLiked\"\n                _onClick={(e) => {\n                  props.applyUserModalOpen(e.target.value);\n                }}\n                margin=\"auto 10px\"\n                border=\"1px solid #554475\"\n                borderRadius=\"50px\"\n              >\n                지원신청\n              </Button> */}\n              {props.isme === \"member\" && (\n                <Button\n                  common\n                  width=\"120px\"\n                  isValue=\"teamExit\"\n                  _onClick={(e) => {\n                    props.applyUserModalOpen(e.target.value);\n                  }}\n                >\n                  팀탈퇴\n                </Button>\n              )}\n            </Grid>\n          )}\n      </ContentMedia>\n    </React.Fragment>\n  );\n};\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    width: 325px;\n    margin: 0px 0px 60px;\n  }\n  @media screen and (max-width: 500px) {\n    width: 325px;\n    margin: 0px 0px 100px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ApplicantButton;\n","// PosterButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Button } from \"../../../elements/Index\";\nimport ApplyUserModal from \"../../ApplyUserModal\";\nimport { useHistory } from \"react-router\";\nimport { apis } from \"../../../lib/axios\";\n\n// PosterButton의 함수형 컴포넌트를 만든다..\nconst PosterButton = (props) => {\n  const history = useHistory();\n\n  const DeletePost = async () => {\n    try {\n      const deletePost = await apis.deletePost(props.post_id);\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\" justifyContent=\"center\">\n        <ContentMedia>\n          <Grid width=\"0px\" height=\"0px\">\n            <ApplyUserModal\n              applyUserModal={props.applyUserModal}\n              setApplyUserModal={props.setApplyUserModal}\n              applyValue={props.applyValue}\n              postId={props.post_id}\n              passdedMenber={props.passdedMenber}\n              statusCheck={props.statusCheck}\n            />\n          </Grid>\n          {props.passedData?.projectStatus === \"모집중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              _onClick={() => {\n                props.edit_status(\"진행중\");\n              }}\n            >\n              모집완료\n            </Button>\n          )}\n\n          {props.passedData?.projectStatus === \"종료\" && <div></div>}\n          {props.passedData?.projectStatus === \"진행중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              isValue=\"end\"\n              _onClick={(e) => {\n                props.applyUserModalOpen(e.target.value);\n              }}\n            >\n              마감하기\n            </Button>\n          )}\n          {props.passedData?.projectStatus === \"진행중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              _onClick={() => {\n                history.push({ pathname: `/postedit/${props.post_id}` });\n              }}\n            >\n              포스트수정\n            </Button>\n          )}\n          {props.passedData?.projectStatus === \"모집중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              _onClick={() => {\n                history.push({ pathname: `/postedit/${props.post_id}` });\n              }}\n            >\n              포스트수정\n            </Button>\n          )}\n          {props.passedData?.projectStatus === \"종료\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              isValue=\"submit\"\n              _onClick={(e) => {\n                props.applyUserModalOpen(e.target.value);\n              }}\n            >\n              깃허브제출\n            </Button>\n          )}\n          <Button\n            common\n            width=\"140px\"\n            height=\"35px\"\n            _onClick={() => {\n              DeletePost();\n              window.alert(\"삭제되었습니다.\");\n            }}\n          >\n            포스트삭제\n          </Button>\n        </ContentMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst ButtonMedia = styled.button`\n  @media screen and (max-width: 600px) {\n    display: flex;\n    width: 200px;\n    height: 50px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    width: 300px;\n    height: 50px;\n    margin-bottom: 40px;\n  }\n  @media screen and (max-width: 800px) {\n    display: flex;\n    width: 300px;\n    font-size: 10px;\n    margin-bottom: 60px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PosterButton;\n","// TotalMemberDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// TotalMemberDetail의 함수형 컴포넌트를 만든다\nconst TotalMemberDetail = (props) => {\n  return (\n    <React.Fragment>\n      <TotalMedia>\n        <Grid display=\"flex\">\n          <Text margin=\"0px 10px 20px 0px\">프로젝트 인원</Text>\n          <Text color=\"#554475\">{props.passedData?.totalMember}명</Text>\n        </Grid>\n      </TotalMedia>\n    </React.Fragment>\n  );\n};\n\nconst TotalMedia = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 100px;\n    font-size: 10px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TotalMemberDetail;\n","// PostDetail.js\n/* eslint-disable */\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { apis } from \"../lib/axios\";\nimport { postActions } from \"../redux/modules/post\";\nimport { Grid, Button, Text } from \"../elements/Index\";\nimport Swal from \"sweetalert2\";\nimport { pageCheckAction } from \"../redux/modules/pageCheck\";\n\nimport ApplyStatusModal from \"../components/ApplyStatusModal\";\nimport LeftBanner from \"../components/postDetail/leftBanner\";\nimport TitleDetail from \"../components/postDetail/rightContents/TitleDetail\";\nimport ExileUserModal from \"../components/modal/ExileUserModal\";\nimport ApplicantDetail from \"../components/postDetail/rightContents/ApplicantDetail\";\nimport StackDetail from \"../components/postDetail/rightContents/StackDetail\";\nimport DateDetail from \"../components/postDetail/rightContents/DateDetail\";\nimport StatusDetail from \"../components/postDetail/rightContents/StatusDetail\";\nimport UrlDetail from \"../components/postDetail/rightContents/UrlDetail\";\nimport ContentDetail from \"../components/postDetail/rightContents/ContentDetail\";\nimport BookMark from \"../components/postDetail/rightContents/BookMark\";\nimport ApplicantButton from \"../components/postDetail/rightContents/ApplicantButton\";\nimport PosterButton from \"../components/postDetail/rightContents/PosterButton\";\nimport TotalMemberDetail from \"../components/postDetail/rightContents/TotalMemberDetail\";\nimport Spinner from \"../shared/Spinner\";\n\n// PostDetail의 함수형 컴포넌트를 만든다\nconst PostDetail = (props) => {\n  const dispatch = useDispatch();\n  const [checkPost, setCheckPost] = React.useState();\n  const [bookmark, setBookmark] = React.useState(false);\n  const [applyStatusModal, setApplyStatusModal] = React.useState(false); //신청현황\n  const [applyUserModal, setApplyUserModal] = React.useState(false); //지원취소/팀탈퇴/프로젝트마감\n  const [exileStatusModal, setExileStatusModal] = React.useState(false); //강퇴\n  const [recruitmentFinish, setRecruitmentFinish] = React.useState(); // 모집완료 체크 for리렌더링\n  const [projectStatus, setProjectStatus] = React.useState();\n  const [applyValue, setApplyValue] = React.useState();\n  const [isme, setIsme] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n  const applyStatusModalOpen = () => {\n    setApplyStatusModal(true);\n    // setApplyStatusModal(!applyStatusModal);\n  };\n\n  const exileStatusModalOpen = () => {\n    setExileStatusModal(true);\n  };\n\n  const applyUserModalOpen = (value) => {\n    setApplyValue(value);\n    setApplyUserModal(true);\n    // setApplyUserModal(!applyUserModal);\n  };\n\n  const statusCheck = (value) => {\n    // console.log(value);\n    setProjectStatus(value);\n    // console.log(value);\n  };\n\n  const goFrontPage = () => {\n    {\n      passedData?.frontUrl !== null && window.open(passedData?.frontUrl);\n    }\n  };\n\n  const goBackPage = () => {\n    {\n      passedData?.frontUrl !== null && window.open(passedData?.backUrl);\n    }\n  };\n\n  // 상태변경\n  const edit_status = (data) => {\n    const editstatus = {\n      projectStatus: data,\n    };\n    const statusDoing = async () => {\n      try {\n        const result = await apis.statusPost(post_id, editstatus);\n        setRecruitmentFinish(!recruitmentFinish);\n        Swal.fire(\"모집 완료 되었습니다!\", \"\", \"success\");\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    statusDoing();\n  };\n\n  let post_id = props.match.params.id;\n  const userId = useSelector((state) => state.user.userId); //로그인 유저아이디\n  const postUserId = checkPost?.data.data.post.userId;\n  const passedData = checkPost?.data[\"data\"].post;\n  const passedUserStatus = checkPost?.data[\"data\"].userStatus;\n  const passdedMenber = checkPost?.data[\"data\"].members;\n\n  React.useEffect(() => {\n    dispatch(postActions.isMainPage(false));\n    dispatch(postActions.whatPage(\"postDetail\"));\n    const CheckPost = async () => {\n      try {\n        const result = await apis.detailPost(post_id);\n        setCheckPost(result);\n        // console.log(result);\n        setIsme(result.data.data.userStatus);\n        setProjectStatus(result.data.data.post.projectStatus);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    CheckPost();\n    // dispatch(pageCheckAction.getPageCheck(`/postdetail/${post_id}`));\n  }, [\n    bookmark,\n    applyStatusModal,\n    recruitmentFinish,\n    exileStatusModal,\n    applyUserModal,\n    projectStatus,\n    applyValue,\n  ]);\n\n  //북마크 토글\n  const ToggleBookMark = () => {\n    const bookMark = async () => {\n      try {\n        const result = await apis.bookMarkChecked(post_id);\n        setBookmark(!bookmark);\n      } catch (err) {\n        console.log(err.response);\n        Swal.fire(\"로그인이 필요합니다!\", \"\", \"warning\");\n      }\n    };\n    bookMark();\n  };\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Grid\n          display=\"flex\"\n          justifyContent=\"center\"\n          maxWidth=\"1920px\"\n          height=\"100%\"\n          border=\"1px solid #C4C4C4\"\n          margin=\"auto\"\n        >\n          <LeftBanner />\n\n          <Grid margin=\"46px 106px 0px\" position=\"relative\">\n            <ContainerMedia>\n              <BookMark\n                userId={userId}\n                postUserId={postUserId}\n                ToggleBookMark={ToggleBookMark}\n                passedData={passedData}\n              />\n              <TitleDetail passedData={passedData} />\n              <Grid margin=\"20px auto\">\n                <Grid display=\"flex\">\n                  <ApplicantDetail passdedMenber={passdedMenber} />\n                </Grid>\n                <Grid margin=\"10px auto \">\n                  {userId === postUserId &&\n                    passedData?.projectStatus === \"모집중\" && (\n                      <Grid position=\"relative\" width=\"100%\">\n                        <Grid\n                          position=\"absolute\"\n                          right=\"20px\"\n                          width=\"120px\"\n                          padding=\"10px\"\n                        >\n                          <ApplyStatusModal\n                            applyStatusModal={applyStatusModal}\n                            setApplyStatusModal={setApplyStatusModal}\n                            postId={post_id}\n                          />\n                          <ExileUserModal\n                            applyStatusModal={exileStatusModal}\n                            setApplyStatusModal={setExileStatusModal}\n                            postId={post_id}\n                            postUserId={postUserId}\n                          ></ExileUserModal>\n                        </Grid>\n                      </Grid>\n                    )}\n                  <Grid>\n                    <FlexMedia display=\"flex\">\n                      <DateDetail passedData={passedData} />\n                      <StackDetail passedData={passedData} />\n                    </FlexMedia>\n                  </Grid>\n                  <Grid>\n                    <Grid display=\"flex\">\n                      <Grid>\n                        <TotalMemberDetail passedData={passedData} />\n                      </Grid>\n                      <Grid>\n                        <FlexMedia>\n                          {passedData?.projectStatus === \"종료\" &&\n                            passedData?.frontUrl !== \"null\" && (\n                              <Grid\n                                display=\"flex\"\n                                width=\"200px\"\n                                margin=\"0px 0px 5px\"\n                                alignItems=\"center\"\n                              >\n                                <Grid>\n                                  <Text>Frontend</Text>\n                                </Grid>\n                                <Grid>\n                                  <UrlButton\n                                    onClick={() => {\n                                      goFrontPage();\n                                    }}\n                                  >\n                                    프론트URL\n                                  </UrlButton>\n                                </Grid>\n                              </Grid>\n                            )}\n                          {passedData?.projectStatus === \"종료\" &&\n                            passedData?.backUrl !== \"null\" && (\n                              <Grid\n                                display=\"flex\"\n                                width=\"200px\"\n                                alignItems=\"center\"\n                              >\n                                <Grid>\n                                  <Text>Backend</Text>\n                                </Grid>\n                                <Grid>\n                                  <Grid>\n                                    <UrlButton\n                                      onClick={() => {\n                                        goBackPage();\n                                      }}\n                                    >\n                                      백엔드URL\n                                    </UrlButton>\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                            )}\n                        </FlexMedia>\n                        {userId === postUserId &&\n                          passedData?.projectStatus === \"모집중\" && (\n                            <Grid\n                              display=\"flex\"\n                              width=\"180px\"\n                              margin=\"auto 0 auto auto\"\n                              justifyContent=\"flex-end\"\n                            >\n                              <ButtonMedia>\n                                <Button\n                                  postion=\"absolute\"\n                                  common\n                                  _onClick={applyStatusModalOpen}\n                                >\n                                  신청 현황\n                                </Button>\n                                <Button\n                                  postion=\"absolute\"\n                                  common\n                                  _onClick={exileStatusModalOpen}\n                                >\n                                  팀원 강퇴\n                                </Button>\n                              </ButtonMedia>\n                            </Grid>\n                          )}\n                      </Grid>\n                    </Grid>\n                    <StatusDetail passedData={passedData} />\n                    <UrlDetail passedData={passedData} />\n                    <ContentDetail passedData={passedData} />\n                  </Grid>\n\n                  <Grid>\n                    {userId === postUserId ? (\n                      <PosterButton\n                        passedData={passedData}\n                        applyUserModalOpen={applyUserModalOpen}\n                        applyUserModal={applyUserModal}\n                        setApplyUserModal={setApplyUserModal}\n                        applyValue={applyValue}\n                        post_id={post_id}\n                        passdedMenber={passdedMenber}\n                        edit_status={edit_status}\n                        statusCheck={statusCheck}\n                      />\n                    ) : (\n                      <Grid textAlign=\"center\">\n                        <ApplicantButton\n                          passedData={passedData}\n                          isme={isme}\n                          applyUserModalOpen={applyUserModalOpen}\n                          applyUserModal={applyUserModal}\n                          setApplyUserModal={setApplyUserModal}\n                          applyValue={applyValue}\n                          post_id={post_id}\n                          passdedMenber={passdedMenber}\n                          passedUserStatus={passedUserStatus}\n                          statusCheck={statusCheck}\n                        />\n                      </Grid>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </ContainerMedia>\n          </Grid>\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n};\nconst ContainerMedia = styled.div`\n  @media screen and (max-width: 500px) {\n    padding: 10px;\n  }\n`;\n\nconst ButtonMedia = styled.p`\n  display: flex;\n  margin: auto;\n  width: 90%;\n  @media screen and (max-width: 1500px) {\n    display: flex;\n    width: 90%;\n    margin: auto;\n  }\n`;\n\nconst FlexMedia = styled.div`\n  display: flex;\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    font-size: 2px;\n  }\n`;\n\nconst UrlMedia = styled.div`\n  display: flex;\n  @media screen and (max-width: 600px) {\n    font-size: 2px;\n    width: 120px;\n  }\n`;\n\nconst UrlButton = styled.button`\n  width: 100px;\n  height: 23px;\n  font-size: 15px;\n  margin: auto 10px;\n  padding: 0 0 2px 0;\n  border: 1px solid #554475;\n  border-radius: 4px;\n  color: white;\n  background-color: #554475;\n  cursor: pointer;\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PostDetail;\n","/* eslint-disable */\r\nimport Prism from \"prismjs\";\r\n// 여기 css를 수정해서 코드 하이라이팅 커스텀 가능\r\nimport \"prismjs/themes/prism.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\n\r\nimport \"@toast-ui/editor-plugin-code-syntax-highlight/dist/toastui-editor-plugin-code-syntax-highlight.css\";\r\nimport codeSyntaxHighlight from \"@toast-ui/editor-plugin-code-syntax-highlight\";\r\n\r\nimport \"tui-color-picker/dist/tui-color-picker.css\";\r\nimport \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\r\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\r\nimport React, { useState, useRef, createRef } from \"react\";\r\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\r\nimport { apis } from \"../lib/axios\";\r\nimport { result } from \"lodash\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { history } from \"../redux/configureStore\";\r\n\r\nexport default function Writer(props) {\r\n  const dispatch = useDispatch();\r\n  // console.log(props);\r\n  // const editorRef = createRef();\r\n  const editorRef = useRef();\r\n\r\n  const [progress, setProgress] = useState(0);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imgBase64, setImgBase64] = React.useState([]); // 파일 base64\r\n  const [imgData, setImageData] = React.useState();\r\n  const [imgurl, setImgurl] = React.useState();\r\n  const [text, setText] = React.useState();\r\n  const [mydata, setMydata] = React.useState();\r\n\r\n  // React.useEffect(() => {\r\n  //   if (editorRef.current) {\r\n  //     editorRef.current.getInstance().removeHook(\"addImageBlobHook\");\r\n  //     editorRef.current\r\n  //       .getInstance()\r\n  //       .addHook(\"addImageBlobHook\", (blob, callback) => {\r\n  //         (async () => {\r\n  //           try {\r\n  //             // console.log(blob);\r\n  //             let reader = new FileReader();\r\n  //             reader.readAsDataURL(blob); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n  //             // 파일 상태 업데이트\r\n  //             reader.onloadend = () => {\r\n  //               // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n  //               const base64 = reader.result;\r\n\r\n  //               //await이 중괄호 안에 쓰일 수 없기 때문에 async사용\r\n  //               const upload = async () => {\r\n  //                 // console.log(\"2차 관문\", base64);\r\n  //                 // 서버로부터 이미지 주소 받아옴\r\n  //                 const url = await apis.addMyImage(base64);\r\n  //                 const resulturl = `http://15.165.159.211${url.data.data.imageUrl}`;\r\n  //                 setImgurl(resulturl);\r\n  //                 // console.log(resulturl);\r\n  //                 callback(resulturl, \"alt text\");\r\n  //                 return resulturl;\r\n  //               };\r\n  //               upload();\r\n  //               // callback(resulturl, \"alt text\");\r\n  //             };\r\n  //           } catch (err) {\r\n  //             console.log(err.response);\r\n  //           }\r\n  //         })();\r\n  //         return false;\r\n  //       });\r\n  //   }\r\n  //   return () => {};\r\n  // }, [editorRef]);\r\n\r\n  const uploadImage = (blob, callback) => {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(blob); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n    // 파일 상태 업데이트\r\n    reader.onloadend = () => {\r\n      // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n      const base64 = reader.result;\r\n      // console.log(base64);\r\n      setImgBase64(base64);\r\n      // console.log(\"1차 관문\", imgBase64);\r\n\r\n      const upload = async () => {\r\n        // console.log(\"2차 관문\", base64);\r\n        // 서버로부터 이미지 주소 받아옴\r\n        const url = await apis.addMyImage(base64);\r\n\r\n        const resulturl = `http://15.165.159.211${url.data.data.imageUrl}`;\r\n        callback(resulturl, \"alt text\");\r\n      };\r\n      upload();\r\n    };\r\n  };\r\n\r\n  // const uploadImage = (blob) => {\r\n  //   let reader = new FileReader();\r\n  //   reader.readAsDataURL(blob); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n  //   // 파일 상태 업데이트\r\n  //   reader.onloadend = () => {\r\n  //     // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n  //     const base64 = reader.result;\r\n  //     // console.log(base64);\r\n  //     // setImgBase64(base64);\r\n  //     apis\r\n  //       .addMyImage(base64)\r\n  //       .then((res) => {\r\n  //         const result = res.data.data.imageUrl;\r\n  //         // console.log(result);\r\n  //         setImgurl(`![](http://localhost:8080${result})`);\r\n  //         const resulturl = `![](http://localhost:8080${result})`;\r\n  //         console.log(resulturl);\r\n  //         return resulturl;\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(err.response);\r\n  //       });\r\n  //   };\r\n  // };\r\n\r\n  React.useEffect(() => {\r\n    const userId = props.location.state.userId;\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await apis.getMypage(userId);\r\n        // console.log(result);\r\n        setMydata(result.data.data);\r\n      } catch (err) {\r\n        // console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onChangeEditorTextHandler = () => {\r\n    // console.log(editorRef.current.getInstance().getMarkdown());\r\n    setText(editorRef.current.getInstance().getMarkdown());\r\n  };\r\n\r\n  const write = () => {\r\n    const writing = async () => {\r\n      try {\r\n        // console.log(props[0]);\r\n        const userId = props.location.state.userId;\r\n        const result = await apis.writeMyIntroduction(userId, text);\r\n        // console.log(result);\r\n        history.push(`/mypage/${userId}`);\r\n      } catch (err) {\r\n        const userId = props.location.state.userId;\r\n        // console.log(err);\r\n        // window.alert(\"작성 형식이 올바르지 않습니다.\");\r\n        Swal.fire(\"내용이 같거나 없습니다!\", \"\", \"question\");\r\n      }\r\n    };\r\n    writing();\r\n  };\r\n  const introduction = mydata?.user.introduction;\r\n  // console.log(introduction);\r\n  return (\r\n    <>\r\n      {introduction === null && (\r\n        <>\r\n          <button\r\n            onClick={() => {\r\n              write();\r\n            }}\r\n          >\r\n            작성하기\r\n          </button>\r\n\r\n          <Editor\r\n            previewStyle=\"vertical\"\r\n            plugins={[\r\n              colorSyntax,\r\n              [codeSyntaxHighlight, { highlighter: Prism }],\r\n            ]}\r\n            onChange={onChangeEditorTextHandler}\r\n            ref={editorRef}\r\n            height=\"79vh\"\r\n            // initialValue={introduction}\r\n            hooks={{\r\n              addImageBlobHook: async (blob, callback) => {\r\n                uploadImage(blob, callback);\r\n                // callback(img_url, \"alt_text\");\r\n              },\r\n            }}\r\n          ></Editor>\r\n        </>\r\n      )}\r\n      {introduction && (\r\n        <>\r\n          <Editor\r\n            previewStyle=\"vertical\"\r\n            plugins={[\r\n              colorSyntax,\r\n              [codeSyntaxHighlight, { highlighter: Prism }],\r\n            ]}\r\n            onChange={onChangeEditorTextHandler}\r\n            ref={editorRef}\r\n            height=\"79vh\"\r\n            initialValue={introduction}\r\n            hooks={{\r\n              addImageBlobHook: async (blob, callback) => {\r\n                uploadImage(blob, callback);\r\n                // callback(img_url, \"alt_text\");\r\n              },\r\n            }}\r\n          ></Editor>\r\n          <Grid display=\"flex\" margin=\"0 0 0 72% \">\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              뒤로가기\r\n            </Button>\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                write();\r\n              }}\r\n            >\r\n              수정하기\r\n            </Button>\r\n          </Grid>\r\n        </>\r\n      )}\r\n      {!introduction && (\r\n        <>\r\n          <Grid display=\"flex\" margin=\"0 0 0 72% \"></Grid>\r\n          <Editor\r\n            previewStyle=\"vertical\"\r\n            plugins={[\r\n              colorSyntax,\r\n              [codeSyntaxHighlight, { highlighter: Prism }],\r\n            ]}\r\n            onChange={onChangeEditorTextHandler}\r\n            ref={editorRef}\r\n            height=\"79vh\"\r\n            initialValue={introduction}\r\n            hooks={{\r\n              addImageBlobHook: async (blob, callback) => {\r\n                uploadImage(blob, callback);\r\n                // callback(img_url, \"alt_text\");\r\n              },\r\n            }}\r\n          ></Editor>\r\n          <Grid display=\"flex\" margin=\"0 0 0 2% \">\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              뒤로가기\r\n            </Button>\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                write();\r\n              }}\r\n            >\r\n              작성하기\r\n            </Button>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Button } from \"../elements/Index\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport ImgType from \"../shared/ImgType\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { history } from \"../redux/configureStore\";\n\nconst Footer = (props) => {\n  const userType = props.userInfo.userPropensityType;\n  const userId = props.userInfo.userId;\n  const isToken = document.cookie;\n  const goToMypage = () => {\n    history.push(`/`);\n    setTimeout(() => {\n      history.push(`/mypage/${userId}`);\n    }, 50);\n  };\n  const goToAddPost = () => {\n    history.push(\"/postadd\");\n  };\n  const goToHome = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <Wrap>\n      <Grid display=\"flex\" bg=\"#fff\" boxShadow=\"0 0 3px #aaa\">\n        <FooterBtn onClick={goToHome}>\n          <HomeIcon sx={{ color: \"#17334A\", fontSize: 40 }} />\n        </FooterBtn>\n        <FooterBtn\n          onClick={() => {\n            if (!isToken) {\n              window.alert(\"로그인 후 작성 가능합니다.\");\n            } else {\n              goToAddPost();\n            }\n          }}\n        >\n          <AddIcon sx={{ color: \"#17334A\", fontSize: 40 }} />\n        </FooterBtn>\n        {userType && isToken && (\n          <FooterBtn onClick={goToMypage}>\n            <ImgType type={userType} />\n          </FooterBtn>\n        )}\n      </Grid>\n    </Wrap>\n  );\n};\nconst Wrap = styled.div`\n  display: none;\n  @media screen and (max-width: 767px) {\n    width: 100vw;\n    margin: auto;\n    height: 8%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(255, 255, 255, 0);\n    z-index: 10;\n    position: fixed;\n    bottom: 0;\n  }\n`;\n\nconst FooterBtn = styled.div`\n  width: 33%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\nexport default Footer;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { history } from \"../redux/configureStore\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div style={{ alignItems: \"center\" }}>\r\n      <NotFoundImg src=\"/img/소개글너구리.png\" alt=\"img\" />\r\n      <NoIntroductionText>주소가 올바르지 않습니다.</NoIntroductionText>\r\n      <Exit\r\n        onClick={() => {\r\n          history.goBack();\r\n        }}\r\n      >\r\n        뒤로가기\r\n      </Exit>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Exit = styled.button`\r\n  margin: 0px auto 15px 45%;\r\n  height: 40px;\r\n  width: 132px;\r\n  background-color: white;\r\n  border: 1px solid #d1d1d1;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: black;\r\n    background-color: #d1d1d1;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst NoIntroductionText = styled.p`\r\n  color: #737373;\r\n  font-size: 25px;\r\n  width: auto;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst NotFoundImg = styled.img`\r\n  width: 50%;\r\n  height: 50%;\r\n  object-fit: cover;\r\n  position: relative;\r\n  margin-left: 20%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nexport default NotFound;\r\n","/* eslint-disable */\nimport React from \"react\";\nimport \"./App.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userCreators } from \"../redux/modules/user\";\n\nimport MainPage from \"../pages/MainPage\";\nimport KakaoRedirect from \"./kakaoRedirect\";\nimport GitHubRedirect from \"./GitHubRedirect\";\n\nimport MyPageInfo from \"../components/MyPageInfo\";\nimport PostWrite from \"../pages/PostWrite\";\nimport PostEdit from \"../pages/PostEdit\";\nimport PostDetail from \"../pages/PostDetail\";\nimport Markdown from \"../components/Markdown\";\nimport MarkdownRead from \"../components/MarkdownRead\";\nimport Header from \"../components/Header\";\nimport Message from \"../components/headerFunction/Message\";\nimport Footer from \"../components/Footer\";\nimport NotFound from \"../shared/NotFound\";\n\n//테스트용입니다.\nimport PropensityTest from \"../components/propensityTest/PropensityTest\";\n\nfunction App() {\n  const isLogin = useSelector(state => state.user.isLogin);\n  const userInfo = useSelector(state => state.user);\n  const isCookie = document.cookie.split(\"=\")[1];\n  const dispatch = useDispatch();\n\n  React.useLayoutEffect(() => {\n    if (isCookie) {\n      dispatch(userCreators.myUserAPI());\n    }\n  }, [isLogin, isCookie]);\n\n  return (\n    <React.Fragment>\n      <div className=\"App\">\n        <Header />\n        <ConnectedRouter history={history}>\n          <Switch>\n            <Route path=\"/\" exact component={MainPage}></Route>\n            {/* <Route path=\"/message\" exact component={Message}></Route> */}\n            <Route path=\"/mypage/:id\" exact component={MyPageInfo}></Route>\n            <Route path=\"/postadd\" exact component={PostWrite}></Route>\n            <Route path=\"/postedit/:id\" exact component={PostEdit}></Route>\n            <Route path=\"/addmarkdown\" exact component={Markdown}></Route>\n            <Route path=\"/postdetail/:id\" exact component={PostDetail}></Route>\n            <Route\n              path=\"/user/kakao/callback\"\n              exact\n              component={KakaoRedirect}\n            ></Route>\n            <Route\n              path=\"/user/github/callback\"\n              exact\n              component={GitHubRedirect}\n            ></Route>\n            <Route component={NotFound}></Route>\n          </Switch>\n        </ConnectedRouter>\n        <Footer userInfo={userInfo} />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./shared/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configureStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}