{"version":3,"sources":["shared/Cookie.js","lib/axios.js","redux/modules/user.js","redux/modules/post.js","redux/modules/stack.js","redux/modules/postadd.js","redux/modules/sort.js","redux/modules/bookRecommend.js","redux/modules/infinity.js","redux/modules/applyProject.js","redux/modules/myPage.js","redux/modules/pageCheck.js","redux/configureStore.js","elements/Grid.js","elements/Image.js","elements/Text.js","elements/Input.js","elements/Button.js","images/Logo.png","components/HeaderLeft.js","components/propensityTest/TestOne.js","components/propensityTest/TestTwo.js","components/propensityTest/TestThree.js","components/propensityTest/TestFour.js","components/propensityTest/TestFive.js","components/propensityTest/TestSix.js","components/propensityTest/TestSeven.js","components/propensityTest/TestEight.js","components/propensityTest/TestNine.js","components/propensityTest/TestResult.js","components/propensityTest/Progress.js","shared/ImgType.js","components/propensityTest/PropensityTest.js","components/LoginModal.js","components/HeaderRight.js","components/Header.js","elements/LogoButton.js","components/Stack.js","components/PostStacks.js","components/applyUserModal/Apply.js","components/applyUserModal/Cancel.js","components/applyUserModal/TeamExit.js","components/applyUserModal/SubmitUrl.js","components/applyUserModal/Liked.js","components/ApplyUserModal.js","components/Post.js","shared/Spinner.js","components/PostList.js","components/EmailAuth.js","components/carousel/MainSlide.js","components/filter/SortText.js","components/filter/Sort.js","pages/MainPage.js","shared/kakaoRedirect.js","shared/GitHubRedirect.js","components/mypagePost/MypagePostList.js","components/MarkdownRead.js","components/myPage/Banners.js","components/myPage/card/CardImgs.js","modal/DeleteUserModal.js","components/myPage/card/CardUserInfo.js","components/myPage/MypageCard.js","components/myPage/TypeResultTest.js","components/myPage/filter/MyFilter.js","components/myPage/MypageFilter.js","components/MyPageInfo.js","images/PostAdd.jpg","components/postWrite/LeftBanner.js","components/postWrite/rightContents/TitleWrite.js","components/postWrite/rightContents/StackWrite.js","components/postWrite/rightContents/DateWrite.js","components/postWrite/rightContents/TotalMember.js","components/postWrite/rightContents/ContentWrite.js","components/postWrite/rightContents/GenerateButton.js","components/postWrite/RightWrite.js","components/AddPost.js","pages/PostWrite.js","redux/modules/postdetail.js","images/PostDetail.png","components/postEdit/LeftBanner.js","components/postEdit/rightContentsEdit/TitleEdit.js","components/postEdit/rightContentsEdit/StackEdit.js","components/postEdit/rightContentsEdit/TotalMemberEdit.js","components/postEdit/rightContentsEdit/StatusEdit.js","components/postEdit/rightContentsEdit/ContentEdit.js","components/postEdit/rightContentsEdit/DateEdit.js","pages/PostEdit.js","components/ApplyStatusModal.js","components/postDetail/leftBanner.js","components/postDetail/rightContents/TitleDetail.js","components/modal/ExileUserModal.js","components/ProjectJoinUser.js","components/postDetail/rightContents/ApplicantDetail.js","components/postDetail/rightContents/StackDetail.js","components/postDetail/rightContents/DateDetail.js","components/postDetail/rightContents/StatusDetail.js","components/postDetail/rightContents/ContentDetail.js","components/postDetail/rightContents/BookMark.js","components/postDetail/rightContents/ApplicantButton.js","components/postDetail/rightContents/PosterButton.js","components/postDetail/rightContents/TotalMemberDetail.js","pages/PostDetail.js","components/Markdown.js","components/Footer.js","shared/App.js","reportWebVitals.js","index.js"],"names":["setCookie","name","value","exp","date","Date","setTime","getTime","document","cookie","toUTCString","deleteCookie","instance","axios","create","baseURL","headers","accept","withCredentials","interceptors","request","use","config","cookieSplit","split","Authorization","err","console","log","apis","kakaoLogin","code","get","githubLogin","register","registerInfo","post","checkEmail","email","checkNick","nickName","signup","myUser","editTest","userId","testInfo","applyUser","postId","aceeptOffer","acceptInfo","applyProject","comment","cancelProject","delete","exitTeam","strterLike","likeUsers","sumbitUrl","urls","getMember","getUserInfo","getAllUserList","getPost","stack","sort","reBook","bookMarkChecked","getMypage","writeMyIntroduction","introduction","projectAssessmentPost","editUserInfo","data","postInfo","put","commentInfo","commentId","content","base64","FIRST_USER","SET_USER","LOG_OUT","EMAIL","MODAL","firstUser","createAction","user","setUser","logOut","modal","handleActions","state","action","produce","draft","payload","snsId","techStack","sigunupModalState","nickname","isLogin","memberPropensityType","userPropensityType","isEmail","userID","techstack","userList","userfirst","userCreators","kakaologinMiddleware","pageGo","dispatch","getState","history","then","res","msg","id","push","userCookie","token","mail","catch","Swal","fire","githubLoginMiddleware","signupMiddleware","signupInfo","response","testUserMiddleWare","emailCheckMiddleWare","window","alert","nickCheckMiddleWare","editTestMiddleware","myUserAPI","GET_POST","LOADING","MAINPAGE","WHATPAGE","PAGECHECK","getPosts","isLoading","loading","isMainPage","whatPage","pageCheck","stacks","sorts","paging","posts","render","mainpage","page","pre","now","isLoaded","infinityposts","postActions","getPostAPI","_paging","infinity","rebook","GET_STACK","SET_STACK","GET_STACK2","SET_STACK2","getStack","setStack","getStack2","setStack2","st","something","result","filter","p","React","Java","JavaScript","Python","Node","cpp","Flask","Django","Vue","Spring","php","Swift","Kotlin","TypeScript","stackAction","ADD_POST","addPosts","card","list","title","summary","contents","techStackList","totalMember","projectstatus","startdate","enddate","postAddActions","addPost","goBack","GET_SORT","getSort","sortAction","GET_RB","getRb","RecommendBook","bookRecommendAction","GET_PAGE","GET_SCROLL","start","next","currentScroll","APPLY_PROJEFCT","applyUsers","testUsers","applicationDate","applyCreators","users","PostId","userIds","GET_MYPAGE","GET_PAGECHECK","createBrowserHistory","rootReducer","combineReducers","User","apply","ApplyUser","Post","Stack","Card","Sort","ReBook","Infinitys","mypage","Mypage","pagecheck","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","Grid","props","children","_onClick","styles","margin","padding","width","height","bg","display","justifyContent","alignItems","flexDirection","flexWrap","textAlign","border","borderRadius","borderTop","borderBottom","borderLeft","borderRight","overflow","overflowX","overflowY","minWidth","maxWidth","minHeight","maxHeight","boxShadow","backgroundColor","lineHeight","boxSizing","position","top","bottom","left","right","hover","zIndex","bgImg","verticalAlign","cursor","opacity","GridBox","onClick","defaultProps","potision","styled","div","hover_font","Image","shape","src","size","ImageCircle","CardImage","AspectOutter","AspectInner","MainInner","Fragment","ImageDefault","Text","color","bold","align","underline","family","ElText","span","Input","label","placeholder","_onChange","onSubmit","type","multiLine","edit","editValue","defaulValue","borderbottom","maxLength","backgroundImage","innerRef","inputFocusOutline","inputFocusBorder","inputFocusBoxShadow","fontSize","ElTextarea","rows","onChange","ElInput","ref","onKeyPress","e","key","is_submit","textarea","input","Button","isId","isTest","text","isValue","disabled","isChecked","hoverBg","hoverCl","common","isActive","TestButton","Common","ElButton","isFloat","button","LogoDiv","HeaderLeft","style","Logo","TestOne","handleUserCreate","handleMemberCreate","useState","TestData","userbtn","btn","question","nowClickU","setNowClickU","memberbtn","nowClickMB","setNowClickMB","map","idx","active","btnUserId","target","stateItem","btnMemberId","TestTwo","TestThree","TestFour","TestFive","TestSix","TestSeven","TestEight","TestNine","TestResult","myUserType","useSelector","resultType","usertype","userType","useLayoutEffect","text1","text2","text3","text4","ProgressBar","HighLight","ArrowBubbleTwo","Progress","currentStep","ImgType","object_fit","img","imges","setResult","useEffect","item","Img","PropensityTest","isToken","useDispatch","userInfo","setpage","setUserPropensityType","setMemberPropensityType","preUserPropensityType","setPreUserPropensityType","preMemberPropensityType","setPreMemberPropensityType","answer","teststep","step","testresult","toPopMy","pop","topopYou","preMy","preYou","realSnsId","String","realUserId","testUpdateInfo","TestClose","ModalWrap","GithubBtn","KakaoBtn","LoginModal","regExpNick","showModal","setShowModal","setNickName","setTeckstack","nameDup","setNameDup","test","setTest","customStyles","control","multiValue","multiValueLabel","multiValueRemove","Dialog","scroll","open","sx","isMulti","options","className","classNamePrefix","arr","length","undefined","nickCheck","preSignUP","location","href","HeaderWrapper","ButtonWrap","IconWrap","UserImg","HeaderRight","doLogout","setDoLogOut","replace","Wrap","Header","BorderRadius","IMGS","LogoButton","stack2","setArr","Object","entries","do","values","find","r","result2","Filter","nowStack","alreadyChecked","setStacks","concat","deleteCheck","arrStack","PostStacks","reduxstack","Apply","setComment","modalClose","Contents","Cancel","TeamExit","SubmitUrl","front","setFront","back","setBack","regex","frontUrl","backUrl","Liked","likes","setLikes","passdedMenber","isMe","projectStatus","myPage","statusCheck","toggleModal","stopPropagation","a","val","Number","userLiked","ApplyUserModal","applyUserModal","setApplyUserModal","applyValue","passedUserStatus","setPage","status","onClose","memo","DescriptionBox","DDescriptionBox","CardHeader","Title","ProjectState","ProductImgWrap","myUserId","setApplyValue","member","setMember","setAssessment","totalmember","recruitmentMember","getMembers","as","pathname","assessment","startDate","endDate","IMG","Spinner","alt","PostWrap","NoIntroduction","NoIntroductionText","PostList","setPost","setLoading","Render","findStack","itemStack","i","j","slice","Dec","EmailAuth","setEmail","setModal","authEmail","fetchData","MainSlide","setImageIndex","loginShowModal","setLoginShowModal","emailShowModal","setEmailShowModal","useHistory","NextArrow","PrevArrow","settings","dots","autoplay","autoplaySpeed","draggable","infinite","lazyLoad","speed","slidesToShow","centerMode","centerPadding","nextArrow","prevArrow","beforeChange","current","Slide","slide","division","ClickEvent","Filtering","SortText","FilterBox","isLoginUser","clickCheck","setClickCheck","getItem","setPaging","onclickRb","Inside","InsideCard","Stacks","Btn","BtnFeedback","MainPage","sortC","reBookC","useInView","inView","pPaging","setPPaging","nowFilter","postList","KakaoRedirect","URL","searchParams","MypagePostList","myCards","newMyCards","MarkdownWrap","ContentPage","textData","initialValue","BannerImg","BannerAnimals","Banners","myData","setMyData","CardImgs","myType","deleteUser","MyInfoText1","MyInfoText2","Line","hr","CardUserInfo","marginLeft","mydata","recruitment","inProgress","end","isMyMypage","Cards","Exit","MypageCard","setEditMyProfile","deleteModal","setDeleteModal","base","isFocused","borderWidth","borderColor","editMyProfile","WebkitAppearance","MozAppearance","appearance","outlineStyle","defaultValue","marginTop","userData","userTechStack","onClick2","fn_submit","DeleteUserModal","MyResultDiv","MyResultText","GotoTest","MyResultText2","MyResultTextBold","ConfirmEmail","WhiteP","TestWrap","TypeResultTest","type2","type3","EditTest","testmodal","FilterDiv","MyFilter","setStatus","MypageFilter","filters","onClicks","Banner","FilterWrap","IntroduceBtn","NoticeText","MyPageInfo","match","params","setFilter","setMydata","setTestModal","recruitmentProject","inProgressProject","bookMarkProject","bookmark","endProject","pageCheckAction","getPageCheck","float","MarkdownRead","SideBarImg","LeftBanner","TitleMedia","TitleWrite","setTitle","SubDescription","StackMedia","StackWrite","stackSelect","handleChange","useCallback","inputValue","removedValue","setTectstack","temp","index","tamarray","setTechStackList","formatTech","components","animatedComponents","SDatePicker","DatePicker","DateWrite","dateFormat","selected","setStartdate","locale","ko","minDate","setEnddate","TotalMemberMedia","TotalMember","b","setTotalmember","TextArea","ContentMedia","ContentWrite","setContents","GenerateButton","submitHandler","RightWrite","makeAnimated","setDate","getDate","scopeIndex","WritePost","PostWrite","AddPost","EDIT_POST","DELETE_POST","STATUS_POST","postDetailActions","editcard","post_id","editPost","TitleEdit","StackEdit","orderByLabel","localeCompare","orderOptions","v","isFixed","setValue","isClearable","some","totalMemberEdit","projectMembers","StatusMedia","StatusEdit","projectStatused","setProjectstatus","ContentEdit","DateMedia","DateEdit","selectsStart","placeholderText","selectsEnd","h1","PostEdit","setCheckPost","setSummary","loaded","setLoaded","editHandler","detailPost","CheckPost","TotalMemberEdit","CommentBubble","ApplyStatusModal","applyedUsers","setApplyUsers","acceptButton","setAcceptButton","applyStatusModal","setApplyStatusModal","acceptUser","acceptOffer","cancelUser","bannerImg","TitleDetail","passedData","ExileUserModal","postUserId","serachTeamUser","confirm","exileUser","ProjectJoinUser","ApplicantDetail","StackBox","StackDetail","DateBox","DateDetail","StatusDetail","Content","ContentDetail","Bookmark","ToggleBookMark","bookmarkChecked","ApplicantButton","isme","applyUserModalOpen","PosterButton","DeletePost","deletePost","edit_status","TotalMemberDetail","ButtonMedia","FlexMedia","UrlButton","PostDetail","checkPost","setBookmark","exileStatusModal","setExileStatusModal","recruitmentFinish","setRecruitmentFinish","setProjectStatus","setIsme","userStatus","members","BookMark","bookMark","postion","editstatus","statusPost","statusDoing","Writer","editorRef","useRef","imgBase64","setImgBase64","setText","uploadImage","blob","callback","reader","FileReader","readAsDataURL","onloadend","addMyImage","url","resulturl","imageUrl","upload","onChangeEditorTextHandler","getInstance","getMarkdown","write","writing","previewStyle","plugins","colorSyntax","codeSyntaxHighlight","highlighter","Prism","hooks","addImageBlobHook","FooterBtn","Footer","App","isCookie","path","exact","component","Message","Markdown","GitHubRedirect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.53632792.chunk.js","sourcesContent":["// const getCookie = (name) => {\n//   document.cookie;\n// };\n\nconst setCookie = (name, value, exp = 3) => {\n  let date = new Date();\n  date.setTime(date.getTime() + exp * 1000 * 60 * 60);\n\n  document.cookie = `${name}=${value}; expires=${date.toUTCString()}; path=/`;\n};\n\nconst deleteCookie = (name) => {\n  document.cookie = name + \"=; expires=Thu, 01 Jan 1999 00:00:10 GMT; path=/\";\n};\n\nexport { setCookie, deleteCookie };\n","/* eslint-disable */\nimport axios from \"axios\";\nimport { setCookie } from \"../shared/Cookie\";\nimport { history } from \"../redux/configureStore\";\n\nexport const instance = axios.create({\n  // baseURL: \"http://localhost:3000\",\n  // baseURL: \"http://localhost:8081\",\n  // baseURL: \"http://localhost:4000\",\n  // baseURL: \"http://3.35.219.232\",\n  baseURL: \"https://scopewith.com\",\n  // baseURL: \"http://15.165.159.211\",\n  headers: {\n    \"content-type\": \"application/json; charset=UTF-8\",\n    accept: \"application/json\",\n  },\n  withCredentials: true,\n});\n\ninstance.interceptors.request.use(\n  (config) => {\n    const cookie = document.cookie;\n    if (cookie === \"\") {\n      return config;\n    }\n\n    // console.log(cookie);\n    // const cookieSplitUndefined = cookie.split('=')[1];\n    // console.log(cookieSplitUndefined);\n    // const cookieSplit = cookieSplitUndefined.split(';')[0];\n    // console.log(cookieSplit);\n\n    const cookieSplit = cookie.split(\"=\")[1];\n\n    config.headers = {\n      \"content-type\": \"application/json;charset=UTF-8\",\n      accept: \"application/json\",\n      Authorization: `Bearer ${cookieSplit}`,\n    };\n    return config;\n  },\n  (err) => {\n    console.log(err);\n  }\n);\n\nexport const apis = {\n  //회원가입 및 로그인 관련 api\n  kakaoLogin: (code) => instance.get(`/api/login/kakao?code=${code}`),\n  githubLogin: (code) => instance.get(`/api/login/github?code=${code}`),\n  register: (registerInfo) => instance.post(\"/api/signup\", registerInfo),\n  checkEmail: (email) => instance.get(`/api/login/email?email=${email}`, email),\n  checkNick: (nickName) =>\n    instance.get(`/api/login/nickname?nickname=${nickName}`, nickName),\n  signup: (registerInfo) => instance.post(\"/api/signup\", registerInfo),\n\n  // 유저 관련 api\n  myUser: () => instance.get(\"/api/myuser\"),\n  editTest: (userId, testInfo) =>\n    instance.post(`/api/test/${userId}`, testInfo),\n  applyUser: (postId) => instance.get(`/api/applicant/${postId}`),\n  aceeptOffer: (postId, acceptInfo) =>\n    instance.post(`/api/team/${postId}`, acceptInfo),\n  applyProject: (postId, comment) =>\n    instance.post(`/api/applicant/${postId}`, comment),\n  cancelProject: (postId) => instance.delete(`/api/applicant/${postId}`),\n  exitTeam: (postId) => instance.delete(`/api/team/secession/${postId}`),\n  strterLike: (postId, likeUsers) =>\n    instance.post(`/api/assessment/${postId}`, likeUsers),\n  sumbitUrl: (postId, urls) => instance.post(`/api/post/${postId}/url`, urls),\n\n  getMember: (postId) => instance.get(`/api/team/${postId}`),\n\n  getUserInfo: () => instance.get(\"/user/info\"),\n  getAllUserList: () => instance.get(\"/user/list\"),\n\n  //포스트 관련 api\n  // getPost: (stack, sort, reBook) =>\n  //   instance.get(\n  //     `/api/post?filter=${stack.React};${stack.Spring};${stack.Swift};${stack.TypeScript};${stack.cpp};${stack.Django};${stack.Flask};${stack.Java};${stack.JavaScript};${stack.Kotlin};${stack.Node};${stack.php};${stack.Python};${stack.Vue};&sort=${sort}&bookmarkRecommend=${reBook}`\n  //   ),\n  getPost: (stack, sort, reBook) =>\n    instance.get(\n      `/api/post?filter=;;;;;;;;;;;;;;&sort=${sort}&bookmarkRecommend=${reBook}`\n    ),\n  bookMarkChecked: (postId) => instance.post(`/api/bookmark/${postId}`),\n\n  //마이페이지\n  getMypage: (userId) => instance.get(`/api/user/${userId}`),\n  writeMyIntroduction: (userId, introduction) =>\n    instance.post(`/api/user/${userId}/desc`, introduction),\n  projectAssessmentPost: (postId) => instance.get(`/api/assessment/${postId}`),\n  editUserInfo: (userId, data) => instance.post(`/api/user/${userId}`, data),\n  projectAssessmentPost: (postId) => instance.get(`/api/assessment/${postId}`),\n  authEmail: (email) => instance.get(`/api/user/email?email=${email}`),\n  deleteUser: (userId) => instance.delete(`/api/user/${userId}`),\n\n  // 상세페이지\n  addPost: (postInfo) => instance.post(`/api/post`, postInfo),\n  detailPost: (postId) => instance.get(`/api/post/${postId}`),\n  editPost: (postId, data) => instance.post(`/api/post/${postId}`, data),\n  deletePost: (postId) => instance.delete(`/api/post/${postId}`),\n  statusPost: (postId, data) =>\n    instance.post(`/api/post/${postId}/status`, data),\n  serachTeamUser: (postId) => instance.get(`/api/team/${postId}`),\n  exileUser: (postId, userId) =>\n    instance.delete(`/api/team/resignation/${postId}?userId=${userId}`),\n\n  //data.json용\n  // getPost: () => instance.get(`/post`),\n\n  updatePost: (postId, postInfo) => instance.put(`/post/${postId}`, postInfo),\n\n  clickLike: (postId) => instance.post(`/post/${postId}/like`),\n  addComment: (commentInfo) => instance.post(\"/comment\", commentInfo),\n  deleteComment: (commentId) => instance.delete(`/comment/${commentId}`),\n  editComment: (commentId, content) =>\n    instance.put(`/comment/${commentId}`, content),\n  addMyImage: (base64) => instance.post(`/api/image`, base64),\n};\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis, instance } from \"../../lib/axios\";\nimport { setCookie } from \"../../shared/Cookie\";\nimport Swal from \"sweetalert2\";\n//액션타입\nconst FIRST_USER = \"FIRST_USER\";\nconst TEST_USER = \"TEST_USER\";\nconst SET_USER = \"SET_USER\";\nconst LOG_OUT = \"LOG_OUT\";\n\nconst EMAIL = \"EMAIL\";\n\nconst MODAL = \"MODAL\";\n\n//액션생성\nconst firstUser = createAction(FIRST_USER, (user) => ({ user }));\nconst testUser = createAction(TEST_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\n\nexport const email = createAction(EMAIL, (user) => ({ user }));\n\nexport const modal = createAction(MODAL, (user) => ({ user }));\n//초기값\nconst initialState = {\n  nickname: \"guest\",\n  snsId: null,\n  email: null,\n  userID: null,\n  techstack: [],\n  isLogin: false,\n  userList: [],\n  userfirst: false,\n  sigunupModalState: false,\n  userPropensityType: null,\n  memberPropensityType: null,\n  isEmail: false,\n};\n//카카오 로그인\nconst kakaologinMiddleware = (code, pageGo) => {\n  return function (dispatch, getState, { history }) {\n    let goPage = pageGo;\n    // console.log(goPage);\n    console.log(\"카카오에서 받아온 코드\", code);\n\n    apis\n      .kakaoLogin(code)\n      .then((res) => {\n        console.log(res);\n        if (res.data.msg == \"추가 정보 작성이 필요한 사용자입니다.\") {\n          // window.alert(\"추가정보 작성이 필요합니다.\");\n\n          dispatch(\n            firstUser({\n              email: res.data.data.email,\n              snsId: res.data.data.id,\n            })\n          );\n          // history.push(goPage);\n          history.push(\"/\");\n          return;\n        }\n        if (res.data.msg == \"로그인이 완료되었습니다\") {\n          let email = getState().user.isEmail;\n          let userCookie = res.data.data.token;\n          setCookie(\"ScopeUser\", userCookie, 30);\n          // const ACCESS_TOKEN = res.data.token;\n          // localStorage.setItem(\"token\", ACCESS_TOKEN);\n          dispatch(\n            setUser({\n              email: res.data.data.mail,\n              nickname: res.data.data.nickname,\n              userId: res.data.data.userId,\n              userPropensityType: res.data.data.userPropensityType,\n            })\n          );\n          // if (email) {\n          //   history.replace(`/mypage:${res.data.data.userId}`);\n          //   Swal.fire(\n          //     \"완료된 프로젝트가 있습니다. 팀원들을 평가하러 가볼까요?\",\n          //     \"\",\n          //     \"info\"\n          //   );\n          // }\n          // window.history.back();\n          // history.push(goPage);\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"소셜로그인 에러\", err);\n        // alert(\"로그인에 실패하였습니다.\");\n        // history.replace(\"/\"); // 로그인 실패하면 로그인화면으로 돌려보냄\n        history.push(\"/\");\n        Swal.fire(\"로그인에 실패하였습니다!\", \"\", \"warning\");\n      });\n  };\n};\n\n//깃허브 로그인\nconst githubLoginMiddleware = (code) => {\n  return function (dispatch, getState, { history }) {\n    console.log(\"깃허브에서 받아온 코드\", code);\n    apis\n      .githubLogin(code)\n      .then((res) => {\n        console.log(res);\n        if (res.data.msg == \"추가 정보 작성이 필요한 사용자입니다.\") {\n          // window.alert(\"추가정보 작성이 필요합니다.\");\n\n          dispatch(\n            firstUser({\n              email: res.data.data.email,\n              snsId: res.data.data.id,\n            })\n          );\n\n          history.push(\"/\");\n          return;\n        }\n        if (res.data.msg == \"로그인이 완료되었습니다\") {\n          let userCookie = res.data.data.token;\n          setCookie(\"ScopeUser\", userCookie, 30);\n          dispatch(\n            setUser({\n              email: res.data.data.mail,\n              nickname: res.data.data.nickname,\n              userId: res.data.data.userId,\n              userPropensityType: res.data.data.userPropensityType,\n            })\n          );\n          // window.history.back();\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"소셜로그인 에러\", err);\n        // alert(\"로그인에 실패하였습니다.\");\n        history.push(\"/\");\n        Swal.fire(\"로그인에 실패하였습니다.\", \"\", \"warning\");\n      });\n  };\n};\n// 이메일 중복체크 미들웨어\nconst emailCheckMiddleWare = (email) => {\n  return () => {\n    apis\n      .checkEmail(email)\n      .then((res) => {\n        console.log(res);\n        if (res.data.msg == \"사용 가능한 메일입니다.\") {\n          return window.alert(\"사용 가능한 메일입니다.\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response);\n        if (err.response.data.msg == \"이미 사용중인 이메일입니다.\") {\n          return window.alert(\"이미 사용중인 이메일입니다.\");\n        }\n      });\n  };\n};\n\n// 닉네임 중복체크 미들웨어\nconst nickCheckMiddleWare = (nickName) => {\n  return () => {\n    apis\n      .checkNick(nickName)\n      .then((res) => {\n        console.log(res.data);\n        if (res.data.msg == \"사용가능한 닉네임입니다.\") {\n          return window.alert(\"사용가능한 닉네임입니다.\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response);\n        if (err.response.data.msg == \"이미 사용중인 닉네임입니다.\") {\n          return window.alert(\"중복된 닉네임이 존재합니다.\");\n        }\n      });\n  };\n};\n\n//테스트유저 미들웨어\nconst testUserMiddleWare = (signupInfo) => {\n  return function (dispatch, getState, { history }) {\n    console.log(signupInfo);\n    dispatch(firstUser(signupInfo));\n  };\n};\n\n//로그인 정보 유지\nconst myUserAPI = () => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .myUser()\n      .then((res) => {\n        console.log(res);\n        dispatch(\n          setUser({\n            email: res.data.data.mail,\n            nickname: res.data.data.nickname,\n            userId: res.data.data.userId,\n            userPropensityType: res.data.data.userPropensityType,\n          })\n        );\n        // history.replace(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n//테스트 마친 회원가입\nconst signupMiddleware = (signupInfo) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .signup(signupInfo)\n      .then((res) => {\n        console.log(res);\n        // const ACCESS_TOKEN = res.data.token;\n        // localStorage.setItem(\"token\", ACCESS_TOKEN);\n        dispatch(\n          setUser({\n            userPropensityType: res.data.data.user.userPropensityType,\n            memberPropensityType: res.data.data.user.memberPropensityType,\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n//협업테스트 수정 미들웨어\nconst editTestMiddleware = (userId, testInfo) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .editTest(userId, testInfo)\n      .then((res) => {\n        console.log(res);\n        dispatch(\n          setUser({\n            userPropensityType: res.data.data.userPropensityType,\n            memberPropensityType: res.data.data.memberPropensityType,\n          })\n        );\n\n        // Swal.fire(\"성향 캐릭터가 정해졌습니다!\", \"\", \"success\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n//리듀서\nexport default handleActions(\n  {\n    [FIRST_USER]: (state, action) =>\n      produce(state, (draft) => {\n        draft.email = action.payload.user.email;\n        draft.snsId = action.payload.user.snsId;\n        draft.techStack = action.payload.user.techStack;\n        draft.nickName = action.payload.user.nickName;\n\n        draft.sigunupModalState = true;\n      }),\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        draft.userId = action.payload.user.userId;\n        draft.nickname = action.payload.user.nickname;\n        draft.email = action.payload.user.email;\n        draft.techStack = action.payload.user.techStack;\n        draft.isLogin = true;\n        draft.memberPropensityType = action.payload.user.memberPropensityType;\n        draft.userPropensityType = action.payload.user.userPropensityType;\n      }),\n    [LOG_OUT]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isLogin = false;\n      }),\n    [MODAL]: (state, action) =>\n      produce(state, (draft) => {\n        draft.sigunupModalState = false;\n      }),\n    [EMAIL]: (state, action) =>\n      produce(state, (draft) => {\n        draft.isEmail = true;\n      }),\n  },\n  initialState\n);\n\nconst userCreators = {\n  kakaologinMiddleware,\n  githubLoginMiddleware,\n  signupMiddleware,\n  testUserMiddleWare,\n  emailCheckMiddleWare,\n  nickCheckMiddleWare,\n  editTestMiddleware,\n  myUserAPI,\n  logOut,\n  modal,\n  email,\n};\n\nexport { userCreators };\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { apis } from \"../../lib/axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst GET_POST = \"GET_POST\";\r\nconst LOADING = \"LOADING\";\r\nconst MAINPAGE = \"MAINPAGE\";\r\nconst WHATPAGE = \"WHATPAGE\";\r\nconst PAGECHECK = \"PAGECHECK\";\r\n\r\nconst getPosts = createAction(GET_POST, (data) => ({ data }));\r\nconst isLoading = createAction(LOADING, (loading) => ({ loading }));\r\nconst isMainPage = createAction(MAINPAGE, (data) => ({ data }));\r\nconst whatPage = createAction(WHATPAGE, (data) => ({ data }));\r\nconst pageCheck = createAction(PAGECHECK, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  isLoaded: false,\r\n  infinityposts: [],\r\n  // paging: { start: null, next: null },\r\n  isLoading: false,\r\n  sorts: \"createdAt\",\r\n  reBook: \"\",\r\n  mainpage: true,\r\n  whatPage: { pre: \"mainPage\", now: \"mainPage\" },\r\n  pageCheck: false,\r\n  render: false,\r\n};\r\n\r\nexport const getPostAPI = () => {\r\n  return function (dispatch, getState, { history }) {\r\n    let stack = getState().stack.stack;\r\n    let sort = getState().sort.sort;\r\n    let _paging = getState().infinity.paging;\r\n    let reBook = getState().rebook.reBook;\r\n    let mainPage = getState().post.mainpage;\r\n    let whatPages = getState().post.whatPage;\r\n\r\n    // if (whatPages.now !== whatPages.pre) {\r\n    //   console.log(whatPages.now, whatPages.pre);\r\n    //   console.log(\"끊겠음2\");\r\n    //   dispatch(whatPage(\"mainPage\"));\r\n    //   return;\r\n    // }\r\n    apis\r\n      .getPost(stack, sort, reBook)\r\n      .then((res) => {\r\n        console.log(_paging);\r\n        const posts = res.data.data;\r\n\r\n        // console.log(\"어떻게 오는지\", res.data.data);\r\n\r\n        dispatch(isLoading(true));\r\n        let data = { _paging, posts, stack, sort, reBook };\r\n\r\n        dispatch(getPosts(data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // Swal.fire(`${err.response}`, \"간단한 테스트를 진행해 주세요.\", \"info\");\r\n      });\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    // 백엔드와 통신\r\n    [GET_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(action);\r\n        let stacks = action.payload.data.stack;\r\n        let sorts = action.payload.data.sort;\r\n        let reBook = action.payload.data.reBook;\r\n        // draft.paging = action.payload.data.paging;\r\n        // draft.posts = action.payload.data.posts;\r\n        draft.isLoading = false;\r\n        if (!draft.stacks || !draft.sorts || !draft.reBook) {\r\n          draft.stacks = stacks;\r\n          draft.sorts = sorts;\r\n          draft.reBook = reBook;\r\n        }\r\n        if (\r\n          state.stacks !== stacks ||\r\n          state.sorts !== sorts ||\r\n          state.reBook !== reBook\r\n        ) {\r\n          // console.log(\"스택이 달라졌을때\");\r\n          // console.log(action);\r\n          draft.paging = action.payload.data.paging;\r\n          draft.posts = action.payload.data.posts;\r\n          draft.isLoading = false;\r\n          draft.stacks = stacks;\r\n          draft.sorts = sorts;\r\n          draft.reBook = reBook;\r\n          draft.render = true;\r\n        } else if (\r\n          state.stacks === stacks ||\r\n          state.sorts === sorts ||\r\n          state.reBook === reBook\r\n        ) {\r\n          // console.log(draft.stacks === stacks);\r\n          // console.log(\"스택이 그대로일때\");\r\n          // draft.posts.push(...action.payload.data.posts);\r\n          draft.posts = action.payload.data.posts;\r\n          draft.paging = action.payload.data.paging;\r\n          draft.isLoading = false;\r\n          draft.render = false;\r\n        }\r\n      }),\r\n\r\n    [LOADING]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.isLoading = action.payload.loading;\r\n      }),\r\n    [MAINPAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"여기가 메인페이지인가\", action.payload.data);\r\n        draft.mainpage = action.payload.data;\r\n      }),\r\n    [WHATPAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"현재페이지\", action.payload.data);\r\n        // console.log(state);\r\n        let page = {\r\n          pre: state.whatPage.now,\r\n          now: action.payload.data,\r\n        };\r\n        // console.log(page);\r\n        draft.whatPage = page;\r\n      }),\r\n    [PAGECHECK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"페이지 체크\", action);\r\n        draft.pageCheck = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst postActions = {\r\n  getPostAPI,\r\n  isMainPage,\r\n  whatPage,\r\n  pageCheck,\r\n};\r\nexport { postActions };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_STACK = \"GET_STACK\";\r\nconst SET_STACK = \"SET_STACK\";\r\n\r\nconst GET_STACK2 = \"GET_STACK2\";\r\nconst SET_STACK2 = \"SET_STACK2\";\r\n\r\nconst getStack = createAction(GET_STACK, (data) => ({ data }));\r\nconst setStack = createAction(SET_STACK, (data) => ({ data }));\r\n\r\nconst getStack2 = createAction(GET_STACK2, (data) => ({ data }));\r\nconst setStack2 = createAction(SET_STACK2, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  stack: {\r\n    React: \"\",\r\n    Java: \"\",\r\n    JavaScript: \"\",\r\n    Python: \"\",\r\n    Node: \"\",\r\n    cpp: \"\",\r\n    Flask: \"\",\r\n    Django: \"\",\r\n    Vue: \"\",\r\n    Spring: \"\",\r\n    php: \"\",\r\n    Swift: \"\",\r\n    Kotlin: \"\",\r\n    TypeScript: \"\",\r\n  },\r\n  stacks: [],\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_STACK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        const st = action.payload.data;\r\n        // if로 분기를 둔 이유 : draft에 이미 값이 있을 때와 없을 때를 분리 (처음에는 draft에 값이 없을 것 이므로 따로 작성)\r\n        if (!draft) {\r\n          const something = state.stack;\r\n          //   console.log(something[st]);\r\n          something[st] = st;\r\n          //   console.log(something);\r\n          draft.stack = something;\r\n          //   console.log(draft.stack);\r\n        } else {\r\n          draft.stack[st] = st;\r\n          //   console.log(draft.stack);\r\n        }\r\n\r\n        // const something = state.stack;\r\n        // console.log(something[st]);\r\n        // something[st] = st;\r\n        // console.log(something);\r\n        // draft = something;\r\n\r\n        // 처음에는 기본값인 state를 변경해줬었는데 이는 위험해 보임. => 처음에 변수에 이 값을 저장\r\n        // console.log(state.stack[st]);\r\n        // state.stack[st] = st;\r\n        // console.log(state);\r\n\r\n        // draft.push(action.payload.data);\r\n        // console.log(\"이것이 드래프트\", draft.list);\r\n      }),\r\n    [SET_STACK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(action.payload.data);\r\n        const st = action.payload.data;\r\n        draft.stack[st] = \"\";\r\n        // draft.splice(draft.findIndex((item) => item === action.payload.data));\r\n        // const result = draft.filter((item) => {\r\n        //   if (item !== action.payload.data) {\r\n        //     return item;\r\n        //   }\r\n        // });\r\n        // console.log(\"빼고 검색한 값\", result);\r\n        // draft = result;\r\n        // console.log(\"이것이 드래프트\", draft);\r\n      }),\r\n    [GET_STACK2]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        console.log(\"dodoget\", action);\r\n\r\n        draft.stacks.push(action.payload.data);\r\n      }),\r\n    [SET_STACK2]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        console.log(\"dodoset\", state.stacks);\r\n        const result = state.stacks.filter((p) => p !== action.payload.data);\r\n        draft.stacks = result;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst stackAction = {\r\n  getStack,\r\n  setStack,\r\n  getStack2,\r\n  setStack2,\r\n};\r\nexport { stackAction };\r\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../lib/axios\";\n\n// Actions\nconst ADD_POST = \"ADD_POST\";\n\n// Action Creators\nconst addPosts = createAction(ADD_POST, (card) => ({ card }));\n\nconst initialState = {\n  list: [\n    {\n      title: \"제목\",\n      summary: \"한줄설명\",\n      contents: \"내용\",\n      techStackList: \"기술스택\",\n      totalMember: \"제한 인원\",\n      projectstatus: \"프로젝트 상태\",\n      startdate: \"시작 날짜\",\n      enddate: \"끝나는 날짜\",\n    },\n  ],\n};\n\n// 미들웨어\nexport const addPostAPI = (card) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .addPost(card)\n      .then((res) => {\n        console.log(res);\n        history.goBack();\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n    dispatch(addPosts(card));\n  };\n};\n\n// 리듀서\nexport default handleActions(\n  {\n    [ADD_POST]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\nconst postAddActions = {\n  addPostAPI,\n};\n\nexport { postAddActions };\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_SORT = \"GET_SORT\";\r\n\r\nconst getSort = createAction(GET_SORT, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  sort: \"createdAt\",\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_SORT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.sort = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst sortAction = {\r\n  getSort,\r\n};\r\nexport { sortAction };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_RB = \"GET_RB\";\r\n\r\nconst getRb = createAction(GET_RB, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  RecommendBook: \"\",\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_RB]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(action);\r\n        draft.reBook = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst bookRecommendAction = {\r\n  getRb,\r\n};\r\nexport { bookRecommendAction };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { apis } from \"../../lib/axios\";\r\nimport { postActions } from \"./post\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst GET_PAGE = \"GET_PAGE\";\r\nconst GET_SCROLL = \"GET_SCROLL\";\r\n\r\nconst getPages = createAction(GET_PAGE, (data) => ({ data }));\r\nconst getScroll = createAction(GET_SCROLL, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  paging: { start: 12, next: 12 },\r\n  currentScroll: null,\r\n};\r\n\r\nexport const getPage = (data) => {\r\n  return function (dispatch, getState, { history }) {\r\n    let mainPage = getState().post.mainpage;\r\n    let whatPages = getState().post.whatPage;\r\n    console.log(data);\r\n\r\n    if (mainPage === false && whatPages.now !== \"mainPage\") {\r\n      // console.log(\"메인페이지 무한스크롤 펄스값\", mainPage);\r\n      return;\r\n    } else {\r\n      // console.log(\"메인페이지 무한스크롤 트루값\", mainPage);\r\n      dispatch(getPages(data));\r\n    }\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_PAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"액션값을 받아야함\", action);\r\n        // console.log(state.paging);\r\n\r\n        let paging = {\r\n          start: state.paging.next,\r\n          next: action.payload.data,\r\n        };\r\n\r\n        // console.log(\"액션값을 받아야함2222\", paging);\r\n        draft.paging = paging;\r\n      }),\r\n    [GET_SCROLL]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        console.log(\"스크롤값 받아라\", action);\r\n        draft.currentScroll = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst pageAction = {\r\n  getPage,\r\n  getScroll,\r\n};\r\nexport { pageAction };\r\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../lib/axios\";\n\n// 액션타입\nconst APPLY_PROJEFCT = \"APPLY_POST\";\n\n// 액션생성\nconst applyUsers = createAction(APPLY_PROJEFCT, (applyUsers) => ({\n  applyUsers,\n}));\n\nconst initialState = {\n  testUsers: [\n    {\n      userId: \"1813325\",\n      nickname: \"guest\",\n      email: \"aaa@aaa.com\",\n      userPropensityType: \"LVP\",\n      applicationDate: \"2021-11-04\",\n    },\n  ],\n};\n\n// 내가만든 프로젝트 신청자 현황 불러오기\nconst applyUserAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .applyUser(postId)\n      .then((res) => {\n        console.log(res.data.data);\n        // window.alert(\"모집 지원 현황 조회 성공\");\n        dispatch(applyUsers(res.data.data));\n      })\n      .catch((err) => {\n        console.log(err.response);\n        window.alert(\"4444신청자를 못찾겠네용!\");\n      });\n  };\n};\n//내가 만든 프로젝트 신청자 수락(팀장)\nconst acceptOfferAPI = (postId, acceptInfo) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .aceeptOffer(postId, acceptInfo)\n      .then((res) => {\n        console.log(res.data.data);\n        console.log(res);\n        dispatch(applyUsers(res.data.users));\n      })\n      .catch((err) => {\n        console.log(err.response);\n        window.alert(\"88888신청자를 못찾겠네용!\");\n      });\n  };\n};\n//모집중인 프로젝트 지원(팀원)\nconst applyProjectAPI = (postId, comment) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .applyProject(postId, comment)\n      .then((res) => {\n        console.log(res);\n        return window.alert(\"프로젝트에 지원되었습니다.\");\n      })\n      .catch((err) => {\n        console.log(err.response);\n        if (err.response.data.msg === \"모집중인 프로젝트가 아닙니다.\") {\n          return window.alert(\"모집중인 프로젝트가 아닙니다.\");\n        }\n        if (err.response.data.msg === \"이미 지원한 프로젝트입니다.\") {\n          return window.alert(\"이미 지원한 프로젝트 입니다.\");\n        } else {\n          window.alert(\"해당 지원 정보를 찾을 수 없습니다.\");\n          return;\n        }\n      });\n  };\n};\n//모집중인 프로젝트 지원취소(팀원)\nconst cancelProjectAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .cancelProject(postId)\n      .then((res) => {\n        console.log(res);\n        window.alert(\"프로젝트 지원이 취소되었습니다.!\");\n      })\n      .catch((err) => {\n        console.log(err.response);\n        window.alert(\"신청자 정보를 찾을 수 없습니다!\");\n      });\n  };\n};\n//팀장이 수락한 프로젝트 탈퇴(팀원)\nconst exitTeamAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    const PostId = postId.postId;\n    console.log(PostId);\n    apis\n      .exitTeam(PostId)\n      .then((res) => {\n        console.log(res);\n        window.alert(\"팀에서 탈출하였습니다!\");\n      })\n      .catch((err) => {\n        console.log(err.response);\n        if (err.response.data.msg === \"입력 값이 잘못되었습니다.\") {\n          return window.alert(\"입력 값이 잘못되었습니다.\");\n        }\n        if (err.response.data.msg === \"해당 프로젝트를 찾을 수 없습니다.\") {\n          return window.alert(\"해당 프로젝트를 찾을 수 없습니다.\");\n        }\n        if (err.response.data.msg === \"이미 진행중인 프로젝트입니다.\") {\n          return window.alert(\"이미 진행중인 프로젝트입니다.\");\n        }\n      });\n  };\n};\n\n// 팀장의 프로젝트 완료후 평가\nconst starterLikeAPI = (postId, userIds) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .strterLike(postId, userIds)\n      .then((res) => {\n        console.log(res);\n        window.alert(\"팀원 평가 정보가 성공적으로 저장되었습니다.\");\n      })\n      .catch((err) => {\n        console.log(err.response);\n        if (err.response.data.msg === \"입력 값이 잘못되었습니다.\") {\n          return window.alert(\"팀원 평가가 이루어지지 않았습니다.\");\n        }\n        if (err.response.data.msg === \"해당 프로젝트를 찾을 수 없습니다.\") {\n          return window.alert(\"해당 프로젝트를 찾을 수 없습니다.\");\n        }\n        if (err.response.data.msg === \"이미 진행중인 프로젝트입니다.\") {\n          return window.alert(\"이미 진행중인 프로젝트입니다.\");\n        }\n      });\n  };\n};\n\n// 깃허브 제출\nconst submitUrlAPI = (postId, urls) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .sumbitUrl(postId, urls)\n      .then((res) => {\n        console.log(res);\n        window.alert(\"프로젝트 URL이 성공적으로 저장되었습니다.\");\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n\n//마이페이지 프로젝트 팀원정보 조회\nconst getMemberAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .getMember(postId)\n      .then((res) => {\n        console.log(res);\n        window.alert(\"모라공?\");\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n// 리듀서\nexport default handleActions(\n  {\n    [APPLY_PROJEFCT]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"신청자정보\", action);\n        draft.applyUsers = action.payload.applyUsers;\n      }),\n  },\n  initialState\n);\n\nconst applyCreators = {\n  applyUserAPI,\n  acceptOfferAPI,\n  applyProjectAPI,\n  cancelProjectAPI,\n  exitTeamAPI,\n  starterLikeAPI,\n  submitUrlAPI,\n  getMemberAPI,\n};\n\nexport { applyCreators };\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport { apis } from \"../../lib/axios\";\r\n\r\nconst GET_MYPAGE = \"GET_MYPAGE\";\r\n\r\nconst getMypages = createAction(GET_MYPAGE, (data) => ({ data }));\r\n\r\nconst initialState = {};\r\n\r\nexport const getMypageAPI = (postId) => {\r\n  return function (dispatch, getState, { history }) {\r\n    apis\r\n      .getMypage(postId)\r\n      .then((res) => {\r\n        console.log(res);\r\n        // dispatch(getPosts(data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  };\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_MYPAGE]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        console.log(\"여기가 마이페이지인가\", action.payload);\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst myPageActions = { getMypageAPI };\r\nexport { myPageActions };\r\n","/* eslint-disable */\r\nimport { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nconst GET_PAGECHECK = \"GET_PAGECHECK\";\r\n\r\nconst getPageCheck = createAction(GET_PAGECHECK, (data) => ({ data }));\r\n\r\nconst initialState = {\r\n  pageGo: \"/\",\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [GET_PAGECHECK]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"페이지 위치 저장\", action.payload.data);\r\n        draft.pageGo = action.payload.data;\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n\r\nconst pageCheckAction = {\r\n  getPageCheck,\r\n};\r\nexport { pageCheckAction };\r\n","/* eslint-disable */\r\nimport { createBrowserHistory } from \"history\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport User from \"./modules/user\";\r\n\r\nimport Post from \"./modules/post\";\r\nimport Stack from \"./modules/stack\";\r\nimport Card from \"./modules/postadd\";\r\nimport Sort from \"./modules/sort\";\r\nimport ReBook from \"./modules/bookRecommend\";\r\nimport Infinitys from \"./modules/infinity\";\r\nimport ApplyUser from \"./modules/applyProject\";\r\nimport Mypage from \"./modules/myPage\";\r\nimport pageCheck from \"./modules/pageCheck\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  user: User,\r\n  //   product: Product,\r\n  //   comment : Comment,\r\n  apply: ApplyUser,\r\n  post: Post,\r\n  stack: Stack,\r\n  card: Card,\r\n  sort: Sort,\r\n  rebook: ReBook,\r\n  infinity: Infinitys,\r\n  mypage: Mypage,\r\n  pagecheck: pageCheck,\r\n\r\n  // 8. 리덕스에 history를 이제 넣어줄 것이다. 우리가 만든 history와 우리의 라우터가 연결이되는 것이다. 그리고 이것의 우리의 스토어에 저장이되는 것이다.\r\n  router: connectRouter(history),\r\n});\r\n\r\nconst middlewares = [thunk.withExtraArgument({ history: history })];\r\n\r\n// const env = process.env.NODE_ENV;\r\n\r\n// if (env === \"development\") {\r\n//   const { logger } = require(\"redux-logger\");\r\n//   middlewares.push(logger);\r\n// }\r\n\r\n// 4. 리덕스 데브툴(redux devTools 설정)\r\nconst composeEnhancers =\r\n  // 브라우저일 때만  window === \"object\"이 부분을 돌려주라고 넣어준것이다. __REDUX_DEVTOOLS_EXTENSION_COMPOSE__부분을 데브툴이 있으면 열어주려고 하는 것이다.\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\n// 5. 미들웨어 묶어주기\r\n// composeEnhancers를 사용해서 applyMiddleware로 지금까지 있었던 미들웨어를 사용한다는 말이다.\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\nlet store = (initialStore) => createStore(rootReducer, enhancer);\r\n\r\nexport default store();\r\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Grid = (props) => {\n  const {\n    children,\n    _onClick,\n    id,\n    margin,\n    padding,\n    width,\n    height,\n    bg,\n    display,\n    justifyContent,\n    alignItems,\n    flexDirection,\n    flexWrap,\n    textAlign,\n    border,\n    borderRadius,\n    borderTop,\n    borderBottom,\n    borderLeft,\n    borderRight,\n    overflow,\n    overflowX,\n    overflowY,\n    minWidth,\n    maxWidth,\n    minHeight,\n    maxHeight,\n    boxShadow,\n    backgroundColor,\n    lineHeight,\n    boxSizing,\n    position,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    zIndex,\n    bgImg,\n    verticalAlign,\n    cursor,\n    opacity,\n  } = props;\n\n  const styles = {\n    id,\n    margin,\n    padding,\n    width,\n    height,\n    bg,\n    display,\n    justifyContent,\n    alignItems,\n    flexDirection,\n    flexWrap,\n    textAlign,\n    border,\n    borderRadius,\n    borderTop,\n    borderBottom,\n    borderLeft,\n    borderRight,\n    overflow,\n    overflowX,\n    overflowY,\n    minWidth,\n    maxWidth,\n    minHeight,\n    maxHeight,\n    boxShadow,\n    backgroundColor,\n    lineHeight,\n    boxSizing,\n    position,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    zIndex,\n    bgImg,\n    verticalAlign,\n    cursor,\n    opacity,\n  };\n  return (\n    <GridBox {...styles} onClick={_onClick} id={id}>\n      {children}\n    </GridBox>\n  );\n};\n\nGrid.defaultProps = {\n  children: null,\n  id: null,\n  margin: null,\n  padding: null,\n  width: \"100%\",\n  height: \"100%\",\n  bg: null,\n  display: null,\n  justifyContent: null,\n  alignItems: false,\n  flexDirection: false,\n  flexWrap: null,\n  textAlign: false,\n  border: null,\n  borderRadius: false,\n  borderTop: null,\n  borderBottom: null,\n  borderLeft: null,\n  borderRight: null,\n  overflow: null,\n  overflowX: null,\n  overflowY: null,\n  minWidth: null,\n  maxWidth: null,\n  minHeight: null,\n  maxHeight: null,\n  boxShadow: null,\n  potision: null,\n  top: null,\n  bottom: null,\n  left: null,\n  right: null,\n  hover: null,\n  bgImg: null,\n  _onClick: () => {},\n};\n\nconst GridBox = styled.div`\n  margin: ${(props) => props.margin};\n  padding: ${(props) => props.padding};\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  background: ${(props) => props.bg};\n  display: ${(props) => props.display};\n  ${(props) =>\n    props.flexDirection ? `flex-direction:${props.flexDirection}` : \"\"};\n  flex-wrap: ${(props) => props.flexWrap};\n  align-items: ${(props) => props.alignItems};\n  justify-content: ${(props) => props.justifyContent};\n  text-align: ${(props) => props.textAlign};\n  vertical-align: ${(props) => props.verticalAlign};\n  border: ${(props) => props.border};\n  ${(props) =>\n    props.borderRadius ? `border-radius: ${props.borderRadius}` : \"\"};\n  border-top: ${(props) => props.borderTop};\n  border-bottom: ${(props) => props.borderBottom};\n  border-left: ${(props) => props.borderLeft};\n  border-right: ${(props) => props.borderRight};\n  overflow-x: ${(props) => props.overflowX};\n  overflow-y: ${(props) => props.overflowY};\n  overflow: ${(props) => props.overflow};\n  min-width: ${(props) => props.minWidth};\n  max-width: ${(props) => props.maxWidth};\n  min-height: ${(props) => props.minHeight};\n  max-height: ${(props) => props.maxHeight};\n  background-color: ${(props) => props.backgroundColor};\n  box-sizing: ${(props) => props.boxSizing};\n  box-shadow: ${(props) => props.boxShadow};\n  position: ${(props) => props.position};\n  top: ${(props) => props.top};\n  bottom: ${(props) => props.bottom};\n  left: ${(props) => props.left};\n  right: ${(props) => props.right};\n  background-color: ${(props) => props.backgroundColor};\n  z-index: ${(props) => props.zIndex};\n  background-image: ${(props) => props.bgImg};\n  cursor: ${(props) => props.cursor};\n  opacity: ${(props) => props.opacity};\n  font-family: \"GmarketSans\";\n\n  :hover {\n    ${(props) =>\n      props.hover\n        ? `background-color:${props.hover};\n  cursor: pointer;`\n        : \"\"}\n    ${(props) => (props.hover_font ? `color : ${props.hover_font}` : null)}\n  }\n\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: #2f3542;\n    border-radius: 15px;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: grey;\n    border-radius: 15px;\n  }\n`;\n\nexport default Grid;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Image = (props) => {\n  const { shape, src, size, _onClick, children } = props;\n\n  const styles = {\n    src: src,\n    size: size,\n  };\n\n  if (shape === \"circle\") {\n    return <ImageCircle {...styles} onClick={_onClick}></ImageCircle>;\n  }\n\n  if (shape === \"card\") {\n    return <CardImage {...styles} onClick={_onClick}></CardImage>;\n  }\n\n  if (shape === \"rectangle\") {\n    return (\n      <AspectOutter>\n        <AspectInner {...styles} onClick={_onClick}></AspectInner>\n      </AspectOutter>\n    );\n  }\n\n  if (shape === \"main\") {\n    return <MainInner {...styles} onClick={_onClick}></MainInner>;\n  }\n\n  return (\n    <React.Fragment>\n      <ImageDefault {...styles} onClick={_onClick}></ImageDefault>\n    </React.Fragment>\n  );\n};\n\nImage.defaultProps = {\n  shape: \"circle\",\n  src: \"https://images.unsplash.com/photo-1608889335941-32ac5f2041b9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjB8fHRveXxlbnwwfDJ8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60\",\n  size: 36,\n  _onClick: () => {},\n};\n\nconst ImageDefault = styled.div`\n  --size: ${(props) => props.size}px;\n  width: var(--size);\n  height: var(--size);\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n  background-position: center;\n  object-fit: cover;\n`;\n\nconst AspectOutter = styled.div`\n  width: auto;\n  min-width: 250px;\n`;\n\nconst AspectInner = styled.div`\n  position: relative;\n  padding-top: 100%;\n  overflow: hidden;\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n`;\n\nconst ImageCircle = styled.div`\n  --size: ${(props) => props.size}px;\n  width: var(--size);\n  height: var(--size);\n  border-radius: var(--size);\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n  margin: 4px;\n`;\n\nconst CardImage = styled.div`\n  width: 100%;\n  height: auto;\n`;\n\nconst MainImage = styled.div`\n  width: 100%;\n  height: auto;\n`;\n\nconst MainInner = styled.div`\n  width: 100%;\n  margin: auto;\n  min-width: 25rem;\n  position: relative;\n  padding-top: 30%;\n  overflow: hidden;\n  background-image: url(\"${(props) => props.src}\");\n  background-position: center;\n  /* background-size: cover; */\n`;\n\nexport default Image;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Text = (props) => {\n  const {\n    children,\n    color,\n    size,\n    bold,\n    align,\n    margin,\n    padding,\n    underline,\n    family,\n    border,\n    _onClick,\n    cursor,\n    hover,\n  } = props;\n  const styles = {\n    color,\n    size,\n    bold,\n    align,\n    margin,\n    padding,\n    underline,\n    family,\n    border,\n    cursor,\n  };\n  return (\n    <ElText {...styles} onClick={_onClick}>\n      {children}\n    </ElText>\n  );\n};\n\nText.defaultProps = {\n  children: null,\n  color: null,\n  size: null,\n  bold: false,\n  align: null,\n  underline: null,\n  margin: false,\n  padding: false,\n  family: false, //폰트 타입\n  border: null,\n  _onClick: () => {},\n  cursor: null,\n};\n\nconst ElText = styled.span`\n  color: ${(props) => props.color};\n  font-size: ${(props) => props.size};\n  font-weight: ${(props) => props.bold};\n\n  text-align: ${(props) => props.align};\n  margin: ${(props) => props.margin};\n  padding: ${(props) => props.padding};\n  family: ${(props) => props.family};\n  border: ${(props) => props.border};\n  cursor: ${(props) => props.cursor};\n  font-family: \"GmarketSans\";\n  line-height: 1.2;\n  letter-spacing: -0.0375em;\n`;\n\nexport default Text;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"./Index\";\n\nconst Input = (props) => {\n  const {\n    id,\n    label,\n    placeholder,\n    _onChange,\n    onSubmit,\n    type,\n    multiLine,\n    edit,\n    value,\n    editValue,\n    defaulValue,\n    margin,\n    width,\n    padding,\n    height,\n    border,\n    borderbottom,\n    maxLength,\n    borderRadius,\n    bg,\n    backgroundImage,\n    backgroundColor,\n    innerRef,\n    inputFocusOutline,\n    inputFocusBorder,\n    inputFocusBoxShadow,\n    fontSize,\n  } = props;\n\n  const styles = {\n    padding,\n    height,\n    border,\n    borderbottom,\n    borderRadius,\n    bg,\n    maxLength,\n    backgroundImage,\n    inputFocusOutline,\n    inputFocusBorder,\n    inputFocusBoxShadow,\n    fontSize,\n  };\n  if (multiLine) {\n    return (\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        <ElTextarea\n          backgroundColor={backgroundColor}\n          value={value}\n          defaulValue={defaulValue}\n          rows={10}\n          maxLength={maxLength}\n          placeholder={placeholder}\n          onChange={_onChange}\n        ></ElTextarea>\n      </Grid>\n    );\n  }\n\n  if (edit) {\n    return (\n      <Grid>\n        {label && <Text margin=\"0px\">{label}</Text>}\n        <ElInput\n          {...styles}\n          backgroundColor={backgroundColor}\n          width={width}\n          margin={margin}\n          type={type}\n          value={value}\n          defaulValue={defaulValue}\n          placeholder={placeholder}\n          onChange={_onChange}\n          maxLength={maxLength}\n          ref={innerRef}\n          onKeyPress={(e) => {\n            console.log(e.key);\n            if (e.key === \"Enter\") {\n              console.log(\"pass\");\n              onSubmit(e);\n            }\n          }}\n        />\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid>\n      {label && <Text margin=\"0px\">{label}</Text>}\n      <ElInput\n        {...styles}\n        backgroundColor={backgroundColor}\n        width={width}\n        margin={margin}\n        type={type}\n        placeholder={placeholder}\n        value={editValue}\n        maxLength={maxLength}\n        defaulValue={defaulValue}\n        onChange={_onChange}\n        ref={innerRef}\n        onKeyPress={(e) => {\n          console.log(e.key);\n          if (e.key === \"Enter\") {\n            console.log(\"pass\");\n            onSubmit(e);\n          }\n        }}\n      />\n    </Grid>\n  );\n};\n\nInput.defaultProps = {\n  multiLine: false,\n  label: false,\n  placeholder: \"텍스트를 입력해주세요.\",\n  type: \"text\",\n  value: \"\",\n  defaulValue: \"\",\n  margin: 0,\n  padding: false,\n  width: \"100%\",\n  height: false,\n  border: false,\n  borderbottom: false,\n  borderRadius: false,\n  bg: false,\n  backgroundImage: false,\n  is_submit: false,\n  _onChange: () => {},\n  onSubmit: () => {},\n};\n\nconst ElTextarea = styled.textarea`\n  margin: ${(props) => props.margin};\n  border: ${(props) => props.border};\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  border-radius: 25px;\n  border-radius: ${(props) => props.borderRadius};\n  background: ${(props) => props.bg};\n  padding: ${(props) => props.padding};\n  background-image: ${(props) => props.backgroundImage};\n  box-sizing: border-box;\n  background-color: ${(props) => props.backgroundColor};\n  font-family: \"GmarketSans\";\n`;\n\nconst ElInput = styled.input`\n  margin: ${(props) => props.margin};\n  border: ${(props) => props.border};\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  text-align: ${(props) => props.textAlign};\n  border-radius: ${(props) => props.borderRadius};\n  border-bottom: ${(props) => props.borderBottom};\n  background: ${(props) => props.bg};\n  padding: ${(props) => props.padding};\n  background-image: ${(props) => props.backgroundImage};\n  box-sizing: border-box;\n\n  background-color: ${(props) => props.backgroundColor};\n  font-size: ${(props) => props.fontSize};\n  &:focus {\n    outline: ${(props) => props.inputFocusOutline};\n    border: ${(props) => props.inputFocusBorder};\n    box-shadow: ${(props) => props.inputFocusBoxShadow};\n  }\n  font-family: \"GmarketSans\";\n`;\n\nexport default Input;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = (props) => {\n  const {\n    isId,\n    isTest,\n    color,\n    text,\n    _onClick,\n    children,\n    margin,\n    width,\n    padding,\n    backgroundColor,\n    height,\n    fontSize,\n    borderRadius,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    display,\n    isValue,\n    disabled,\n    isChecked,\n    hoverBg,\n    hoverCl,\n    common,\n    border,\n    isActive,\n    zIndex,\n  } = props;\n\n  if (isTest) {\n    return (\n      <>\n        <TestButton\n          onClick={_onClick}\n          value={isValue}\n          disabled={disabled}\n          isChecked={isChecked}\n          id={isId}\n          isActive={isActive}\n        >\n          {text ? text : children}\n        </TestButton>\n      </>\n    );\n  }\n\n  if (common) {\n    const styles = {\n      margin,\n      width,\n      padding,\n      color,\n      height,\n      fontSize,\n      borderRadius,\n      top,\n      bottom,\n      left,\n      right,\n      border,\n      backgroundColor,\n    };\n    return (\n      <>\n        <Common\n          {...styles}\n          onClick={_onClick}\n          value={isValue}\n          disabled={disabled}\n          isChecked={isChecked}\n          id={isId}\n          isActive={isActive}\n        >\n          {text ? text : children}\n        </Common>\n      </>\n    );\n  }\n\n  const styles = {\n    margin,\n    width,\n    padding,\n    backgroundColor,\n    color,\n    height,\n    fontSize,\n    borderRadius,\n    top,\n    bottom,\n    left,\n    right,\n    hover,\n    display,\n    hoverBg,\n    hoverCl,\n    zIndex,\n  };\n\n  return (\n    <>\n      <ElButton {...styles} value={isValue} onClick={_onClick} id={isId}>\n        {text ? text : children}\n      </ElButton>\n    </>\n  );\n};\n\nButton.defaultProps = {\n  position: false,\n  text: false,\n  children: null,\n  _onClick: () => {},\n  isFloat: false,\n  margin: \"auto\",\n  width: \"100%\",\n  padding: \"12px 0px\",\n  color: \"white\",\n  height: \"50px\",\n  top: null,\n  bottom: null,\n  left: null,\n  right: null,\n  hover: null,\n  display: null,\n  isValue: null,\n};\n\nconst ElButton = styled.button`\n  width: ${(props) => props.width};\n  color: ${(props) => props.color};\n  padding: ${(props) => props.padding};\n  height: ${(props) => props.height};\n  font-size: ${(props) => props.fontSize};\n  margin: ${(props) => props.margin};\n  ${(props) =>\n    props.backgroundColor\n      ? `background-color:${props.backgroundColor}`\n      : \"background-color: #17334A\"};\n  box-sizing: border-box;\n  border-radius: 5px;\n  font-weight: bold;\n  ${(props) => (props.border ? `border:${props.border}` : \"border: none\")};\n  ${(props) =>\n    props.borderRadius\n      ? `border-radius:${props.borderRadius}`\n      : \"border-radius: 25px\"};\n  cursor: pointer;\n  flex-shrink: 0;\n  &:hover {\n    background-color: ${(props) => props.hoverBg};\n    color: ${(props) => props.hoverCl};\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  vertical-align: middle;\n  top: ${(props) => props.top};\n  bottom: ${(props) => props.bottom};\n  left: ${(props) => props.left};\n  right: ${(props) => props.right};\n  position: ${(props) => props.position};\n  flex-shrink: 0;\n  display: ${(props) => props.display};\n  z-index: ${(props) => props.zIndex};\n  font-family: \"GmarketSans\";\n`;\n\nconst FloatButton = styled.div`\n  width: 50px;\n  height: 50px;\n  background-color: #ffffff;\n  color: ${(props) => props.color};\n  box-sizing: border-box;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.12), 0 2px 5px rgba(0, 0, 0, 0.24);\n  font-size: 36px;\n  font-weight: bold;\n  position: fixed;\n  bottom: 50px;\n  right: 16px;\n  text-align: center;\n  vertical-align: middle;\n  border: none;\n  border-radius: 50px;\n  display: ${(props) => props.display};\n`;\n\nconst TestButton = styled.button`\n  font-size: 12px;\n  text-align: center;\n  border: 1px solid #17334a;\n  border-radius: 25px;\n  padding: 20px;\n  margin: 5px;\n  box-shadow: 0px 2px 2px #ddd;\n  font-family: \"GmarketSans\";\n  font-weight: 400;\n  background-color: ${(props) => (props.isActive == true ? \"#17334A\" : \"#fff\")};\n  color: ${(props) => (props.isActive == true ? \"#fff\" : \"#17334A\")};\n\n  &:hover {\n    background-color: #17334a;\n    cursor: pointer;\n    color: #fff;\n    box-shadow: 0px 3px 2px #ddd;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  /* &::active {\n    box-shadow: 0px 1px 2px #111;\n    transform: translateY(10px);\n  }\n  &::disabled {\n    cursor: default;\n    opacity: 0.7;\n  } */\n`;\n\nconst Common = styled.button`\n  background-color: ${(props) => (props.isActive == true ? \"#17334A\" : \"#fff\")};\n  height: ${(props) => props.height};\n  width: ${(props) => props.width};\n  color: ${(props) => (props.isActive == true ? \"#fff\" : \"#17334A\")};\n  margin-right: 3px;\n  border-radius: 25px;\n  border: 1px solid #17334a;\n  cursor: pointer;\n  top: ${(props) => props.top};\n  bottom: ${(props) => props.bottom};\n  left: ${(props) => props.left};\n  right: ${(props) => props.right};\n  position: ${(props) => props.position};\n  &:hover {\n    background-color: #17334a;\n    color: #fff;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n  font-family: \"GmarketSans\";\n`;\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/Logo.df9d5eaf.png\";","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Image } from \"../elements/Index\";\nimport Logo from \"../images/Logo.png\";\nimport { history } from \"../redux/configureStore\";\n\nconst HeaderLeft = () => {\n  return (\n    <Grid>\n      <LogoDiv>\n        <img\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            history.push(\"/\");\n          }}\n          src={Logo}\n          width=\"100px\"\n        />\n      </LogoDiv>\n    </Grid>\n  );\n};\nconst LogoDiv = styled.div`\n  width: 15%;\n  @media screen and (max-width: 750px) {\n    width: 35%;\n  } ;\n`;\nexport default HeaderLeft;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestOne = (props) => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter((btn) => btn.question === \"Q1\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter((btn) => btn.question === \"Q1\")\n  );\n\n  const clickUser = (btnUserId) => {\n    console.log(btnUserId);\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = (btnMemberId) => {\n    setNowClickMB((state) => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid height=\"100%\">\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"20px 0\" height=\"50%\" bg=\"#111\">\n          <Grid height=\"20%\">\n            <Grid margin=\"5px 0\">\n              <Text>\n                Q1. <b>팀 회의할 때 당신의 모습</b>에 더 가까운 것은?\n              </Text>\n            </Grid>\n            {nowClickU.map((btn, idx) => (\n              <Grid height=\"10%\" key={btn.id} {...btn}>\n                <Button\n                  isId={btn.id}\n                  isValue={btn.value}\n                  isTest\n                  text={btn.text}\n                  isActive={btn.active}\n                  _onClick={(e) => {\n                    clickUser(e.target.id);\n                    handleUserCreate(e.target.value);\n                  }}\n                ></Button>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Grid height=\"50%\">\n          <Grid margin=\"5px 0\" height=\"20%\">\n            Q1. <b>팀 회의할 때 선호하는 팀원의 모습</b>에 더 가까운 것은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid height=\"20%\" key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestOne;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestTwo = (props) => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter((btn) => btn.question === \"Q2\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter((btn) => btn.question === \"Q2\")\n  );\n\n  const clickUser = (btnUserId) => {\n    console.log(btnUserId);\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = (btnMemberId) => {\n    setNowClickMB((state) => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid>\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"20px 0\">\n          <Grid>\n            Q2. 새로운 스터디 사람들과의 첫만남! 스터디의 운영을 맡길{\" \"}\n            <b>스터디 장을 뽑아야 하는데 이때 당신의 행동</b>은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid>\n          <Grid>\n            Q2. 새로운 스터디 사람들과의 첫만남! 스터디의 운영을 맡길{\" \"}\n            <b>스터디 장을 뽑아야 하는데 이때 당신이 선호하는 팀원의 행동</b>은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestTwo;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestThree = (props) => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter((btn) => btn.question === \"Q3\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter((btn) => btn.question === \"Q3\")\n  );\n\n  const clickUser = (btnUserId) => {\n    console.log(btnUserId);\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = (btnMemberId) => {\n    setNowClickMB((state) => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid>\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"20px 0\">\n          <Grid>\n            Q3. <b>나는 큰 보상과 무거운 책임</b>보다는{\" \"}\n            <b>평범한 보상과 책임</b>이 더 좋다.\n            {nowClickU.map((btn, idx) => (\n              <Grid key={btn.id} {...btn}>\n                <Button\n                  isId={btn.id}\n                  isValue={btn.value}\n                  isTest\n                  text={btn.text}\n                  isActive={btn.active}\n                  _onClick={(e) => {\n                    clickUser(e.target.id);\n                    handleUserCreate(e.target.value);\n                  }}\n                ></Button>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Grid>\n          <Grid>\n            Q3. <b>내 팀원은 큰 보상과 무거운 책임</b>보다는{\" \"}\n            <b>평범한 보상과 책임을 더 좋아했으면</b> 좋겠다.\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestThree;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestFour = (props) => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter((btn) => btn.question === \"Q4\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter((btn) => btn.question === \"Q4\")\n  );\n\n  const clickUser = (btnUserId) => {\n    console.log(btnUserId);\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = (btnMemberId) => {\n    setNowClickMB((state) => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid>\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"20px 0\">\n          <Grid>\n            Q4.<b>프로젝트를 진행</b>함에 있어서 <b>당신의 생각</b>에 더 가까운\n            문장은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid>\n          <Grid>\n            Q4.<b>프로젝트를 진행</b>함에 있어서 당신이 원하는{\" \"}\n            <b>팀원의 생각</b>에 더 가까웠으면 하는 문장은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestFour;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestFive = (props) => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter((btn) => btn.question === \"Q5\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter((btn) => btn.question === \"Q5\")\n  );\n\n  const clickUser = (btnUserId) => {\n    console.log(btnUserId);\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = (btnMemberId) => {\n    setNowClickMB((state) => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid>\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"20px 0\">\n          <Grid>\n            Q5.<b>당신</b>이 생각하는 <b>이상적인 회의</b>의 모습은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid>\n          <Grid>\n            Q5.당신의 <b>팀원이 원했으면 하는 이상적인 회의</b>의 모습은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestFive;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestSix = (props) => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter((btn) => btn.question === \"Q6\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter((btn) => btn.question === \"Q6\")\n  );\n\n  const clickUser = (btnUserId) => {\n    console.log(btnUserId);\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = (btnMemberId) => {\n    setNowClickMB((state) => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid>\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"20px 0\">\n          <Grid>\n            Q6.당신이 생각할 때 더 <b>좋은 성과를 만들 수 있을 것 같은 팀</b>은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid>\n          <Grid>\n            Q6.<b>당신의 팀원이 선호했으면 하는 팀</b>은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestSix;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestSeven = (props) => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter((btn) => btn.question === \"Q7\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter((btn) => btn.question === \"Q7\")\n  );\n\n  const clickUser = (btnUserId) => {\n    console.log(btnUserId);\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = (btnMemberId) => {\n    setNowClickMB((state) => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid>\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"20px 0\">\n          <Grid>\n            Q. <b>당신과 어울리는 문장</b>은 무엇인가요?\n            {nowClickU.map((btn, idx) => (\n              <Grid key={btn.id} {...btn}>\n                <Button\n                  isId={btn.id}\n                  isValue={btn.value}\n                  isTest\n                  text={btn.text}\n                  isActive={btn.active}\n                  _onClick={(e) => {\n                    clickUser(e.target.id);\n                    handleUserCreate(e.target.value);\n                  }}\n                ></Button>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n        <Grid>\n          <Grid>\n            Q. 어떤 문장이 <b>당신이 선호하는 팀원의 모습</b>과 더 어울리나요?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestSeven;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestEight = (props) => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter((btn) => btn.question === \"Q8\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter((btn) => btn.question === \"Q8\")\n  );\n\n  const clickUser = (btnUserId) => {\n    console.log(btnUserId);\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = (btnMemberId) => {\n    setNowClickMB((state) => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid>\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"20px 0\">\n          <Grid>\n            Q8.<b>프로젝트에서 문제</b>가 생겼을 때{\" \"}\n            <b>당신이 생각하는 더 나은 방법</b>은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid>\n          <Grid>\n            Q8.<b>프로젝트에서 문제</b>가 생겼을 때{\" \"}\n            <b>당신의 팀원이 생각했으면 하는 방법</b>은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestEight;\n","/* eslint-disable */\nimport React from \"react\";\nimport TestData from \"./Testdata.json\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\n\nconst TestNine = (props) => {\n  const { handleUserCreate, handleMemberCreate } = props;\n  const [nowClickU, setNowClickU] = React.useState(\n    TestData.userbtn.filter((btn) => btn.question === \"Q9\")\n  );\n  const [nowClickMB, setNowClickMB] = React.useState(\n    TestData.memberbtn.filter((btn) => btn.question === \"Q9\")\n  );\n\n  const clickUser = (btnUserId) => {\n    console.log(btnUserId);\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id === btnUserId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickU((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnUserId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  const clickMember = (btnMemberId) => {\n    setNowClickMB((state) => {\n      return state.map((stateItem, idx) => {\n        if (stateItem.id === btnMemberId) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n    setNowClickMB((state) => {\n      return state.map((stateItem) => {\n        if (stateItem.id !== btnMemberId && stateItem.active === true) {\n          return { ...stateItem, active: !stateItem.active };\n        }\n        return stateItem;\n      });\n    });\n  };\n\n  return (\n    <Grid>\n      <Grid display=\"flex\" flexDirection=\"column\">\n        <Grid margin=\"20px 0\">\n          <Grid>\n            Q9. 당신이 지금까지 진행했던{\" \"}\n            <b>프로젝트를 떠올렸을 때 가장 먼저 생각나는 부분</b>은?\n          </Grid>\n          {nowClickU.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickUser(e.target.id);\n                  handleUserCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n        <Grid>\n          <Grid>\n            Q9.당신의{\" \"}\n            <b>팀원이 프로젝트를 떠올렸을 때 가장 먼저 생각났으면 하는 부분</b>\n            은?\n          </Grid>\n          {nowClickMB.map((btn, idx) => (\n            <Grid key={btn.id} {...btn}>\n              <Button\n                isId={btn.id}\n                isValue={btn.value}\n                isTest\n                text={btn.text}\n                isActive={btn.active}\n                _onClick={(e) => {\n                  clickMember(e.target.id);\n                  handleMemberCreate(e.target.value);\n                }}\n              ></Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TestNine;\n","/* eslint-disable */\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Button, Image, Text } from \"../../elements/Index\";\nimport TestData from \"./Testdata.json\";\n\nconst TestResult = (props) => {\n  const myUserType = useSelector((state) => state.user.userPropensityType);\n  console.log(myUserType);\n  const resultType = TestData.usertype.filter(\n    (type) => type?.userType === myUserType\n  );\n\n  React.useLayoutEffect(() => {}, [myUserType]);\n\n  return (\n    <Grid>\n      {myUserType && (\n        <Grid textAlign=\"center\" width=\"90%\" margin=\"auto\">\n          <Grid textAlign=\"left\">\n            <Text bold size=\"12px\">\n              당신의 성향은?\n            </Text>\n          </Grid>\n          <Grid display=\"flex\" justifyContent=\"center\">\n            {resultType?.map((type) => (\n              <Grid key={type.userType} {...type}>\n                <Grid\n                  bg=\"#17334A\"\n                  borderRadius=\"20px\"\n                  padding=\"12px 0\"\n                  margin=\"12px 0\"\n                >\n                  <Text size=\"14px\" color=\"#fff\">\n                    {type.title}\n                  </Text>\n                </Grid>\n                <Grid\n                  margin=\"12px 0\"\n                  borderRadius=\"20px\"\n                  border=\"1px solid #17334A\"\n                  padding=\"40px 0\"\n                >\n                  <Text size=\"12px\">\n                    {type.text1} <br />\n                    {type.text2}\n                    <br /> {type.text3}\n                    <br /> {type.text4}\n                  </Text>\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default TestResult;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../elements/Index\";\n\nconst Progress = (props) => {\n  let count = 10;\n  let currentStep = props.page;\n\n  return (\n    <Grid\n      position=\"relative\"\n      height=\"60px\"\n      display=\"flex\"\n      alignItems=\"end\"\n      margin=\"auto\"\n    >\n      <Grid\n        width=\"50px\"\n        position=\"absolute\"\n        left={(currentStep / count) * 100 - 8 + \"%\"}\n      >\n        <ArrowBubbleTwo>\n          <Grid display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Text bold size=\"12px\">\n              {(currentStep / count) * 100 + \"%\"}\n            </Text>\n          </Grid>\n        </ArrowBubbleTwo>\n      </Grid>\n      <ProgressBar>\n        <HighLight width={(currentStep / count) * 100 + \"%\"} />\n      </ProgressBar>\n    </Grid>\n  );\n};\n\nconst ProgressBar = styled.div`\n  border: 3px solid #17334a;\n  border-radius: 25px;\n  background: #f1f9ff;\n  width: 100%;\n  height: 15px;\n`;\n\nconst HighLight = styled.div`\n  border-radius: 25px;\n  border: none;\n  background: #17334a;\n  transition: 1s;\n  width: ${(props) => props.width};\n  height: 15px;\n`;\n\nconst ArrowBubbleTwo = styled.div`\n  position: relative;\n  width: 100%;\n  height: 25px;\n  padding: 0 5px;\n  background: #f1f9ff;\n  /* -webkit-border-radius: 35px;\n  -moz-border-radius: 35px; */\n  border-radius: 10px;\n  border: #17334a solid 3px;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-width: 10px 15px 0;\n    border-color: #f1f9ff transparent;\n    display: block;\n    width: 0;\n    z-index: 1;\n    bottom: -4px;\n    left: 15px;\n  }\n\n  ::before {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-width: 8px 12px 0;\n    border-color: #17334a transparent;\n    display: block;\n    width: 0;\n    z-index: 0;\n    bottom: -8px;\n    left: 18px;\n  }\n`;\n\nexport default Progress;\n","/* eslint-disable */\r\nimport { NoEncryption } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid } from \"../elements/Index\";\r\nconst ImgType = (props) => {\r\n  const {\r\n    margin,\r\n    width,\r\n    height,\r\n    _onClick,\r\n    cursor,\r\n    object_fit,\r\n    position,\r\n    right,\r\n    bottom,\r\n  } = props;\r\n  const styles = {\r\n    margin,\r\n    width,\r\n    height,\r\n    cursor,\r\n    object_fit,\r\n    position,\r\n    right,\r\n    bottom,\r\n  };\r\n  const [imges, setImges] = React.useState([\r\n    {\r\n      id: \"tiger\",\r\n      type: \"LVG\",\r\n      img: \"/img/호랑이.png\",\r\n    },\r\n    {\r\n      id: \"wolf\",\r\n      type: \"LVP\",\r\n      img: \"/img/늑대.png\",\r\n    },\r\n    {\r\n      id: \"fox\",\r\n      type: \"LHG\",\r\n      img: \"/img/여우.png\",\r\n    },\r\n    {\r\n      id: \"panda\",\r\n      type: \"LHP\",\r\n      img: \"/img/판다.png\",\r\n    },\r\n    {\r\n      id: \"rabbit\",\r\n      type: \"FVG\",\r\n      img: \"/img/토끼.png\",\r\n    },\r\n    {\r\n      id: \"dog\",\r\n      type: \"FVP\",\r\n      img: \"/img/개.png\",\r\n    },\r\n    {\r\n      id: \"cat\",\r\n      type: \"FHG\",\r\n      img: \"/img/고양이.png\",\r\n    },\r\n    {\r\n      id: \"seal\",\r\n      type: \"FHP\",\r\n      img: \"/img/물개.png\",\r\n    },\r\n    {\r\n      id: \"raccoons\",\r\n      type: \"RHP\",\r\n      img: \"/img/너구리.png\",\r\n    },\r\n  ]);\r\n  const [result, setResult] = React.useState();\r\n  React.useEffect(() => {\r\n    // console.log(\"여기좀 보슈\", props.type);\r\n    imges.map((item) => {\r\n      if (item.type === props.type) {\r\n        setResult(item.img);\r\n        return item;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {result && (\r\n        <Img key={imges.id} {...styles} src={result} onClick={_onClick} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nImgType.defaultProps = {\r\n  margin: \"6px\",\r\n  width: \"48px\",\r\n  height: \"48px\",\r\n  object_fit: null,\r\n  position: null,\r\n  right: null,\r\n  bottom: null,\r\n  _onClick: () => {},\r\n};\r\n\r\nconst Img = styled.img`\r\n  width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n  margin: ${(props) => props.margin};\r\n  cursor: ${(props) => props.cursor};\r\n  object-fit: ${(props) => props.object_fit};\r\n  position: ${(props) => props.position};\r\n  right: ${(props) => (props.src === \"LVP\" ? \"0px\" : props.right)};\r\n  bottom: ${(props) => (props.src === \"LVP\" ? \"50px\" : null)};\r\n`;\r\nexport default ImgType;\r\n","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  TestOne,\n  TestTwo,\n  TestThree,\n  TestFour,\n  TestFive,\n  TestSix,\n  TestSeven,\n  TestEight,\n  TestNine,\n  TestResult,\n} from \"./TestIndex\";\nimport TestData from \"./Testdata.json\";\nimport Progress from \"./Progress\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, Button, Image, Text } from \"../../elements/Index\";\nimport { userCreators } from \"../../redux/modules/user\";\nimport { history } from \"../../redux/configureStore\";\nimport ImgType from \"../../shared/ImgType\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst PropensityTest = (props) => {\n  const isToken = document.cookie.split(\"=\")[1];\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.user);\n  const userType = useSelector((state) => state.user.userPropensityType);\n  const memberType = useSelector((state) => state.user.memberPropensityType);\n  // const [active, setActive] = React.useState(preUserPropensityType);\n  const [isChecked, setIsChecked] = React.useState(\"#fff\");\n  const ToggleButton = (answer) => {\n    isChecked === \"#fff\" ? setIsChecked(\"#170184\") : setIsChecked(\"#fff\");\n  };\n\n  //스텝별로 스테이트 변화값에 따라 텍스트가 바뀌는지 먼저 확인\n  const [page, setpage] = useState(1);\n  // console.log(page, TestData.teststep);\n\n  // 최종 장소\n  const [userPropensityType, setUserPropensityType] = useState([]);\n  const [memberPropensityType, setMemberPropensityType] = useState([]);\n  //임시 장소\n  const [preUserPropensityType, setPreUserPropensityType] = useState(\"\");\n  const [preMemberPropensityType, setPreMemberPropensityType] = useState(\"\");\n\n  //자식요소의 밸류값을 가져와 임시에 저장\n  const handleUserCreate = (answer) => {\n    setPreUserPropensityType(answer);\n    // console.log(\"나의항목 임시저장\", answer);\n  };\n  const handleMemberCreate = (answer) => {\n    setPreMemberPropensityType(answer);\n    // console.log(\"상대방의 항목 임시저장\", answer);\n  };\n\n  //스테이트값에 변화를 버튼에 달아줌\n  //다음버튼 누를시에 변화된 값을 스테이트에 담아줌\n  const nextStep = () => {\n    //나에대한 항목\n    let preMy = userPropensityType;\n    let preYou = memberPropensityType;\n    // console.log(preUserPropensityType, preMemberPropensityType);\n\n    if (preUserPropensityType === \"\" || preMemberPropensityType === \"\") {\n      return window.alert(\"문항을 선택해주세요!\");\n      // Swal.fire(\n      //   '문항을 선택해주세요!',\n      //   '',\n      //   'info'\n      // )\n    } else {\n      setpage((page) => page + 1);\n      setPreUserPropensityType(\"\");\n      setPreMemberPropensityType(\"\");\n      preMy.push(preUserPropensityType);\n      setUserPropensityType(preMy);\n      // console.log(\"내꺼 잘 들어감?\", userPropensityType);\n      //상대에 다한 항목\n\n      preYou.push(preMemberPropensityType);\n      setMemberPropensityType(preYou);\n      // console.log(\"너꺼 잘 들어감?\", memberPropensityType);\n    }\n  };\n\n  //이전버튼 누를시에 마지막으로 저장된값을 스테이트에 삭제함\n  const preStep = () => {\n    setpage((page) => page - 1);\n\n    // 이전으로가면 마지막항목 제거 (나의것)\n    let toPopMy = userPropensityType;\n    toPopMy.pop();\n    setUserPropensityType(toPopMy);\n    // console.log(\"마지막 항목이 사라짐?\", userPropensityType);\n    //이전으로 가면 마지막 항목 제거 (상대방의 것)\n    let topopYou = memberPropensityType;\n    topopYou.pop();\n    setMemberPropensityType(topopYou);\n    // console.log(\"마지막 항목이 사라짐?\", memberPropensityType);\n  };\n\n  //회원가입\n  const register = () => {\n    setPreUserPropensityType(\"\");\n    setPreMemberPropensityType(\"\");\n    //나에대한 항목\n    let preMy = userPropensityType;\n    preMy.push(preUserPropensityType);\n    setUserPropensityType(preMy);\n    // console.log(\"내꺼 잘 들어감?\", userPropensityType);\n\n    //상대에 다한 항목\n    let preYou = memberPropensityType;\n    preYou.push(preMemberPropensityType);\n    setMemberPropensityType(preYou);\n    // console.log(\"너꺼 잘 들어감?\", memberPropensityType);\n\n    let realSnsId = String(userInfo.snsId);\n    let realUserId = userInfo.userId;\n\n    const registerInfo = {\n      snsId: realSnsId,\n      email: userInfo.email,\n      nickname: userInfo.nickName,\n      techStack: userInfo.techStack,\n      userPropensityType: userPropensityType,\n      memberPropensityType: memberPropensityType,\n    };\n    const testUpdateInfo = {\n      userPropensityType: userPropensityType,\n      memberPropensityType: memberPropensityType,\n    };\n\n    if (isToken) {\n      dispatch(userCreators.editTestMiddleware(realUserId, testUpdateInfo));\n      return setpage((page) => page + 1);\n    } else {\n      dispatch(userCreators.signupMiddleware(registerInfo));\n      setpage((page) => page + 1);\n    }\n  };\n\n  const exitResult = () => {\n    dispatch(userCreators.modal());\n    history.push(\"/\");\n    props.TestClose();\n  };\n\n  return (\n    <Grid>\n      {/* 상단헤더 */}\n      <Grid\n        height=\"7%\"\n        bg=\"#17334A\"\n        position=\"relative\"\n        textAlign=\"center\"\n        padding=\"10px 0 10px 0\"\n      >\n        <Grid\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n        >\n          {/* <CloseIcon\n            sx={{ color: \"#fff\", fontSize: 35 }}\n            onClick={props.TestClose}\n            cursor=\"pointer\"\n          /> */}\n        </Grid>\n        <Grid\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          height=\"40px\"\n        >\n          <Text size=\"20px\" bold color=\"#fff\">\n            협업테스트\n          </Text>\n        </Grid>\n      </Grid>\n      {/* 프로그래스바 */}\n      <Grid width=\"70%\" margin=\"15px auto\" height=\"10%\">\n        <Progress page={page} />\n      </Grid>\n      {/* 이미지결과 */}\n      <Grid display=\"flex\" justifyContent=\"center\" margin=\"10px 0\" height=\"25%\">\n        {TestData.teststep.map((step) => {\n          if (step.step === page) {\n            return <img width=\"40%\" src={step.img} />;\n          }\n        })}\n        {page === 10 &&\n          TestData.testresult.map((result) => {\n            if (result.type === userType) {\n              return <img width=\"50%\" src={result.img} />;\n            }\n          })}\n      </Grid>\n\n      {/* 컨텐츠자리 */}\n      <Grid height=\"15%\" width=\"90%\" margin=\"auto\" height=\"50%\">\n        {page === 1 && (\n          <TestOne\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 2 && (\n          <TestTwo\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 3 && (\n          <TestThree\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 4 && (\n          <TestFour\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 5 && (\n          <TestFive\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 6 && (\n          <TestSix\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 7 && (\n          <TestSeven\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 8 && (\n          <TestEight\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 9 && (\n          <TestNine\n            handleUserCreate={handleUserCreate}\n            handleMemberCreate={handleMemberCreate}\n          />\n        )}\n        {page === 10 && <TestResult userType={userType} />}\n      </Grid>\n      {/* 버튼 */}\n      <Grid\n        display=\"flex\"\n        width=\"90%\"\n        justifyContent=\"center\"\n        height=\"8%\"\n        margin=\"30px auto\"\n      >\n        {/* 5.다음결과값이 없을때 페이지처리 */}\n        {page !== 1 && page !== 10 && (\n          <Button width=\"40%\" margin=\"5px\" _onClick={preStep}>\n            이전버튼\n          </Button>\n        )}\n        {page < 9 && (\n          <Button width=\"40%\" margin=\"5px\" _onClick={nextStep}>\n            다음버튼\n          </Button>\n        )}\n        {page == 9 && (\n          <Button width=\"40%\" margin=\"5px\" _onClick={register}>\n            제출하기\n          </Button>\n        )}\n        {page == 10 && (\n          <Button common width=\"90%\" margin=\"5px\" _onClick={exitResult}>\n            내 성향에 맞는 팀원을 찾으러 가볼까요?\n          </Button>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst TestWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  @media (max-width: 550px) {\n    width: 90vw;\n    height: 100%;\n  }\n`;\nexport default PropensityTest;\n","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { Grid, Input, Text, Button, Image } from \"../elements/Index\";\nimport { Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { userCreators } from \"../redux/modules/user\";\nimport Select from \"react-select\";\n\nimport PropensityTest from \"./propensityTest/PropensityTest\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst LoginModal = (props) => {\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.user);\n  const sigunupModalState = useSelector(\n    (state) => state.user.sigunupModalState\n  );\n\n  var regExpNick = /^[a-zA-Z0-9ㄱ-ㅎ|ㅏ-ㅣ|가-힣]{2,5}$/;\n  var regExpEmail =\n    /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n\n  //테크스택 옵션\n  const techStackOption = [\n    { value: \"React\", label: \"React\" },\n    { value: \"Java\", label: \"Java\" },\n    { value: \"Spring\", label: \"Spring\" },\n    { value: \"JavaScript\", label: \"JavaScript\" },\n    { value: \"Python\", label: \"Python\" },\n    { value: \"Node\", label: \"Node\" },\n    { value: \"cpp\", label: \"C++\" },\n    { value: \"Flask\", label: \"Flask\" },\n    { value: \"Django\", label: \"Django\" },\n    { value: \"Vue\", label: \"Vue\" },\n    { value: \"php\", label: \"php\" },\n    { value: \"Swift\", label: \"Swift\" },\n    { value: \"Kotlin\", label: \"Kotlin\" },\n    { value: \"TypeScript\", label: \"TypeScript\" },\n  ];\n\n  //모달\n  const { showModal, setShowModal } = props;\n\n  const TestClose = () => {\n    setShowModal(false);\n  };\n  const modalClose = () => {\n    setShowModal(false);\n  };\n\n  //입력부분\n  const [nickName, setNickName] = useState();\n  const [email, setEmail] = useState(userInfo.email);\n  const [techStack, setTeckstack] = useState([]);\n  const [emailDup, setEmailDup] = useState(false);\n  const [nameDup, setNameDup] = useState(false);\n  const [test, setTest] = useState(false);\n\n  // console.log(\"닉네임\", nickName);\n  // console.log(\"이메일\", email);\n  // console.log(\"기술스택\", techStack);\n  // console.log(\"sns아이디\", userInfo.snsId);\n\n  //닉네임 체크 미들웨어\n  const nickCheck = (nickName) => {\n    if (nickName === undefined) {\n      alert(\"닉네임을 입력 해주세요.\");\n      return false;\n    }\n\n    if (!regExpNick.test(nickName)) {\n      alert(\"닉네임은 2~5자 숫자 조합만 가능합니다.\");\n      return false;\n    }\n    dispatch(userCreators.nickCheckMiddleWare(nickName));\n  };\n\n  //이메일 체크 미들웨어\n  const emailCheck = (email) => {\n    if (nickName === \"\") {\n      alert(\"이메일을 입력 해주세요.\");\n      return false;\n    }\n\n    if (!regExpEmail.test(email)) {\n      alert(\"이메일 형식을 확인해주세요.\");\n      return false;\n    }\n    dispatch(userCreators.emailCheckMiddleWare(email));\n  };\n\n  //테스트 마친 회원가입 api\n  const preSignUP = () => {\n    if (techStack.length === 0) {\n      alert(\"기술스택을 선택 해주세요.\");\n      return false;\n    }\n    if (techStack.length >= 3) {\n      alert(\"기술선택을 4개 이하로 입력해주세요.\");\n      return false;\n    }\n    if (nameDup === false) {\n      alert(\"닉네임 중복확인을 해주세요.\");\n      return false;\n    }\n    const registerInfo = {\n      snsId: userInfo.snsId,\n      email: userInfo.email,\n      nickName: nickName,\n      techStack: techStack,\n    };\n    // console.log(registerInfo);\n    dispatch(userCreators.testUserMiddleWare(registerInfo));\n    setTest(true);\n  };\n\n  const customStyles = {\n    control: (styles) => ({\n      ...styles,\n      backgroundColor: \"white\",\n      borderRadius: \"20px\",\n    }),\n    multiValue: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      backgroundColor: \"#17334A\",\n      color: \"white\",\n      borderRadius: \"20px\",\n    }),\n    multiValueLabel: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n    }),\n    multiValueRemove: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      \":hover\": {\n        backgroundColor: data.color,\n        color: \"white\",\n      },\n    }),\n  };\n  //회원가입이 필요한 유저일경우 모달창 활성화\n  React.useEffect(() => {\n    if (sigunupModalState) {\n      setShowModal(true);\n    }\n  }, [sigunupModalState]);\n\n  //개선해야됨\n  // const openWindow = () => {\n  //   let customWindow = window.open(\n  //     \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\",\n  //     \"\",\n  //     \"_blank\"\n  //   );\n\n  //   // setTimeout(() => {\n  //   //   customWindow.close();\n  //   // }, 5000);\n\n  //   //   //s3\n  //   //   // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://kbumsoo.s3-website.ap-northeast-2.amazonaws.com/user/kakao/callback&response_type=code\";\n\n  //   //   //local\n  //   //   // (\"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\");\n\n  //   //   // 최종 주소\n  //   //   // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=https://scopewith.com/user/kakao/callback&response_type=code\";\n  // };\n\n  const closeWindow = () => {\n    setTimeout(() => {\n      window.close();\n    }, 500);\n  };\n\n  //회원이 아닐경우 회원가입, 회원일 경우 메인으로 이동\n  if (sigunupModalState == true) {\n    return (\n      <Dialog\n        maxWidth={\"sm\"}\n        scroll=\"paper\"\n        open={showModal}\n        // onClose={modalClose}\n      >\n        <ModalWrap>\n          {/* 테스트가 필요한경우 */}\n          {!test ? (\n            <Grid>\n              {/* 헤더 */}\n              <Grid\n                height=\"15%\"\n                bg=\"#17334A\"\n                position=\"relative\"\n                textAlign=\"center\"\n                padding=\"10px 0 10px 0\"\n              >\n                <Grid\n                  position=\"absolute\"\n                  top=\"0px\"\n                  right=\"10px\"\n                  width=\"20px\"\n                  padding=\"10px\"\n                >\n                  <CloseIcon\n                    sx={{ color: \"#fff\", fontSize: 35 }}\n                    onClick={TestClose}\n                    cursor=\"pointer\"\n                  />\n                </Grid>\n                <Grid\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  height=\"40px\"\n                >\n                  <Text size=\"20px\" bold color=\"#fff\">\n                    회원가입\n                  </Text>\n                </Grid>\n              </Grid>\n              {/* 타이틀 */}\n              <Grid textAlign=\"center\" margin=\"40px 0 10px 0\">\n                <Text bold size=\"33px\">\n                  Welcome to Scope!\n                </Text>\n              </Grid>\n              {/* 입력부분 */}\n              <Grid\n                display=\"flex\"\n                justifyContent=\"center\"\n                height=\"10%\"\n                textAlign=\"center\"\n                padding=\"10px 0\"\n                margin=\"auto\"\n              >\n                <Grid width=\"90%\" height=\"70%\" display=\"flex\">\n                  {/* 라벨 */}\n                  <Grid\n                    width=\"15%\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"top\"\n                    margin=\"5px auto\"\n                    height=\"280px\"\n                  >\n                    <Grid\n                      height=\"29%\"\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                      margin=\"20px 0 10px 0\"\n                    >\n                      <Text color=\"#111\">닉네임</Text>\n                    </Grid>\n                    <Grid padding=\"10px 0 0 0\">\n                      <Text color=\"#111\">기술스택</Text>\n                    </Grid>\n                  </Grid>\n                  {/* 입력부분 */}\n                  <Grid\n                    width=\"60%\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"top\"\n                    margin=\"15px auto\"\n                    height=\"280px\"\n                  >\n                    <Grid height=\"14%\" margin=\"16px 0\">\n                      <Input\n                        borderRadius=\"25px\"\n                        border=\"1px solid #ddd\"\n                        fontSize=\"16px\"\n                        padding=\"0 0 0 23px\"\n                        height=\"100%\"\n                        placeholder=\"닉네임을 입력해주세요\"\n                        _onChange={(e) => {\n                          setNickName(e.target.value);\n                        }}\n                      >\n                        닉네임\n                      </Input>\n                    </Grid>\n                    <Grid height=\"40%\" padding=\"0 0 10px 0\">\n                      <Select\n                        styles={customStyles}\n                        placeholder=\"보유중인 기술을 선택해주세요!\"\n                        isMulti\n                        name=\"techStack\"\n                        options={techStackOption}\n                        className=\"basic-multi-select\"\n                        classNamePrefix=\"select\"\n                        onChange={(e) => {\n                          let techStack = [];\n                          let arr = e;\n                          let idx = 0;\n                          for (idx = 0; idx < e.length; idx++) {\n                            techStack.push(arr[idx][\"value\"]);\n                          }\n                          setTeckstack(techStack);\n                        }}\n                      >\n                        기술스택\n                      </Select>\n                    </Grid>\n                  </Grid>\n                  {/* 중복체크 */}\n                  <Grid\n                    width=\"20%\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    justifyContent=\"center\"\n                    margin=\"10px auto\"\n                    height=\"280px\"\n                  >\n                    {/* <Grid height=\"20%\" margin=\"0 0 22px 0\">\n                      <Button\n                        height=\"52px\"\n                        fontSize=\"12px\"\n                        text=\"이메일 중복\"\n                        _onClick={() => {\n                          emailCheck(email);\n                          setEmailDup(true);\n                        }}\n                      ></Button>\n                    </Grid> */}\n                    <Grid height=\"85%\">\n                      <Button\n                        height=\"38px\"\n                        fontSize=\"12px\"\n                        text=\"닉네임 중복\"\n                        _onClick={() => {\n                          nickCheck(nickName);\n                          setNameDup(true);\n                        }}\n                      ></Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              {/* 버튼 */}\n              <Grid width=\"50%\" margin=\"auto\">\n                <Button\n                  text=\"성향테스트\"\n                  margin=\"30px 0\"\n                  _onClick={() => {\n                    preSignUP();\n                  }}\n                ></Button>\n              </Grid>\n            </Grid>\n          ) : (\n            <PropensityTest TestClose={TestClose} />\n          )}\n          <Grid display=\"flex\" justifyContent=\"center\" margin=\"10px 0 30px 0\">\n            <Grid width=\"20%\" backgroundColor=\"#554475\" height=\"3px\"></Grid>\n          </Grid>\n        </ModalWrap>\n      </Dialog>\n    );\n  } else {\n    return (\n      <Dialog maxWidth={\"md\"} scroll=\"paper\" open={showModal}>\n        <ModalWrap>\n          <Grid\n            height=\"15%\"\n            bg=\"#17334A\"\n            width\n            position=\"relative\"\n            padding=\"10px 0 10px 0\"\n          >\n            <Grid\n              position=\"absolute\"\n              top=\"0px\"\n              right=\"4%\"\n              width=\"3%\"\n              padding=\"10px\"\n            >\n              <CloseIcon\n                sx={{ color: \"#fff\", fontSize: 35 }}\n                onClick={modalClose}\n                cursor=\"pointer\"\n              />\n            </Grid>\n            <Grid\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              height=\"40px\"\n            >\n              <Text size=\"25px\" bold color=\"#fff\">\n                로그인\n              </Text>\n            </Grid>\n          </Grid>\n          <Grid height=\"80%\" padding=\"20px 0\">\n            <Grid\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              position=\"relative\"\n              justifyContent=\"center\"\n            >\n              <Grid margin=\"20px\" display=\"flex\" justifyContent=\"center\">\n                <img width=\"40%\" src=\"/img/호랑이.png\" />\n              </Grid>\n              <Text size=\"30px\" bold=\"800\" margin=\"0 0 30px 0\">\n                Welcome to Scope!\n              </Text>\n              <Grid display=\"flex\" flexDirection=\"column\">\n                <GithubBtn\n                  onClick={() => {\n                    setShowModal(true);\n                    window.location.href =\n                      // window.open(\"\", \"\", \"_blank\")\n                      //s3\n                      // \"https://github.com/login/oauth/authorize?client_id=5bb2c0fab941fb5b8f9f&scope=repo:status read:repo_hook user:email&redirect_uri=http://kbumsoo.s3-website.ap-northeast-2.amazonaws.com/user/github/callback\";\n\n                      //local\n                      // (\"https://github.com/login/oauth/authorize?client_id=5bb2c0fab941fb5b8f9f&scope=repo:status read:repo_hook user:email&redirect_uri=http://localhost:3000/user/github/callback\");\n\n                      // 최종 주소\n\n                      \"https://github.com/login/oauth/authorize?client_id=5bb2c0fab941fb5b8f9f&scope=repo:status read:repo_hook user:email&redirect_uri=https://scopewith.com/user/github/callback\";\n                  }}\n                >\n                  깃허브로그인\n                </GithubBtn>\n                <KakaoBtn\n                  onClick={() => {\n                    setShowModal(true);\n                    // openWindow();\n                    window.location.href =\n                      // window.open(\n                      //   \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\",\n                      //   \"\",\n                      //   \"_blank\"\n                      // );\n                      //s3\n                      // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://kbumsoo.s3-website.ap-northeast-2.amazonaws.com/user/kakao/callback&response_type=code\";\n\n                      //local\n                      // \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=http://localhost:3000/user/kakao/callback&response_type=code\";\n\n                      // 최종 주소\n                      \"https://kauth.kakao.com/oauth/authorize?client_id=2f892c61e0552c3f50223077e2fc5c6c&redirect_uri=https://scopewith.com/user/kakao/callback&response_type=code\";\n                    // closeWindow();\n                  }}\n                >\n                  카카오로그인\n                </KakaoBtn>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid display=\"flex\" justifyContent=\"center\" margin=\"10px 0 30px 0\">\n            <Grid width=\"20%\" backgroundColor=\"#17334A\" height=\"3px\"></Grid>\n          </Grid>\n        </ModalWrap>\n      </Dialog>\n    );\n  }\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 100%;\n  @media (max-width: 570px) {\n    width: 270px;\n  }\n  /* @media (max-width: 375px) {\n    width: 250px;\n  } */\n`;\n\nconst GithubBtn = styled.div`\n  display: inline-block;\n  width: 282px;\n  height: 50px;\n  margin: 5px auto;\n  padding-top: 12px;\n  border: 0.5px solid #707070;\n  box-sizing: border-box;\n  border-radius: 25px;\n  font-size: 14px;\n  text-align: center;\n  color: #555555;\n  cursor: pointer;\n`;\n\nconst KakaoBtn = styled.div`\n  display: inline-block;\n  width: 282px;\n  height: 50px;\n  margin: 5px auto;\n  padding-top: 12px;\n  border: 0.5px solid #707070;\n  box-sizing: border-box;\n  border-radius: 25px;\n  font-size: 14px;\n  text-align: center;\n  color: #606060;\n  cursor: pointer;\n  background-color: #f9e000;\n`;\n\nexport default LoginModal;\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { history } from \"../redux/configureStore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Grid, Button } from \"../elements/Index\";\nimport LoginModal from \"./LoginModal\";\nimport { userCreators } from \"../redux/modules/user\";\nimport { deleteCookie } from \"../shared/Cookie\";\n\nconst HeaderRight = (props) => {\n  const dispatch = useDispatch();\n  const isToken = document.cookie;\n  const userInfo = useSelector((state) => state.user);\n  // console.log(userInfo);\n  const [showModal, setShowModal] = React.useState(false);\n  const [doLogout, setDoLogOut] = React.useState(false);\n\n  const sigunupModalState = useSelector(\n    (state) => state.user.sigunupModalState\n  );\n  const modalOpen = () => {\n    setShowModal(true);\n  };\n\n  const logOut = () => {\n    deleteCookie(\"ScopeUser\");\n    dispatch(userCreators.logOut());\n    history.replace(\"/\");\n    setDoLogOut(!doLogout);\n  };\n  React.useLayoutEffect(() => {}, [\n    isToken,\n    doLogout,\n    userInfo.userPropensityType,\n  ]);\n\n  if (isToken) {\n    return (\n      <>\n        {userInfo && (\n          <Grid\n            display=\"flex\"\n            justifyContent=\"space-around\"\n            alignItems=\"center\"\n            height=\"auto\"\n            width=\"auto\"\n          >\n            <HeaderWrapper>\n              {/* <Message\n            onClick={() => {\n              history.push(`/message`);\n            }}\n          >\n            <i class=\"far fa-envelope\"></i>\n          </Message>\n          <Bell>\n            <i class=\"far fa-bell\"></i>\n          </Bell> */}\n              <IconWrap>\n                <Grid\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  margin=\"0 20px\"\n                  _onClick={() => {\n                    history.push(`/mypage/${userInfo.userId}`);\n                  }}\n                >\n                  {userInfo.userPropensityType === \"LVG\" && (\n                    <UserImg size=\"50\" src=\"/img/호랑이.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"LVP\" && (\n                    <UserImg src=\"/img/늑대.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"LHG\" && (\n                    <UserImg src=\"/img/여우.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"LHP\" && (\n                    <UserImg src=\"/img/판다.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FVG\" && (\n                    <UserImg src=\"/img/토끼.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FVP\" && (\n                    <UserImg src=\"/img/개.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FHG\" && (\n                    <UserImg src=\"/img/고양이.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"FHP\" && (\n                    <UserImg src=\"/img/물개.png\"></UserImg>\n                  )}\n                  {userInfo.userPropensityType === \"RHP\" && (\n                    <UserImg src=\"/img/너구리.png\"></UserImg>\n                  )}\n                </Grid>\n              </IconWrap>\n              <ButtonWrap>\n                <Button\n                  common\n                  width=\"100px\"\n                  text=\"로그아웃\"\n                  _onClick={logOut}\n                ></Button>\n              </ButtonWrap>\n            </HeaderWrapper>\n          </Grid>\n        )}\n      </>\n    );\n  } else {\n    return (\n      <Grid\n        display=\"flex\"\n        justifyContent=\"space-around\"\n        alignItems=\"center\"\n        height=\"auto\"\n      >\n        <HeaderWrapper>\n          <Button\n            common\n            width=\"120px\"\n            text=\"로그인\"\n            _onClick={modalOpen}\n          ></Button>\n          <LoginModal showModal={showModal} setShowModal={setShowModal} />\n        </HeaderWrapper>\n      </Grid>\n    );\n  }\n};\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  padding-right: 0px;\n  justify-content: space-evenly;\n  @media screen and (max-width: 595px) {\n    width: 100px;\n  } ;\n`;\n\nconst Message = styled.div`\n  font-size: 30px;\n  margin-top: 8px;\n  margin-right: 16px;\n  cursor: pointer;\n`;\nconst Bell = styled.div`\n  margin-top: 8px;\n  font-size: 30px;\n  cursor: pointer;\n`;\n\nconst ButtonWrap = styled.div`\n  @media screen and (max-width: 595px) {\n    /* display: none; */\n  } ;\n`;\n\nconst IconWrap = styled.div`\n  @media screen and (max-width: 595px) {\n    display: none;\n    width: 90%;\n  } ;\n`;\n\nconst UserImg = styled.img`\n  object-fit: cover;\n  width: 50px;\n  border-radius: 50px;\n  box-shadow: 0 0 3px #ddd;\n  cursor: pointer;\n`;\n\nexport default HeaderRight;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid } from \"../elements/Index\";\nimport styled from \"styled-components\";\nimport HeaderLeft from \"../components/HeaderLeft\";\nimport HeaderRight from \"./HeaderRight\";\n\nconst Header = () => {\n  //로고를 망원경 하나로 바꾸고 , 닉네임 없애고, 로그아웃을 삼단선으로\n  return (\n    <>\n      <Wrap>\n        <Grid width=\"auto\" height=\"auto\" margin=\"0 0 0 20px\">\n          <HeaderLeft />\n        </Grid>\n        <Grid width=\"auto\" height=\"auto\" margin=\"0 20px 0 0 \">\n          <HeaderRight />\n        </Grid>\n      </Wrap>\n    </>\n  );\n};\n\nconst Wrap = styled.div`\n  max-width: 1900px;\n  margin: auto;\n  height: 10%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0);\n  padding: 20px 0;\n  z-index: 10;\n  position: relative;\n\n  @media screen and (max-width: 750px) {\n    width: 90vw;\n    height: 20px;\n    margin: auto;\n  } ;\n`;\n\nexport default Header;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst LogoButton = (props) => {\r\n  return (\r\n    <BorderRadius>\r\n      <IMGS\r\n        id={props.item.id}\r\n        src={props.item.img}\r\n        active={props.item.active}\r\n        onClick={() => {\r\n          props.onClick();\r\n        }}\r\n      ></IMGS>\r\n    </BorderRadius>\r\n  );\r\n};\r\nconst BorderRadius = styled.div`\r\n  border-radius: 250px;\r\n  margin: auto;\r\n`;\r\n\r\nconst IMGS = styled.img`\r\n  cursor: pointer;\r\n  width: 68px;\r\n  margin: 10px 15px;\r\n  opacity: ${(props) => (props.active ? 1 : 0.4)};\r\n\r\n  @media screen and (max-width: 750px) {\r\n    width: 30px;\r\n  }\r\n`;\r\n\r\nexport default LogoButton;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid } from \"../elements/Index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postActions } from \"../redux/modules/post\";\r\nimport { stackAction } from \"../redux/modules/stack\";\r\nimport LogoButton from \"../elements/LogoButton\";\r\n\r\nconst Stack = (props) => {\r\n  const dispatch = useDispatch();\r\n  const stack = useSelector((state) => state.stack.stack);\r\n  const stack2 = useSelector((state) => state.stack.stacks);\r\n  //필터 클릭\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"React\",\r\n      img: \"/img/react.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Java\",\r\n      img: \"/img/java.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"JavaScript\",\r\n      img: \"/img/javascript.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Python\",\r\n      img: \"/img/python.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Node\",\r\n      img: \"/img/node.js.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"C++\",\r\n      img: \"/img/c__.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Flask\",\r\n      img: \"/img/flask.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Django\",\r\n      img: \"/img/django.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Vue\",\r\n      img: \"/img/vue.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Spring\",\r\n      img: \"/img/spring.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"php\",\r\n      img: \"/img/php.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Swift\",\r\n      img: \"/img/swift.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Kotlin\",\r\n      img: \"/img/kotlin.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"TypeScript\",\r\n      img: \"/img/typescript.png\",\r\n      active: false,\r\n    },\r\n  ]);\r\n  React.useEffect(() => {\r\n    const stacks = Object.entries(stack);\r\n    // console.log(stacks);\r\n    setArr((state) => {\r\n      return state.map((stateItem, idx) => {\r\n        if (stateItem.id === stacks[idx][1]) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n\r\n    // arr.map((arrItem, idx) => {\r\n    //   if (arrItem.id === stacks[idx][1]) {\r\n    //     setArr({ ...arrItem, active: !arrItem.active });\r\n    //   }\r\n    // });\r\n  }, []);\r\n\r\n  const Filter = (item) => {\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id === item.id) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n\r\n    const result = Object.values(stack).find((r) => r === item.id);\r\n    // console.log(\"이 값이 있으면 지워줘야함\", result);\r\n    if (result) {\r\n      dispatch(postActions.isMainPage(true));\r\n      dispatch(stackAction.setStack(item.id));\r\n    } else {\r\n      dispatch(postActions.isMainPage(true));\r\n      dispatch(stackAction.getStack(item.id));\r\n    }\r\n    const result2 = stack2.find((r) => r === item.id);\r\n    if (result2) {\r\n      dispatch(stackAction.setStack2(item.id));\r\n    } else {\r\n      dispatch(stackAction.getStack2(item.id));\r\n    }\r\n\r\n    console.log(\"dodo\", stack2);\r\n  };\r\n\r\n  const arrStack = (item) => {\r\n    const nowStack = props.stacks;\r\n    const alreadyChecked = nowStack.find((p) => p === item.id);\r\n    console.log(alreadyChecked);\r\n    if (!alreadyChecked) {\r\n      props.setStacks(nowStack.concat(item.id));\r\n    }\r\n    if (alreadyChecked) {\r\n      const deleteCheck = nowStack.filter((p) => p !== alreadyChecked);\r\n      props.setStacks(deleteCheck);\r\n    }\r\n\r\n    console.log(nowStack);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      display=\"flex\"\r\n      width=\"75%\"\r\n      margin=\"25px auto 20px auto\"\r\n      boxShadow=\"0px 0px 10px #ddd\"\r\n      padding=\"5px 10px\"\r\n      borderRadius=\"20px\"\r\n      overflow=\"auto\"\r\n      alignItems=\"center\"\r\n      maxWidth=\"1900px\"\r\n    >\r\n      {arr.map((item) => {\r\n        return (\r\n          <LogoButton\r\n            item={item}\r\n            key={item.id}\r\n            onClick={() => {\r\n              if (props.do === \"StacksComponent\") {\r\n                Filter(item);\r\n                arrStack(item);\r\n              }\r\n            }}\r\n          ></LogoButton>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Stack;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { history } from \"../redux/configureStore\";\r\nimport { Grid, Image, Progress } from \"../elements/Index\";\r\nimport Img from \"../images/flutter.png\";\r\n\r\nconst PostStacks = (props) => {\r\n  const whatPage = useSelector((state) => state.post.whatPage);\r\n  const reduxstack = useSelector((state) => state.stack.stack);\r\n  const [stacks, setStacks] = React.useState(9);\r\n  const [Stack, setStack] = React.useState([\r\n    {\r\n      id: \"React\",\r\n      img: \"/img/react.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Java\",\r\n      img: \"/img/java.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"JavaScript\",\r\n      img: \"/img/javascript.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Python\",\r\n      img: \"/img/python.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Node\",\r\n      img: \"/img/node.js.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"C++\",\r\n      img: \"/img/c__.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Flask\",\r\n      img: \"/img/flask.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Django\",\r\n      img: \"/img/django.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Vue\",\r\n      img: \"/img/vue.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Spring\",\r\n      img: \"/img/spring.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"php\",\r\n      img: \"/img/php.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Swift\",\r\n      img: \"/img/swift.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"Kotlin\",\r\n      img: \"/img/kotlin.png\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"TypeScript\",\r\n      img: \"/img/typescript.png\",\r\n      active: false,\r\n    },\r\n  ]);\r\n  let stack = props.stack;\r\n  // console.log(stack);\r\n  // console.log(\"-----\");\r\n\r\n  React.useEffect(() => {\r\n    // let stack = props.stack;\r\n    // setStacks(stack);\r\n    Stack.map((item) => {\r\n      if (item.id === props.stack) {\r\n        setStacks(item.img);\r\n        return item;\r\n      }\r\n      return item;\r\n    });\r\n  }, [whatPage, reduxstack]);\r\n\r\n  return (\r\n    <div>\r\n      {stacks && (\r\n        <Grid\r\n          display=\"flex\"\r\n          width=\"80%\"\r\n          height=\"85%\"\r\n          borderRadius=\"100%\"\r\n          bg=\"#fff\"\r\n          margin=\"-33px 0px\"\r\n          boxShadow=\"0 0 2px #ccc\"\r\n        >\r\n          <IMGS src={stacks}></IMGS>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst IMGS = styled.img`\r\n  width: 80%;\r\n  margin: auto;\r\n  padding: 5px;\r\n  align-items: center;\r\n`;\r\n\r\nexport default PostStacks;\r\n","import React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst Apply = (props) => {\n  const dispatch = useDispatch();\n  const [comment, setComment] = React.useState();\n  const { modalClose, postId } = props;\n  const apply = () => {\n    const applyComment = {\n      comment: comment,\n    };\n    dispatch(applyCreators.applyProjectAPI(postId, applyComment));\n    modalClose(\"신청\");\n  };\n  return (\n    <React.Fragment>\n      <ModalWrap>\n        <Grid height=\"10%\" position=\"relative\">\n          <Grid\n            position=\"absolute\"\n            top=\"0px\"\n            right=\"10px\"\n            width=\"20px\"\n            padding=\"10px\"\n          >\n            <CloseIcon fontSize=\"large\" onClick={modalClose} />\n          </Grid>\n        </Grid>\n        <Grid margin=\"auto\" height=\"90%\" width=\"320px\" alignItems=\"center\">\n          <Grid height=\"20%\" textAlign=\"center\">\n            <Text size=\"30px\" bold>\n              지원신청\n            </Text>\n          </Grid>\n          <Grid height=\"22%\" margin=\"10px 0\" textAlign=\"center\">\n            <Input\n              padding=\"0 0 0 30px\"\n              borderRadius=\"25px\"\n              border=\"1px solid #eee\"\n              height=\"100%\"\n              backgroundColor=\"#fff\"\n              placeholder=\"간단한 본인의 기술스택 및  자기소개 작성란\"\n              _onChange={(e) => {\n                console.log(e.target.value);\n                setComment(e.target.value);\n              }}\n            ></Input>\n          </Grid>\n          <Grid height=\"10%\">\n            <Button borderRadius=\"25px\" _onClick={apply}>\n              지원신청\n            </Button>\n          </Grid>\n        </Grid>\n      </ModalWrap>\n    </React.Fragment>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 300px;\n  position: relative;\n  @media (max-width: 620px) {\n    margin: auto;\n    margin-top: 30px;\n    width: 90%;\n  }\n`;\nconst Contents = styled.div`\n  margin: auto;\n  height: 90%;\n  width: 320px;\n\n  text-align: center;\n  @media (max-width: 620px) {\n    margin: auto;\n    margin-top: 30px;\n    width: 90%;\n  }\n`;\n\nexport default Apply;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst Cancel = (props) => {\n  const dispatch = useDispatch();\n  const { modalClose, postId } = props;\n  const cancel = () => {\n    dispatch(applyCreators.cancelProjectAPI(postId));\n    modalClose(\"취소\");\n  };\n  return (\n    <ModalWrap>\n      <Grid height=\"10%\" position=\"relative\">\n        <Grid\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n        >\n          <CloseIcon fontSize=\"large\" onClick={modalClose} />\n        </Grid>\n      </Grid>\n\n      <Contents\n        margin=\"auto\"\n        height=\"90%\"\n        width=\"320px\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n      >\n        <Grid height=\"20%\">\n          <Text size=\"30px\" bold>\n            지원취소\n          </Text>\n        </Grid>\n        <Grid height=\"25%\" margin=\"10px 0\">\n          <Text size=\"14px\">지원취소를 원하시면 아래 버튼을 클릭해주세요</Text>\n        </Grid>\n        <Grid height=\"10%\">\n          <Button borderRadius=\"25px\" _onClick={cancel}>\n            지원취소\n          </Button>\n        </Grid>\n      </Contents>\n    </ModalWrap>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 300px;\n  position: relative;\n  @media (max-width: 620px) {\n    margin: auto;\n    margin-top: 30px;\n    width: 90%;\n  }\n`;\nconst Contents = styled.div`\n  margin: auto;\n  height: 90%;\n  width: 320px;\n\n  text-align: center;\n  @media (max-width: 620px) {\n    margin: auto;\n    margin-top: 30px;\n    width: 90%;\n  }\n`;\n\nexport default Cancel;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst TeamExit = (props) => {\n  const dispatch = useDispatch();\n  const { modalClose, postId } = props;\n  const exitTeam = () => {\n    const isPostId = {\n      postId: postId,\n    };\n    dispatch(applyCreators.exitTeamAPI(isPostId));\n  };\n  return (\n    <ModalWrap>\n      <Grid height=\"10%\" position=\"relative\">\n        <Grid\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n        >\n          <CloseIcon fontSize=\"large\" onClick={modalClose} />\n        </Grid>\n      </Grid>\n\n      <Grid\n        margin=\"auto\"\n        height=\"90%\"\n        width=\"320px\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n      >\n        <Grid height=\"20%\" textAlign=\"center\">\n          <Text size=\"30px\" bold>\n            팀탈퇴\n          </Text>\n        </Grid>\n        <Grid height=\"25%\" margin=\"10px 0\">\n          <Text size=\"14px\">\n            정말로 탈퇴하시겠습니까? <br /> 한번 탈퇴하면 다시 신청이 불가능할\n            수 있습니다.\n          </Text>\n        </Grid>\n        <Grid height=\"10%\">\n          <Button borderRadius=\"25px\" _onClick={exitTeam}>\n            팀탈퇴\n          </Button>\n        </Grid>\n      </Grid>\n    </ModalWrap>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 300px;\n  position: relative;\n`;\n\nexport default TeamExit;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst SubmitUrl = (props) => {\n  const dispatch = useDispatch();\n  const [front, setFront] = React.useState();\n  const [back, setBack] = React.useState();\n  const { modalClose, postId } = props;\n  let regex =\n    /(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n\n  const submitUrl = () => {\n    if (regex.test(front) && regex.test(back)) {\n      const github = {\n        frontUrl: front,\n        backUrl: back,\n      };\n      dispatch(applyCreators.submitUrlAPI(postId, github));\n      modalClose();\n      return;\n    }\n\n    return window.alert(\"올바른 URL 주소가 필요합니다.\");\n  };\n\n  return (\n    <ModalWrap>\n      <Grid height=\"10%\" position=\"relative\">\n        <Grid\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          width=\"20px\"\n          padding=\"10px\"\n        >\n          <CloseIcon fontSize=\"large\" onClick={modalClose} />\n        </Grid>\n      </Grid>\n      <Grid\n        margin=\"auto\"\n        height=\"90%\"\n        // justifyContent=\"center\"\n        width=\"90%\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n      >\n        <Grid height=\"10%\" textAlign=\"center\">\n          <Text bold=\"bold\" size=\"30px\">\n            프로젝트 소개\n          </Text>\n        </Grid>\n        <Grid height=\"10%\" margin=\"10px 0\">\n          <Text size=\"14px\">\n            완료된 프로젝트를 소개해주시겠어요? <br />\n          </Text>\n        </Grid>\n        <Grid display=\"flex\" height=\"40%\" width=\"90%\" margin=\"auto\">\n          <Grid\n            display=\"flex\"\n            flexDirection=\"column\"\n            height=\"80%\"\n            width=\"30%\"\n            margin=\"auto\"\n          >\n            <Grid\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              margin=\"0 0 2px 0\"\n              bg=\"#878787\"\n            >\n              <Text color=\"#fff\">프론트엔드</Text>\n            </Grid>\n            <Grid\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              bg=\"#878787\"\n            >\n              <Text color=\"#fff\">백엔드</Text>\n            </Grid>\n          </Grid>\n          <Grid\n            display=\"flex\"\n            flexDirection=\"column\"\n            height=\"80%\"\n            width=\"70%\"\n            margin=\"auto auto auto 2px\"\n            alignItems=\"center\"\n          >\n            <Grid margin=\"0 0 2px 0\">\n              <Input\n                border=\"1px solid #878787\"\n                height=\"100%\"\n                padding=\"0 0 0 10px\"\n                placeholder=\"프론트엔드 깃허브 주소를 입력해주세요!\"\n                _onChange={(e) => {\n                  console.log(e.target.value);\n                  setFront(e.target.value);\n                }}\n              ></Input>\n            </Grid>\n            <Grid>\n              <Input\n                border=\"1px solid #878787\"\n                height=\"100%\"\n                padding=\"0 0 0 10px\"\n                placeholder=\"백엔드 깃허브 주소를 입력해주세요!\"\n                _onChange={(e) => {\n                  console.log(e.target.value);\n                  setBack(e.target.value);\n                }}\n              ></Input>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid display=\"flex\" height=\"15%\" margin=\"20px auto\" width=\"70%\">\n          <Grid>\n            <Button borderRadius=\"25px\" _onClick={submitUrl}>\n              제출하기\n            </Button>\n          </Grid>\n          <Grid>\n            <Button borderRadius=\"25px\" _onClick={modalClose}>\n              다음에제출\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </ModalWrap>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 400px;\n  position: relative;\n`;\n\nexport default SubmitUrl;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { applyCreators } from \"../../redux/modules/applyProject\";\nimport styled from \"styled-components\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ImgType from \"../../shared/ImgType\";\n\nconst Liked = (props) => {\n  const dispatch = useDispatch();\n  const [likes, setLikes] = React.useState();\n  const {\n    modalClose,\n    postId,\n    passdedMenber,\n    isMe,\n    projectStatus,\n    statusCheck,\n    myPage,\n    toggleModal,\n  } = props;\n\n  React.useEffect(() => {\n    setLikes(\n      passdedMenber?.map((stateItem) => {\n        let newStateItem = { ...stateItem, active: false };\n        return newStateItem;\n      })\n    );\n  }, [passdedMenber, projectStatus]);\n\n  //색상 기능 눌렀는지 안눌렀는지 (버튼색상)\n  const toggleLike = (a) => {\n    setLikes((state) => {\n      return state.map((val) => {\n        if (val.userId === Number(a)) {\n          return { ...val, active: !val.active };\n        }\n        return val;\n      });\n    });\n  };\n  console.log(postId);\n\n  //팀원평가\n  const userLiked = () => {\n    console.log(likes);\n    console.log(myPage);\n    const likeMember = likes.filter((user) => user.active == true);\n    const result = likeMember.map((a) => a.userId);\n    const likeUsers = {\n      userIds: result,\n    };\n    console.log(likeUsers);\n    if (!myPage) {\n      console.log(\"여기\");\n      dispatch(applyCreators.starterLikeAPI(postId, likeUsers));\n      modalClose(\"종료\");\n      return;\n    }\n    console.log(\"여기2\");\n    dispatch(applyCreators.starterLikeAPI(postId, likeUsers));\n    toggleModal();\n    return;\n  };\n  console.log(likes);\n\n  return (\n    <>\n      {likes && (\n        <Grid _onClick={(e) => e.stopPropagation()}>\n          <ModalWrap>\n            <Grid height=\"10%\" position=\"relative\">\n              <Grid\n                position=\"absolute\"\n                top=\"0px\"\n                right=\"10px\"\n                width=\"20px\"\n                padding=\"10px\"\n              >\n                <CloseIcon\n                  fontSize=\"large\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    modalClose();\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid\n              margin=\"auto\"\n              height=\"90%\"\n              // justifyContent=\"center\"\n              width=\"90%\"\n              alignItems=\"center\"\n              textAlign=\"center\"\n            >\n              <Grid height=\"10%\" textAlign=\"center\">\n                <Text size=\"30px\" bold=\"bold\">\n                  프로젝트 마감\n                </Text>\n              </Grid>\n\n              <Grid height=\"14%\" margin=\"10px 0\">\n                <Text size=\"14px\">\n                  프로젝트는 어떠셨나요? <br /> 각 팀원들이 어떠셨는지\n                  평가해주시면 추천알고리즘이 정교해집니다.\n                </Text>\n              </Grid>\n              {/* 유저평가부분 */}\n              <Grid height=\"50%\" width=\"90%\" margin=\"auto\" overflow=\"auto\">\n                {passdedMenber?.map((user, idx) => (\n                  <Grid\n                    margin=\"10px auto\"\n                    height=\"100px\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-around\"\n                    width=\"100%\"\n                    key={user.userId}\n                    {...user}\n                  >\n                    <Grid margin=\"auto\" width=\"10%\">\n                      <ImgType type={passdedMenber[idx].userPropensityType} />\n                    </Grid>\n                    <Grid height=\"100%\" width=\" 70%\" margin=\"auto\">\n                      <Grid display=\"flex\" height=\"60%\" margin=\"auto\">\n                        <Grid\n                          margin=\"auto\"\n                          height=\"50px\"\n                          display=\"flex\"\n                          justifyContent=\"space-between\"\n                        >\n                          <Grid height=\"100%\" textAlign=\"center\" width=\"50%\">\n                            <Grid\n                              borderRadius=\"20px 0 0 20px\"\n                              bg=\"#17334A\"\n                              height=\"50%\"\n                              margin=\"0 0 3px 0 \"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <Text color=\"#fff\">닉네임</Text>\n                            </Grid>\n                            <Grid\n                              borderRadius=\"20px 0 0 20px\"\n                              bg=\"#17334A\"\n                              height=\"50%\"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              <Text color=\"#fff\">타입</Text>\n                            </Grid>\n                          </Grid>\n                          <Grid\n                            margin=\"auto\"\n                            height=\"100%\"\n                            textAlign=\"center\"\n                            width=\"50%\"\n                          >\n                            <Grid\n                              height=\"50%\"\n                              borderRadius=\"0 20px 20px 0\"\n                              bg=\"#eee\"\n                              margin=\"0 0 3px 0 \"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              {passdedMenber[idx].nickname}\n                            </Grid>\n                            <Grid\n                              height=\"50%\"\n                              borderRadius=\"0 20px 20px 0\"\n                              bg=\"#eee\"\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                            >\n                              {passdedMenber[idx].userPropensityType}\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Grid\n                          margin=\"auto auto auto 10px\"\n                          height=\"50px\"\n                          width=\"80%\"\n                        >\n                          {passdedMenber[idx].userId !== isMe && (\n                            <Button\n                              common\n                              isActive={likes[idx]?.active}\n                              isValue={passdedMenber[idx]?.userId}\n                              _onClick={(e) => {\n                                e.stopPropagation();\n                                console.log(\n                                  likes[idx]?.userId,\n                                  likes[idx].active\n                                );\n                                toggleLike(e.target.value);\n                              }}\n                            >\n                              좋았어요!\n                            </Button>\n                          )}\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n\n              <Grid height=\"10%\">\n                <Button\n                  borderRadius=\"25px\"\n                  _onClick={(e) => {\n                    e.stopPropagation();\n                    userLiked();\n                  }}\n                >\n                  팀원평가\n                </Button>\n              </Grid>\n            </Grid>\n          </ModalWrap>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 700px;\n  position: relative;\n`;\n\nconst UserImg = styled.img`\n  object-fit: cover;\n  width: 60px;\n  border-radius: 12px;\n  background-color: #ececec;\n  cursor: pointer;\n`;\n\nexport default Liked;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Apply,\n  Cancel,\n  TeamExit,\n  SubmitUrl,\n  Liked,\n} from \"./applyUserModal/ApplyIndex\";\nconst ApplyUserModal = props => {\n  const {\n    applyUserModal,\n    setApplyUserModal,\n    applyValue,\n    postId,\n    passdedMenber,\n    passedUserStatus,\n    projectStatus,\n    statusCheck,\n    myPage,\n    toggleModal,\n  } = props;\n  const isMe = useSelector(state => state.user.userId);\n  const [page, setPage] = React.useState(1);\n\n  const modalClose = status => {\n    console.log(\"야호\", status);\n    if (status === \"종료\") {\n      statusCheck(status);\n      return setApplyUserModal(false);\n    }\n    setApplyUserModal(false);\n    return;\n  };\n\n  return (\n    <>\n      <Dialog\n        maxWidth={\"sm\"}\n        scroll=\"paper\"\n        open={applyUserModal}\n        onClose={e => {\n          e.stopPropagation();\n          modalClose();\n        }}\n      >\n        {applyValue === \"apply\" && (\n          <Apply modalClose={modalClose} postId={postId} />\n        )}{\" \"}\n        {applyValue === \"cancel\" && (\n          <Cancel modalClose={modalClose} postId={postId} />\n        )}\n        {applyValue === \"teamExit\" && (\n          <TeamExit modalClose={modalClose} postId={postId} />\n        )}\n        {applyValue === \"end\" && page === 1 && (\n          <Liked\n            modalClose={modalClose}\n            postId={postId}\n            passdedMenber={passdedMenber}\n            projectStatus={projectStatus}\n            isMe={isMe}\n            page={page}\n            setPage={setPage}\n            statusCheck={statusCheck}\n          />\n        )}\n        {/* {applyValue === \"end\" && page === 2 && (\n          <SubmitUrl modalClose={modalClose} postId={postId} />\n        )} */}\n        {applyValue === \"submit\" && passdedMenber[0].userId === isMe && (\n          <SubmitUrl modalClose={modalClose} postId={postId} />\n        )}\n        {applyValue === \"starterLiked\" && (\n          <Liked\n            modalClose={modalClose}\n            postId={postId}\n            passdedMenber={passdedMenber}\n            isMe={isMe}\n            page={page}\n            setPage={setPage}\n            myPage={myPage}\n          />\n        )}\n        {applyValue === \"memberLiked\" && (\n          <Liked\n            modalClose={modalClose}\n            postId={postId}\n            passdedMenber={passdedMenber}\n            isMe={isMe}\n            page={page}\n            setPage={setPage}\n            myPage={myPage}\n            toggleModal={toggleModal}\n          />\n        )}\n      </Dialog>\n    </>\n  );\n};\n\nexport default React.memo(ApplyUserModal);\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PostStacks from \"./PostStacks\";\r\nimport ApplyUserModal from \"./ApplyUserModal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { applyCreators } from \"../redux/modules/applyProject\";\r\nimport { apis } from \"../lib/axios\";\r\nimport { history } from \"../redux/configureStore\";\r\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\r\n\r\n// Post의 함수형 컴포넌트를 만든다.\r\nconst Post = (props) => {\r\n  const dispatch = useDispatch();\r\n  const myPage = useSelector((state) => state.post.whatPage.now);\r\n  const myUserId = useSelector((state) => state.user.userId);\r\n  const [stacks, setStacks] = React.useState();\r\n  const [applyUserModal, setApplyUserModal] = React.useState(false); //지원취소/팀탈퇴/프로젝트마감\r\n  const [applyValue, setApplyValue] = React.useState();\r\n  const [member, setMember] = React.useState();\r\n  const [assessment, setAssessment] = React.useState();\r\n\r\n  let totalmember = props.totalMember;\r\n  let recruitmentMember = props.recruitmentMember;\r\n\r\n  const modalOpen = (value, postId) => {\r\n    setApplyValue(value);\r\n    setApplyUserModal(!applyUserModal);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    // console.log(applyUserModal);\r\n    setApplyUserModal(!applyUserModal);\r\n    // console.log(applyUserModal);\r\n  };\r\n\r\n  // React.useEffect(() => {\r\n  //   let postId = props.postId;\r\n  //   dispatch(applyCreators.getMemberAPI(postId));\r\n  // }, [props.mypage]);\r\n  // console.log(applyUserModal);\r\n  React.useLayoutEffect(() => {\r\n    if (myPage !== \"myPage\") {\r\n      return;\r\n    }\r\n    let postId = props.postId;\r\n    const getMembers = async () => {\r\n      try {\r\n        const result = await apis.getMember(postId);\r\n        // console.log(\"호출되나\", result);\r\n        setMember(result.data.data);\r\n        setAssessment(result.data.data.find((e) => e.userId === myUserId));\r\n      } catch (err) {\r\n        console.log(err.response);\r\n      }\r\n    };\r\n    getMembers();\r\n  }, [applyUserModal]);\r\n\r\n  let as = member?.find((e) => e.userId === myUserId);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ProductImgWrap\r\n        onClick={() => {\r\n          history.push({\r\n            pathname: `/postdetail/${props.postId}`,\r\n          });\r\n        }}\r\n      >\r\n        {member &&\r\n          props.mypage &&\r\n          props.projectStatus === \"종료\" &&\r\n          member[0].assessment === true &&\r\n          as.assessment === false && (\r\n            <Grid\r\n              bg=\"#111\"\r\n              width=\"100%\"\r\n              position=\"absolute\"\r\n              zIndex=\"11\"\r\n              borderRadius=\"20px\"\r\n              opacity=\"0.8\"\r\n              display=\"flex\"\r\n            >\r\n              <Button\r\n                isValue=\"memberLiked\"\r\n                backgroundColor=\"#fff\"\r\n                width=\"50%\"\r\n                color=\"#111\"\r\n                hoverBg=\"#2699FB\"\r\n                hoverCl=\"#fff\"\r\n                _onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  // console.log(e.target.value, props.postId);\r\n                  modalOpen(e.target.value, props.postId);\r\n                }}\r\n              >\r\n                팀원평가하기\r\n              </Button>\r\n              <ApplyUserModal\r\n                applyUserModal={applyUserModal}\r\n                setApplyUserModal={setApplyUserModal}\r\n                applyValue={applyValue}\r\n                passdedMenber={member}\r\n                postId={props.postId}\r\n                myPage={props.mypage}\r\n                toggleModal={toggleModal}\r\n              />\r\n            </Grid>\r\n          )}\r\n        {/* 전체크기 */}\r\n        <DDescriptionBox>\r\n          <CardHeader\r\n            projectStatus={props.projectStatus}\r\n            id=\"headerOne\"\r\n            className=\"headerOne\"\r\n          >\r\n            <Grid>{/* <TitleDate>D-2</TitleDate> */}</Grid>\r\n            <Grid\r\n              position=\"relative\"\r\n              zIndex=\"10\"\r\n              display=\"flex\"\r\n              width=\"80%\"\r\n              margin=\"auto\"\r\n            >\r\n              {props.techStack.map((p, idx) => {\r\n                return (\r\n                  <Grid margin=\"4% 0 0 -1% \" width=\"20%\" key={idx}>\r\n                    <PostStacks stack={p}></PostStacks>\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </CardHeader>\r\n\r\n          <DescriptionBox>\r\n            <ProjectState projectStatus={props.projectStatus}>\r\n              <Text>{props.projectStatus}</Text>\r\n            </ProjectState>\r\n\r\n            <Title>{props.title}</Title>\r\n            {/* <Summary>{props.summary}</Summary> */}\r\n            <Date>\r\n              {props.startDate} ~ {props.endDate}\r\n            </Date>\r\n\r\n            {/* 프로그래스바 */}\r\n            <Grid\r\n              display=\"flex\"\r\n              width=\"100%\"\r\n              justifyContent=\"space-between\"\r\n              height=\"20%\"\r\n            >\r\n              <ProgressBar projectStatus={props.projectStatus}>\r\n                <HighLight\r\n                  projectStatus={props.projectStatus}\r\n                  width={(recruitmentMember / totalmember) * 100 + \"%\"}\r\n                />\r\n              </ProgressBar>\r\n              <Grid width=\"43%\" textAlign=\"right\">\r\n                <Text size=\"12px\" margin=\"0 0 0 10px\" bold=\"500\">\r\n                  {recruitmentMember + \"/\" + totalmember} 명 참여중\r\n                </Text>\r\n              </Grid>\r\n            </Grid>\r\n            {/* 프로그래스바까지 */}\r\n          </DescriptionBox>\r\n        </DDescriptionBox>\r\n      </ProductImgWrap>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst DescriptionBox = styled.div`\r\n  position: relative;\r\n  margin: 25px 20px;\r\n  padding: 10px;\r\n  height: 60%;\r\n`;\r\nconst DDescriptionBox = styled.div`\r\n  /* background-color: #fff5f9; */\r\n  border-radius: 21px;\r\n  margin: auto;\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\n//카드 헤더\r\nconst CardHeader = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 55px;\r\n  border-radius: 21px 21px 0px 0px;\r\n  background-color: #ecc0f1;\r\n  ${(props) =>\r\n    props.projectStatus === \"모집중\" && `background-color: #17334A;`};\r\n  ${(props) =>\r\n    props.projectStatus === \"진행중\" && `background-color: #17334A;`};\r\n  ${(props) => props.projectStatus === \"종료\" && `background-color: #878787;`};\r\n`;\r\n\r\n//헤더 까지\r\n\r\nconst Title = styled.span`\r\n  margin-top: 8%;\r\n  margin-bottom: 14%;\r\n  font-size: 20px;\r\n  width: 100%;\r\n  font-weight: 500;\r\n  /* white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: #606060; */\r\n  white-space: normal;\r\n  line-height: 1.2;\r\n  height: 2.4em;\r\n  text-align: left;\r\n  word-wrap: break-word;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n`;\r\n\r\nconst Date = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  margin: 8% auto 15% auto;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  text-overflow: ellipsis;\r\n  @media (max-width: 750px) {\r\n    font-size: 14px;\r\n    margin-left: 0%;\r\n  }\r\n  @media (max-width: 450px) {\r\n    font-size: 10px;\r\n    margin: 0% auto 1% auto;\r\n  }\r\n`;\r\n\r\nconst ProjectState = styled.div`\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  width: 58px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  height: 24px;\r\n  margin: 4% 0;\r\n  padding: 1% 0 0 0;\r\n  font-size: 13px;\r\n  ${(props) =>\r\n    props.projectStatus === \"모집중\" && `background-color: #2699FB;`};\r\n  ${(props) =>\r\n    props.projectStatus === \"진행중\" && `background-color: #15B915;`};\r\n  ${(props) => props.projectStatus === \"종료\" && `background-color: #878787;`};\r\n`;\r\n\r\nconst ProductImgWrap = styled.div`\r\n  z-index: 1;\r\n  position: relative;\r\n  background-color: white;\r\n  width: 330px;\r\n  height: 330px;\r\n  max-width: 350px;\r\n  margin: 30px auto;\r\n  border-radius: 20px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.12), 0 2px 5px rgba(0, 0, 0, 0.24);\r\n\r\n  @media (max-width: 450px) {\r\n    margin: auto;\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n    width: 270px;\r\n    height: 270px;\r\n  }\r\n`;\r\n//프로그래스바\r\nconst ProgressBar = styled.div`\r\n  border: 1px solid #111;\r\n  background: #f6f4f6;\r\n  width: 55%;\r\n  height: 15px;\r\n  border: none;\r\n  ${(props) =>\r\n    props.projectStatus === \"모집중\" && `background-color: #BCE0FD;`};\r\n  ${(props) =>\r\n    props.projectStatus === \"진행중\" && `background-color: #DFDFDF;`};\r\n  ${(props) => props.projectStatus === \"종료\" && `background-color: #DFDFDF;`};\r\n`;\r\n\r\nconst HighLight = styled.div`\r\n  transition: 1s;\r\n  width: ${(props) => props.width};\r\n  ${(props) =>\r\n    props.projectStatus === \"모집중\" && `background-color: #2699FB;`};\r\n  ${(props) =>\r\n    props.projectStatus === \"진행중\" && `background-color: #878787 ;`};\r\n  ${(props) => props.projectStatus === \"종료\" && `background-color: #878787;`};\r\n  height: 15px;\r\n`;\r\n\r\n//프로그래스바 까지\r\n\r\nexport default Post;\r\n","/* eslint-disable */\r\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid width=\"100%\" margin=\"auto\">\r\n        <IMG src=\"/img/호랭이.gif\" alt=\"spinner\"></IMG>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst IMG = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  margin: auto;\r\n`;\r\n\r\nexport default Spinner;\r\n","/* eslint-disable */\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"./Post\";\nimport PostTest from \"./PostTest\";\nimport { postActions } from \"../redux/modules/post\";\nimport styled from \"styled-components\";\n// import { useInView } from \"react-intersection-observer\";\nimport { height } from \"@mui/system\";\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\nimport Spinner from \"../shared/Spinner\";\n\nconst PostList = (props) => {\n  const dispatch = useDispatch();\n  const [post, setPost] = React.useState();\n  const [allPost, setAllPost] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n\n  // let paging = useSelector((state) => state?.infinity.paging.next);\n  let paging = props.paging;\n  let reBook = useSelector((state) => state.rebook.reBook);\n  let sort = useSelector((state) => state.sort.sort);\n  let post_list = useSelector((state) => state.post.posts);\n  let stacks = useSelector((state) => state.stack.stacks);\n  let Render = props.Render;\n  let isLogin = props.isLogin;\n\n  // let stacks = props.stacks;\n  // console.log(stackss);\n\n  const findStack = (item) => {\n    const itemStack = item.techStack;\n    if (stacks) {\n      for (let i = 0; i < stacks.length; i++) {\n        for (let j = 0; j < itemStack.length; j++) {\n          if (stacks[i] === itemStack[j]) {\n            return true;\n          }\n        }\n      }\n    }\n  };\n\n  // let post_list = props.post;\n  React.useEffect(() => {\n    setPost();\n    if (stacks.length !== 0) {\n      const postList = props.post.filter(findStack);\n      let posts = postList.slice(0, paging);\n      setPost(posts);\n    }\n    if (stacks.length === 0) {\n      let posts = props.post.slice(0, paging);\n      setPost(posts);\n    }\n    setLoading(false);\n  }, [stacks, paging, sort, reBook, Render, isLogin]);\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          {post && (\n            <>\n              <PostWrap>\n                {post.map((item) => {\n                  return <Post key={item.postId} {...item} />;\n                })}\n\n                {post.length === 0 && (\n                  <Grid margin=\"auto\" width=\"100%\" height=\"100%\" display=\"flex\">\n                    <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                    <NoIntroductionText>\n                      아직 포스트가 없네요\n                      <br /> .\n                      <br /> .\n                      <br /> .\n                    </NoIntroductionText>\n                  </Grid>\n                )}\n              </PostWrap>\n            </>\n          )}\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst PostWrap = styled.div`\n  max-width: 100%;\n  margin: auto;\n  display: grid;\n\n  grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\n  /* grid-gap: 1px; */\n  @media (max-width: 420px) {\n    grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\n  }\n`;\nconst NoIntroduction = styled.img`\n  width: 100%;\n  height: 100%;\n  /* object-fit: cover; */\n\n  margin: auto;\n  display: flex;\n  justify-content: center;\n`;\n\nconst NoIntroductionText = styled.p`\n  color: #737373;\n  font-size: 25px;\n  width: auto;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin-left: auto;\n`;\n\nexport default PostList;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Button, Input, Text } from \"../elements/Index\";\nimport styled from \"styled-components\";\nimport { Dialog } from \"@material-ui/core\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { apis } from \"../lib/axios\";\nimport Swal from \"sweetalert2\";\n\nconst EmailAuth = (props) => {\n  const [email, setEmail] = React.useState();\n  const { modal, setModal } = props;\n  const modalClose = () => {\n    setModal(false);\n  };\n\n  const EmailInput = (data) => {\n    setEmail(data);\n  };\n  const EmailSend = () => {\n    const fetchData = async () => {\n      const result = await apis.authEmail(email);\n      try {\n        props.setModal();\n        // window.alert(result.data.msg);\n        Swal.fire(`${result.data.msg}`, \"\", \"success\");\n      } catch (err) {\n        console.log(err.response);\n      }\n    };\n    fetchData();\n  };\n  return (\n    <Dialog maxWidth={\"sm\"} scroll=\"paper\" open={modal}>\n      <ModalWrap>\n        <Grid>\n          {/* 헤더 */}\n          <Grid\n            width=\"100%\"\n            height=\"13%\"\n            // bg=\"#B29CF4\"\n            position=\"relative\"\n            textAlign=\"center\"\n            padding=\"10px 0 10px 0\"\n          >\n            <Grid\n              position=\"absolute\"\n              top=\"0px\"\n              right=\"20px\"\n              width=\"20px\"\n              padding=\"10px\"\n            >\n              <CloseIcon fontSize=\"large\" onClick={modalClose} />\n            </Grid>\n            <Grid margin=\"20px 0 0 0\">\n              <Text size=\"30px\" bold color=\"#08061D\">\n                이메일 인증\n              </Text>\n            </Grid>\n          </Grid>\n          {/* 내용작성 */}\n          <Grid height=\"45%\">\n            <Dec>이메일 인증을 하고 이메일 알림을 받아 보세요!</Dec>\n\n            <Input\n              padding=\"10px\"\n              placeholder=\"이메일을 입력해 주세요.\"\n              margin=\"10px 0 0 18%\"\n              fontSize=\"15px\"\n              border=\"1px solid #C9C9C9\"\n              borderRadius=\"8px\"\n              width=\"320px\"\n              _onChange={(e) => {\n                EmailInput(e.target.value);\n              }}\n            ></Input>\n\n            <Button\n              width=\"320px\"\n              height=\"50px\"\n              margin=\"-90px 0 0 18%\"\n              _onClick={() => {\n                EmailSend();\n              }}\n            >\n              인증하기\n            </Button>\n          </Grid>\n        </Grid>\n      </ModalWrap>\n    </Dialog>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 500px;\n  height: 300px;\n  border-radius: 20px;\n`;\nconst Dec = styled.p`\n  color: #08061d;\n  font-size: 14px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n`;\n\nexport default EmailAuth;\n","/* eslint-disable */\nimport React, { useState } from \"react\";\nimport \"./MainSlide.css\";\nimport { history } from \"../../redux/configureStore\";\n\nimport Slider from \"react-slick\";\nimport { Grid, Button, Text } from \"../../elements/Index\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\nimport KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\nimport PropensityTest from \"../propensityTest/PropensityTest\";\nimport LoginModal from \"../LoginModal\";\nimport { Dialog } from \"@material-ui/core\";\nimport Slide from \"./SlideData.json\";\nimport EmailAuth from \"../EmailAuth\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst MainSlide = () => {\n  const [imageIndex, setImageIndex] = useState(0);\n  const [showModal, setShowModal] = React.useState(false);\n  const [loginShowModal, setLoginShowModal] = React.useState(false);\n  const [emailShowModal, setEmailShowModal] = React.useState(false);\n  const userInfo = useSelector((state) => state.user);\n  const isToken = document.cookie;\n  const history = useHistory();\n\n  const NextArrow = ({ onClick }) => {\n    return (\n      <div className=\"arrow next\" onClick={onClick}>\n        <KeyboardArrowRightIcon fontSize=\"small\" />\n      </div>\n    );\n  };\n\n  const PrevArrow = ({ onClick }) => {\n    return (\n      <div className=\"arrow prev\" onClick={onClick}>\n        <KeyboardArrowLeftIcon fontSize=\"small\" />\n      </div>\n    );\n  };\n\n  const settings = {\n    dots: false, //화면아래 컨텐츠 갯수 표시\n    autoplay: true, // 자동 스크롤 사용 여부\n    autoplaySpeed: 5000, // 자동 스크롤 시 다음으로 넘어가는데 걸리는 시간 (ms)\n    draggable: true, //드래그 가능 여부\n    infinite: true, //무한반복옵션\n    lazyLoad: true,\n    speed: 400, //다음버튼 누르고 다음화면 뜨는데까지 걸리는 시간\n    slidesToShow: 1, //화면에 보여질 개수\n    centerMode: true, //활성화 된 슬라이드 가운데 배치\n    centerPadding: 0, //center 슬라이드 패딩값\n    nextArrow: <NextArrow />, //다음 화살표 모양 설정\n    prevArrow: <PrevArrow />, //다음 화살표 모양 설정\n    beforeChange: (current, next) => setImageIndex(next), // beforeChange(slick, currentSlide)\t슬라이드 전 호출\n    // responsive: [\n    //   //반응형웹구현 옵션\n    //   {\n    //     breakpoint: 768, //화면사이즈\n    //     settings: {\n    //       centerMode: true,\n    //       centerPadding: \"40px\",\n    //       slidesToShow: 1,\n    //     },\n    //   },\n    // ],\n  };\n\n  const ClickEvent = (item) => {\n    if (!isToken && item.division !== null) {\n      setLoginShowModal(true);\n    }\n    if (item.division === \"test\" && isToken) {\n      setShowModal(true);\n    }\n    if (item.division === \"email\" && isToken) {\n      setEmailShowModal(true);\n    }\n    if (item.division === \"mypage\" && isToken) {\n      history.push(`/mypage/${userInfo.userId}`);\n    }\n  };\n\n  const TestClose = () => {\n    setShowModal(false);\n  };\n  return (\n    <React.Fragment>\n      <div className=\"Container\">\n        <Slider {...settings}>\n          {Slide.slide.map((item) => (\n            <div key={item.id} className=\"slide\">\n              <img\n                src={item.img}\n                alt={item.img}\n                onClick={() => {\n                  ClickEvent(item);\n                }}\n              />\n            </div>\n          ))}\n        </Slider>\n        <Dialog maxWidth={\"sm\"} scroll=\"paper\" open={showModal}>\n          <Grid width=\"550px\" height=\"100%\">\n            <PropensityTest TestClose={TestClose} />\n          </Grid>\n        </Dialog>\n        <LoginModal\n          showModal={loginShowModal}\n          setShowModal={setLoginShowModal}\n        />\n        <EmailAuth modal={emailShowModal} setModal={setEmailShowModal} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default MainSlide;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Button } from \"../../elements/Index\";\r\nconst SortText = (props) => {\r\n  //   console.log(\"소트\", props);\r\n  return (\r\n    <Filtering\r\n      id={props.item.id}\r\n      active={props.item.active}\r\n      onClick={() => {\r\n        props.onClick();\r\n      }}\r\n    >\r\n      {props.item.id}\r\n    </Filtering>\r\n  );\r\n};\r\n\r\nconst Filtering = styled.p`\r\n  margin: 25px 10px 25px 10px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  border-bottom: ${(props) =>\r\n    props.active ? \"1mm ridge rgb(170, 50, 220, .6)\" : null};\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    -webkit-transform: scale(1.05);\r\n    -moz-transform: scale(1.05);\r\n    -ms-transform: scale(1.05);\r\n    -o-transform: scale(1.05);\r\n    /* text-decoration: underline; */\r\n    color: #dacceb;\r\n  }\r\n`;\r\nexport default SortText;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport SortText from \"./SortText\";\r\nimport { Grid, Button } from \"../../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport { postActions } from \"../../redux/modules/post\";\r\nimport { sortAction } from \"../../redux/modules/sort\";\r\nimport { bookRecommendAction } from \"../../redux/modules/bookRecommend\";\r\nimport { pageAction } from \"../../redux/modules/infinity\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Sort = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isLoginUser = useSelector((state) => state.user.userId);\r\n  const [clickCheck, setClickCheck] = React.useState();\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"최신\",\r\n      status: \"createdAt\",\r\n      active: true,\r\n    },\r\n    {\r\n      id: \"마감순\",\r\n      status: \"deadline\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"북마크\",\r\n      status: \"bookmark\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"추천\",\r\n      status: \"recommend\",\r\n      active: false,\r\n    },\r\n  ]);\r\n\r\n  const onclickSort = (data) => {\r\n    // console.log(\"최신 마감순\", data);\r\n    dispatch(postActions.isMainPage(true));\r\n    dispatch(sortAction.getSort(data));\r\n    dispatch(bookRecommendAction.getRb(\"\"));\r\n    props.setPaging(12);\r\n  };\r\n  //bookmark,recommend\r\n  const onclickRb = (data) => {\r\n    // console.log(\"북마크 추천\", data);\r\n    dispatch(postActions.isMainPage(true));\r\n    dispatch(bookRecommendAction.getRb(data));\r\n    dispatch(sortAction.getSort(\"\"));\r\n    // if (paging > 0) {\r\n    //   setPaging(paging - 1);\r\n    // }\r\n    props.setPaging(12);\r\n  };\r\n\r\n  const Filter = (getItem) => {\r\n    if (!isLoginUser && (getItem.id === \"북마크\" || getItem.id === \"추천\")) {\r\n      return;\r\n    }\r\n    if (clickCheck === getItem.id) {\r\n      return;\r\n    }\r\n    const checked = arr.find((e) => e.active === true);\r\n    // console.log(\"ddddd\", checked);\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id === getItem.id) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id !== getItem.id && stateItem.active === true) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {arr && (\r\n        <FilterBox>\r\n          {arr.map((item) => {\r\n            return (\r\n              <SortText\r\n                item={item}\r\n                key={item.id}\r\n                page={props.page}\r\n                onClick={() => {\r\n                  Filter(item);\r\n                  if (item.id === \"최신\" || item.id === \"마감순\") {\r\n                    onclickSort(item.status);\r\n                  }\r\n                  if (\r\n                    isLoginUser &&\r\n                    (item.id === \"북마크\" || item.id === \"추천\")\r\n                  ) {\r\n                    onclickRb(item.status);\r\n                  }\r\n                  if (\r\n                    !isLoginUser &&\r\n                    (item.id === \"북마크\" || item.id === \"추천\")\r\n                  ) {\r\n                    // console.log(\"나는 유저\", isLoginUser);\r\n                    Swal.fire(\r\n                      \"로그인 후 이용하실 수 있습니다!\",\r\n                      \"로그인하고 프로젝트를 추천받아 보세요!\",\r\n                      \"warning\"\r\n                    );\r\n                  }\r\n                  setClickCheck(item.id);\r\n                }}\r\n              ></SortText>\r\n            );\r\n          })}\r\n        </FilterBox>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst FilterBox = styled.div`\r\n  display: flex;\r\n  font-size: 20px;\r\n  margin: 10px auto;\r\n  justify-content: flex-end;\r\n  width: 75%;\r\n  max-width: 1920px;\r\n  @media screen and (max-width: 1850px) {\r\n    justify-content: center;\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    justify-content: center;\r\n    font-size: 18px;\r\n  }\r\n`;\r\nexport default Sort;\r\n","/* eslint-disable */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header\";\nimport TopBanner from \"../components/carousel/TopBanner\";\nimport { Grid, Button } from \"../elements/Index\";\nimport Stack from \"../components/Stack\";\nimport PostList from \"../components/PostList\";\nimport { postActions } from \"../redux/modules/post\";\nimport { sortAction } from \"../redux/modules/sort\";\nimport { bookRecommendAction } from \"../redux/modules/bookRecommend\";\nimport { pageAction } from \"../redux/modules/infinity\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MainSlide from \"../components/carousel/MainSlide\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Tune } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router\";\nimport Sort from \"../components/filter/Sort\";\nimport { apis } from \"../lib/axios\";\n\nconst MainPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const stack = useSelector((state) => state.stack.stack);\n  const sortC = useSelector((state) => state.sort.sort);\n  const isToken = document.cookie;\n  // const cards = useSelector((state) => state.post.posts);\n  // console.log(cards);\n  const reBookC = useSelector((state) => state.rebook.reBook);\n  const pageCheck = useSelector((state) => state.post.pageCheck);\n  const infinity = useSelector((state) => state.infinity.paging);\n  const Render = useSelector((state) => state.post.render);\n  const [ref, inView] = useInView();\n  const [paging, setPaging] = React.useState(infinity.next);\n  const [pPaging, setPPaging] = React.useState(12);\n  const [nowFilter, setNowFilter] = React.useState(\"최신\");\n  const [post, setPost] = React.useState();\n\n  //프론트쪽에서 필터\n  const [stacks, setStacks] = React.useState([]);\n  const [sorts, setSrots] = React.useState();\n  const [reBooks, setReBookss] = React.useState();\n\n  const postList = useSelector((state) => state.post.posts);\n  const isLoginUser = useSelector((state) => state.user.userId);\n  const isLogin = useSelector((state) => state.user.isLogin);\n\n  // let container = React.useRef();\n  React.useLayoutEffect(() => {\n    setPost();\n    dispatch(postActions.whatPage(\"mainPage\"));\n\n    const fetchData = async () => {\n      try {\n        const result = await apis.getPost(stack, sortC, reBookC);\n        setPost(result.data.data);\n        console.log(result);\n        // container.current.scrollTo(0, lastScroll);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, [sortC, reBookC, Render, isToken, Render]);\n\n  // React.useLayoutEffect(() => {\n  //   dispatch(postActions.whatPage(\"mainPage\"));\n  //   // dispatch(postActions.getPostAPI());\n  //   // console.log(cards);\n\n  //   // console.log(post);\n  // }, [sortC, stack, reBookC, Render, isLogin]);\n  // stack, sortC, reBookC, Render, isLogin\n\n  React.useEffect(() => {\n    if (inView === true) {\n      // setPaging(paging + 12);\n      setPPaging(pPaging + 12);\n      // console.log(\"내가 페이지\", infinity);\n      // dispatch(pageAction.getPage(paging));\n      if (postList.length === 0 && pageCheck === false) {\n        dispatch(postActions.pageCheck(true));\n      }\n    } // 옵저버를 좀 더 위로\n    // console.log(pPaging);\n  }, [inView]);\n\n  const goPage = () => {\n    window.open(\n      \"https://docs.google.com/forms/u/0/d/e/1FAIpQLSfl6t0O_P5mXR6wo1cqIZ7TWkYduTkZiNlx0r5HynoArgS9Tg/formResponse\",\n      \"_blank\"\n    );\n  };\n\n  // const lastScroll = useSelector((state) => state.infinity.current_scroll);\n  // let timer;\n  // const scroll = (e) => {\n  //   console.log(e);\n  //   if (timer) {\n  //     clearTimeout(timer);\n  //   }\n  //   timer = setTimeout(function () {\n  //     dispatch(pageAction.getScroll(e.target.scrollTop));\n  //   }, 500);\n  // };\n\n  // React.useEffect(() => {\n\n  // }, []);\n  // onScroll={scroll} ref={container}\n  return (\n    <div>\n      <Grid\n        maxWidth=\"1920px\"\n        height=\"100%\"\n        bg=\"#ffff\"\n        padding=\"0px 0px 10px 0\"\n      ></Grid>\n      <Grid margin=\"-10px 0 0 0 \">\n        <Inside>\n          <MainSlide />\n          <Stacks>\n            <Stack\n              do={\"StacksComponent\"}\n              setStacks={setStacks}\n              stacks={stacks}\n            />\n          </Stacks>\n          <Sort setPaging={setPaging} page=\"mainPage\"></Sort>\n          {post && (\n            <>\n              <InsideCard>\n                <PostList\n                  post={post}\n                  paging={pPaging}\n                  stacks={stacks}\n                  Render={Render}\n                  isLogin={isLogin}\n                ></PostList>\n              </InsideCard>\n\n              {nowFilter !== \"bookmark\" && (\n                <Grid margin=\"-550px 0 0 0\">\n                  <div\n                    ref={ref}\n                    style={{\n                      height: \"500px\",\n                      backgroundColor: \"white\",\n                    }}\n                  ></div>\n                </Grid>\n              )}\n            </>\n          )}\n          {isLoginUser && (\n            <Btn\n              onClick={() => {\n                history.push(\"/postadd\");\n              }}\n            >\n              <i\n                style={{\n                  fontSize: \"25px\",\n                  margin: \"auto\",\n                  color: \"white\",\n                }}\n                className=\"fas fa-plus\"\n              ></i>\n            </Btn>\n          )}\n\n          <BtnFeedback\n            src=\"/img/FeedbackBox.png\"\n            onClick={() => {\n              goPage();\n            }}\n          ></BtnFeedback>\n        </Inside>\n        <Grid height=\"600px\"></Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst Inside = styled.div`\n  margin: auto;\n  @media screen and (max-width: 750px) {\n  } ;\n`;\n\nconst InsideCard = styled.div`\n  margin: 10px auto;\n  width: 75%;\n  max-width: 1920px;\n  @media screen and (max-width: 750px) {\n    margin: auto;\n  } ;\n`;\n\nconst Stacks = styled.div`\n  display: flex;\n  font-size: 50px;\n  margin-top: 20px;\n`;\n\nconst Btn = styled.button`\n  position: fixed;\n  bottom: 70px;\n  border: 1px solid #c4c4c4;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  right: 50px;\n  margin: auto;\n  background: #c4c4c4;\n  cursor: pointer;\n  z-index: 999;\n  &:hover {\n    background: #17334a;\n    transform: translate();\n    transition: 0.1s ease-out;\n  }\n\n  @media screen and (max-width: 750px) {\n    position: fixed;\n    display: none;\n    border: 1px solid #42309b;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    text-align: center;\n    right: 5px;\n    bottom: 5px;\n    margin: auto;\n    background: #42309b;\n    cursor: pointer;\n    z-index: 999;\n  } ;\n`;\n\nconst BtnFeedback = styled.img`\n  position: fixed;\n  bottom: 70px;\n  /* border: 1px solid #c4c4c4; */\n  /* border-radius: 50%; */\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  left: 50px;\n  margin: auto;\n  /* background: #c4c4c4; */\n  cursor: pointer;\n  z-index: 999;\n  transition: all ease 0.3s;\n  &:hover {\n    transform: rotate(45deg);\n  }\n\n  @media screen and (max-width: 767px) {\n    position: fixed;\n\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    left: 5px;\n    bottom: 80px;\n    margin: auto;\n    cursor: pointer;\n    z-index: 999;\n  } ;\n`;\n\nexport default MainPage;\n","/* eslint-disable */\nimport React from \"react\";\n\nimport { userCreators } from \"../redux/modules/user\";\nimport Spinner from \"./Spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst KakaoRedirect = (props) => {\n  const dispatch = useDispatch();\n  const pageGo = useSelector((state) => state.pagecheck);\n\n  // 인가코드\n  let code = new URL(window.location.href).searchParams.get(\"code\");\n\n  React.useEffect(() => {\n    if (pageGo) {\n      console.log(pageGo);\n      dispatch(userCreators.kakaologinMiddleware(code, pageGo));\n    }\n  }, []);\n\n  return <Spinner />;\n};\n\nexport default KakaoRedirect;\n","/* eslint-disable */\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { userCreators } from \"../redux/modules/user\";\nimport Spinner from \"./Spinner\";\n\nconst KakaoRedirect = (props) => {\n  const dispatch = useDispatch();\n\n  // 인가코드\n  let code = new URL(window.location.href).searchParams.get(\"code\");\n\n  React.useEffect(() => {\n    dispatch(userCreators.githubLoginMiddleware(code));\n  }, []);\n\n  return <Spinner />;\n};\n\nexport default KakaoRedirect;\n","/* eslint-disable */\r\nimport React from \"react\";\r\n// import MypagePost from \"./MypagePost\";\r\nimport Post from \"../Post\";\r\nimport { Grid, Image } from \"../../elements/Index\";\r\nimport styled from \"styled-components\";\r\nconst MypagePostList = (props) => {\r\n  // console.log(props);\r\n  const mypage = true;\r\n\r\n  const myCards = props;\r\n  const newMyCards = Object.values(myCards);\r\n  // console.log(myCards);\r\n  // console.log(newMyCards);\r\n\r\n  return (\r\n    <>\r\n      {newMyCards && (\r\n        <React.Fragment>\r\n          <PostWrap>\r\n            {newMyCards.map((p) => {\r\n              return <Post mypage={mypage} key={p.postId} {...p}></Post>;\r\n            })}\r\n          </PostWrap>\r\n        </React.Fragment>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst PostWrap = styled.div`\r\n  width: 50%;\r\n  margin: 0 0 0 33%;\r\n  display: grid;\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));\r\n  /* grid-gap: 1px; */\r\n  @media (max-width: 1200px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));\r\n    margin: auto;\r\n  }\r\n  @media (max-width: 420px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\r\n  }\r\n`;\r\n\r\nexport default MypagePostList;\r\n","/* eslint-disable */\r\nimport { Container } from \"@material-ui/core\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport \"@toast-ui/editor/dist/toastui-editor-viewer.css\";\r\nimport { Viewer } from \"@toast-ui/react-editor\";\r\n\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ContentPage(props) {\r\n  // console.log(props);\r\n  const textData = props.introduction;\r\n  return (\r\n    <>\r\n      {textData && (\r\n        <>\r\n          <MarkdownWrap>\r\n            <Viewer initialValue={textData} />\r\n          </MarkdownWrap>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst MarkdownWrap = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n`;\r\nexport default ContentPage;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport EmailAuth from \"../EmailAuth\";\r\nconst Banners = props => {\r\n  //   console.log(props);\r\n  const [myData, setMyData] = React.useState();\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"LVG\",\r\n      name: \"호랑이\",\r\n      img: \"/img/호랑이배너.jpg\",\r\n      color: \"#eed691\",\r\n    },\r\n    {\r\n      id: \"LVP\",\r\n      name: \"늑대\",\r\n      img: \"/img/늑대배너.jpg\",\r\n      color: \"#afa9a0\",\r\n    },\r\n    {\r\n      id: \"LHG\",\r\n      name: \"여우\",\r\n      img: \"/img/여우배너.jpg\",\r\n      color: \"#e4812a\",\r\n    },\r\n    {\r\n      id: \"LHP\",\r\n      name: \"팬더\",\r\n      img: \"/img/팬더배너.jpg\",\r\n      color: \"#e4812a\",\r\n    },\r\n    {\r\n      id: \"FVG\",\r\n      name: \"토끼\",\r\n      img: \"/img/토끼배너.jpg\",\r\n      color: \"#998fc9\",\r\n    },\r\n    {\r\n      id: \"FVP\",\r\n      name: \"강아지\",\r\n      img: \"/img/강아지배너.jpg\",\r\n      color: \"#e8ddb8\",\r\n    },\r\n    {\r\n      id: \"FHG\",\r\n      name: \"고양이\",\r\n      img: \"/img/고양이배너.jpg\",\r\n      color: \"#6d6e72\",\r\n    },\r\n    {\r\n      id: \"FHP\",\r\n      name: \"물개\",\r\n      img: \"/img/물개배너.jpg\",\r\n      color: \"#a9adb3\",\r\n    },\r\n    {\r\n      id: \"RHP\",\r\n      name: \"너구리\",\r\n      img: \"/img/너구리배너.jpg\",\r\n      color: \"#926D41\",\r\n    },\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    arr.map(item => {\r\n      if (props.type === item.id) {\r\n        setMyData(item);\r\n      }\r\n    });\r\n    // console.log(myData);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {myData && (\r\n        <BannerAnimals color={myData.color}>\r\n          <BannerImg src={myData.img}></BannerImg>\r\n          {/* <Grid\r\n            margin=\"-600px 0 0 33.5%\"\r\n            display=\"flex\"\r\n            height=\"200px\"\r\n            width=\"100%\"\r\n            justifyContent=\"space-between\"\r\n            \r\n          >\r\n            <WhiteP>\r\n              {myData.id} / {myData.name}\r\n            </WhiteP> */}\r\n\r\n          {/* {props.myPage === true && (\r\n              <Grid alignItems=\"center\" display=\"flex\" justifyContent=\"center\">\r\n                <ConfirmEmail\r\n                  onClick={() => {\r\n                    props.onClick();\r\n                  }}\r\n                >\r\n                  이메일 인증하기\r\n                </ConfirmEmail>\r\n                <EmailAuth modal={props.modal} setModal={props.setModal} />\r\n              </Grid>\r\n            )} */}\r\n          {/* </Grid> */}\r\n        </BannerAnimals>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst BannerImg = styled.img`\r\n  object-fit: cover;\r\n`;\r\n\r\nconst BannerAnimals = styled.div`\r\n  width: 100%;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n\r\n  background-color: ${props => (props.color ? props.color : \"#white\")};\r\n  z-index: 0;\r\n`;\r\n\r\nconst ConfirmEmail = styled.button`\r\n  width: 160px;\r\n  padding: 8px 20px;\r\n  border: 1px solid white;\r\n  background-color: transparent;\r\n  color: white;\r\n  border-radius: 10px;\r\n  z-index: 99999;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: black;\r\n    background-color: white;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  @media screen and (max-width: 750px) {\r\n    color: black;\r\n  } ;\r\n`;\r\n\r\nconst WhiteP = styled.p`\r\n  font-size: 30px;\r\n  color: white;\r\n  font-weight: bold;\r\n  width: 180px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nexport default Banners;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport ImgType from \"../../../shared/ImgType\";\r\n\r\nconst CardImgs = props => {\r\n  return (\r\n    <div>\r\n      <ImgType\r\n        type={props.myType}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        object_fit=\"cover\"\r\n        position=\"relative\"\r\n\r\n        // right=\"60px\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default CardImgs;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport { Grid, Button, Input, Text } from \"../elements/Index\";\r\nimport styled from \"styled-components\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { apis } from \"../lib/axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { userCreators } from \"../redux/modules/user\";\r\nimport { deleteCookie } from \"../shared/Cookie\";\r\nimport { useHistory } from \"react-router\";\r\nconst EmailAuth = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { modal, setModal } = props;\r\n  const modalClose = () => {\r\n    setModal(false);\r\n  };\r\n  // console.log(props);\r\n\r\n  const UserDelete = () => {\r\n    const fetchData = async () => {\r\n      const result = await apis.deleteUser(props.userId);\r\n      try {\r\n        // console.log(result);\r\n        // window.alert(result.data.msg);\r\n        Swal.fire(`${result.data.msg}`, \"\", \"info\");\r\n        deleteCookie(\"ScopeUser\");\r\n        history.push(\"/\");\r\n\r\n        dispatch(userCreators.logOut());\r\n        setModal(false);\r\n      } catch (err) {\r\n        console.log(err.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  };\r\n  return (\r\n    <Dialog maxWidth={\"sm\"} scroll=\"paper\" open={modal}>\r\n      <ModalWrap>\r\n        <Grid>\r\n          {/* 헤더 */}\r\n          <Grid\r\n            width=\"100%\"\r\n            height=\"13%\"\r\n            // bg=\"#B29CF4\"\r\n            position=\"relative\"\r\n            textAlign=\"center\"\r\n            padding=\"10px 0 10px 0\"\r\n          >\r\n            <Grid\r\n              position=\"absolute\"\r\n              top=\"0px\"\r\n              right=\"20px\"\r\n              width=\"20px\"\r\n              padding=\"10px\"\r\n            >\r\n              <CloseIcon fontSize=\"large\" onClick={modalClose} />\r\n            </Grid>\r\n            <Grid margin=\"20px 0 0 0\">\r\n              <Text size=\"30px\" bold color=\"#08061D\">\r\n                회원 탈퇴\r\n              </Text>\r\n            </Grid>\r\n          </Grid>\r\n          {/* 내용작성 */}\r\n          <Grid margin=\"60px 0 0 0\">\r\n            <Dec>정말 탈퇴 하시겠습니까?</Dec>\r\n            <Dec>게시자가 회원 탈퇴시 작성된 포스트는 모두 제거됩니다.</Dec>\r\n            <Dec>지원한 프로젝트는 모두 탈퇴됩니다.</Dec>\r\n\r\n            {/* <Grid margin=\"10px 0 0 18%\" width=\"320px\"></Grid> */}\r\n\r\n            <Button\r\n              width=\"320px\"\r\n              // height=\"50px\"\r\n              margin=\"50px 0 0 21%\"\r\n              _onClick={() => {\r\n                UserDelete();\r\n              }}\r\n            >\r\n              회원 탈퇴하기\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </ModalWrap>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ModalWrap = styled.div`\r\n  width: 550px;\r\n  height: 350px;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n`;\r\nconst Dec = styled.p`\r\n  color: #08061d;\r\n  font-size: 14px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  /* margin-top: 80px; */\r\n`;\r\n\r\nexport default EmailAuth;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../../elements/Index\";\r\n\r\nconst CardUserInfo = (props) => {\r\n  const [techStack, setTeckstack] = React.useState([]);\r\n  const [nickName, setNickName] = React.useState();\r\n  const [email, setEmail] = React.useState();\r\n\r\n  return (\r\n    <div>\r\n      {props.nickName && props.email && (\r\n        <>\r\n          <MyInfoText1>\r\n            <div style={{ width: \"95px\", marginLeft: \"25px\" }}>\r\n              <p>NickName </p>\r\n            </div>\r\n            <div style={{ width: \"100px\" }}>\r\n              <p>{props.nickName}</p>\r\n            </div>\r\n          </MyInfoText1>\r\n          {/* Email */}\r\n          <MyInfoText1>\r\n            <div\r\n              style={{\r\n                width: \"95px\",\r\n                marginLeft: \"25px\",\r\n              }}\r\n            >\r\n              <p>E-mail </p>\r\n            </div>\r\n            <div style={{ width: \"90px\" }}>\r\n              <p>{props.email}</p>\r\n            </div>\r\n          </MyInfoText1>\r\n        </>\r\n      )}\r\n\r\n      {/* 기술 스텍 */}\r\n      <MyInfoText1>\r\n        <div\r\n          style={{\r\n            width: \"95px\",\r\n            marginLeft: \"25px\",\r\n            height: \"150px\",\r\n          }}\r\n        >\r\n          <p>TechStack </p>\r\n        </div>\r\n        {props.techStack && (\r\n          <>\r\n            <div style={{ width: \"120px\" }}>\r\n              {props.techStack?.map((p, idx) => {\r\n                return <p key={idx}>{p}</p>;\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </MyInfoText1>\r\n      <Line></Line>\r\n      {/* 진행 프로젝트 */}\r\n      <MyInfoText2>\r\n        <div style={{ width: \"300px\", marginLeft: \"30px\" }}>\r\n          <p>모집 프로젝트 </p>\r\n        </div>\r\n        <div style={{ width: \"50px\", marginLeft: \"100px\" }}>\r\n          <p>{props.mydata.recruitment.length}</p>\r\n        </div>\r\n      </MyInfoText2>\r\n      {/* 참여 프로젝트 */}\r\n      <MyInfoText2>\r\n        <div style={{ width: \"300px\", marginLeft: \"30px\" }}>\r\n          <p>진행 프로젝트 </p>\r\n        </div>\r\n        <div style={{ width: \"50px\", marginLeft: \"100px\" }}>\r\n          <p>{props.mydata.inProgress.length}</p>\r\n        </div>\r\n      </MyInfoText2>\r\n      {/* 마감 프로젝트 */}\r\n      <MyInfoText2>\r\n        <div style={{ width: \"300px\", marginLeft: \"30px\" }}>\r\n          <p>완료 프로젝트 </p>\r\n        </div>\r\n        <div style={{ width: \"50px\", marginLeft: \"100px\" }}>\r\n          <p>{props.mydata.end.length}</p>\r\n        </div>\r\n      </MyInfoText2>\r\n      {props.mydata?.isMyMypage === true && (\r\n        <>\r\n          <Button\r\n            margin=\"15px auto 15px 30%\"\r\n            height=\"40px\"\r\n            width=\"132px\"\r\n            text=\"프로필 수정하기\"\r\n            _onClick={() => {\r\n              props.onClick();\r\n            }}\r\n          ></Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MyInfoText1 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\nconst MyInfoText2 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\n\r\nconst Line = styled.hr`\r\n  width: 80%;\r\n  color: black;\r\n`;\r\nexport default CardUserInfo;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport CardImgs from \"./card/CardImgs\";\r\nimport Select from \"react-select\";\r\nimport DeleteUserModal from \"../../modal/DeleteUserModal\";\r\nimport Swal from \"sweetalert2\";\r\nimport { apis } from \"../../lib/axios\";\r\nimport CardUserInfo from \"./card/CardUserInfo\";\r\n\r\nconst MypageCard = (props) => {\r\n  const [editMyProfile, setEditMyProfile] = React.useState(false); //\r\n  const [checkEmail, setCheckEmail] = React.useState();\r\n  const [deleteModal, setDeleteModal] = React.useState(false);\r\n  const [techStack, setTeckstack] = React.useState([]);\r\n  const [nickName, setNickName] = React.useState(props.nickName);\r\n  const [email, setEmail] = React.useState(props.email);\r\n\r\n  const styles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      boxShadow: state.isFocused ? 0 : 0,\r\n      borderWidth: 2,\r\n      minHeight: 40,\r\n      borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\r\n      \"&:hover\": {\r\n        borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\r\n      },\r\n    }),\r\n  };\r\n\r\n  function fn_submit(data) {\r\n    let userData = {\r\n      nickname: nickName,\r\n      email: email,\r\n      userTechStack: techStack,\r\n    };\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log(userData);\r\n        const result = await apis.editUserInfo(props.userId, userData);\r\n        // console.log(result);\r\n        setEditMyProfile(false);\r\n        props.onClick2();\r\n        Swal.fire(\"수정 완료!\", \"\", \"success\");\r\n      } catch (err) {\r\n        console.log(err.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  }\r\n\r\n  const setEditProfile = () => {\r\n    if (techStack.length > 4) {\r\n      Swal.fire(\"기술은 4개 까지 선택 가능합니다.\", \"\", \"warning\");\r\n      return;\r\n    }\r\n    fn_submit(email);\r\n  };\r\n  const deleteUser = () => {\r\n    setDeleteModal(true);\r\n  };\r\n\r\n  //테크스택 옵션\r\n  const techStackOption = [\r\n    { value: \"React\", label: \"React\" },\r\n    { value: \"Java\", label: \"Java\" },\r\n    { value: \"JavaScript\", label: \"JavaScript\" },\r\n    { value: \"Python\", label: \"Python\" },\r\n    { value: \"Spring\", label: \"Spring\" },\r\n    { value: \"Node\", label: \"Node\" },\r\n    { value: \"cpp\", label: \"C++\" },\r\n    { value: \"Flask\", label: \"Flask\" },\r\n    { value: \"Django\", label: \"Django\" },\r\n    { value: \"Vue\", label: \"Vue\" },\r\n    { value: \"php\", label: \"php\" },\r\n    { value: \"Swift\", label: \"Swift\" },\r\n    { value: \"Kotlin\", label: \"Kotlin\" },\r\n    { value: \"TypeScript\", label: \"TypeScript\" },\r\n  ];\r\n\r\n  return (\r\n    <Cards>\r\n      <CardImgs myType={props.myType} />\r\n\r\n      {props.editMyProfile === false && (\r\n        <>\r\n          <CardUserInfo\r\n            editMyProfile={props.editMyProfile}\r\n            setEditMyProfile={props.setEditMyProfile}\r\n            mydata={props.mydata}\r\n            myType={props.myType}\r\n            myUserId={props.myUserId}\r\n            userId={props.userId}\r\n            nickName={props.nickName}\r\n            email={props.email}\r\n            techStack={props.techStack}\r\n            onClick={props.onClick}\r\n          />\r\n        </>\r\n      )}\r\n      {props.editMyProfile === true && (\r\n        <>\r\n          {/* 닉네임 */}\r\n          <MyInfoText1>\r\n            <div style={{ width: \"90px\", marginLeft: \"30px\" }}>\r\n              <p>NickName </p>\r\n            </div>\r\n            <div style={{ width: \"150px\", alignItems: \"center\" }}>\r\n              <input\r\n                style={{\r\n                  borderRadius: \"5px\",\r\n                  borderColor: \"#707070\",\r\n                  WebkitAppearance: \"none\",\r\n                  MozAppearance: \"none\",\r\n                  appearance: \"none\",\r\n                  color: \"#707070\",\r\n                  border: \"1px solid #707070\",\r\n                  outlineStyle: \"none\",\r\n                  margin: \"13px 0 0 0\",\r\n                  width: \"150px\",\r\n                  padding: \"7px\",\r\n                }}\r\n                defaultValue={props.nickName}\r\n                onChange={(e) => {\r\n                  setNickName(e.target.value);\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </MyInfoText1>\r\n\r\n          {/* 이메일 */}\r\n          <MyInfoText1>\r\n            <div\r\n              style={{\r\n                width: \"90px\",\r\n                marginLeft: \"30px\",\r\n                height: \"60px\",\r\n              }}\r\n            >\r\n              <p style={{ marginTop: \"20px\" }}>E-mail </p>\r\n            </div>\r\n            <div style={{ width: \"90px\" }}>\r\n              <input\r\n                style={{\r\n                  borderRadius: \"5px\",\r\n                  borderColor: \"#707070\",\r\n                  WebkitAppearance: \"none\",\r\n                  MozAppearance: \"none\",\r\n                  appearance: \"none\",\r\n                  color: \"#707070\",\r\n                  border: \"1px solid #707070\",\r\n                  outlineStyle: \"none\",\r\n                  margin: \"15px 0 0 0\",\r\n                  width: \"150px\",\r\n                  padding: \"7px\",\r\n                }}\r\n                defaultValue={props.email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </MyInfoText1>\r\n          {/* 기술스택 */}\r\n          <MyInfoText1>\r\n            <div\r\n              style={{\r\n                width: \"90px\",\r\n                marginLeft: \"30px\",\r\n                height: \"80px\",\r\n              }}\r\n            >\r\n              <p style={{}}>TechStack </p>\r\n            </div>\r\n            <Grid width=\"167px\">\r\n              <Select\r\n                isMulti\r\n                name=\"techStack\"\r\n                options={techStackOption}\r\n                styles={styles}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={(e) => {\r\n                  let techStack = [];\r\n                  let arr = e;\r\n                  let idx = 0;\r\n                  for (idx = 0; idx < e.length; idx++) {\r\n                    techStack.push(arr[idx][\"value\"]);\r\n                  }\r\n                  setTeckstack(techStack);\r\n                  // console.log(techStack);\r\n                }}\r\n              >\r\n                기술스택\r\n              </Select>\r\n            </Grid>\r\n          </MyInfoText1>\r\n          <Line></Line>\r\n          {/* 진행 프로젝트 */}\r\n          <MyInfoText2>\r\n            <div style={{ width: \"150px\", marginLeft: \"30px\" }}></div>\r\n            <div style={{ width: \"50px\", marginLeft: \"100px\" }}></div>\r\n          </MyInfoText2>\r\n          {/* 참여 프로젝트 */}\r\n          <MyInfoText2>\r\n            <div style={{ width: \"150px\", marginLeft: \"30px\" }}></div>\r\n            <div style={{ width: \"50px\", marginLeft: \"100px\" }}></div>\r\n          </MyInfoText2>\r\n          {/* 마감 프로젝트 */}\r\n          <MyInfoText2>\r\n            <div style={{ width: \"150px\", marginLeft: \"30px\" }}></div>\r\n            <div style={{ width: \"50px\", marginLeft: \"100px\" }}></div>\r\n          </MyInfoText2>\r\n\r\n          <div style={{ display: \"flex\" }}>\r\n            <Button\r\n              margin=\"15px auto 15px 6%\"\r\n              height=\"40px\"\r\n              width=\"132px\"\r\n              text=\"프로필 저장하기\"\r\n              _onClick={setEditProfile}\r\n            ></Button>\r\n            <Button\r\n              margin=\"15px auto 15px -4%\"\r\n              height=\"40px\"\r\n              width=\"132px\"\r\n              text=\"취소하기\"\r\n              _onClick={() => {\r\n                props.onClick2();\r\n              }}\r\n            ></Button>\r\n\r\n            <DeleteUserModal\r\n              modal={deleteModal}\r\n              setModal={setDeleteModal}\r\n              userId={props.myUserId}\r\n            />\r\n          </div>\r\n          <Exit onClick={deleteUser}> 회원탈퇴 </Exit>\r\n        </>\r\n      )}\r\n    </Cards>\r\n  );\r\n};\r\n\r\nconst Cards = styled.div`\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\r\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\r\n\r\n  width: 100%;\r\n  height: 900px;\r\n  /* background-color: rgba(255, 255, 255, 0); */\r\n  background-color: white;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n\r\n  position: absolute;\r\n  right: -35%;\r\n  top: -600%;\r\n  @media screen and (max-width: 1600px) {\r\n    width: 90%;\r\n    position: absolute;\r\n    right: -15%;\r\n  }\r\n  @media screen and (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst MyInfoText1 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\nconst MyInfoText2 = styled.div`\r\n  font-size: 14px;\r\n  display: flex;\r\n  color: #737373;\r\n`;\r\nconst Line = styled.hr`\r\n  width: 80%;\r\n  color: black;\r\n`;\r\nconst Exit = styled.button`\r\n  margin: 0px auto 15px 28%;\r\n  height: 40px;\r\n  width: 132px;\r\n  background-color: white;\r\n  border: 1px solid #d1d1d1;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: black;\r\n    background-color: #d1d1d1;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\nexport default MypageCard;\r\n","/* eslint-disable */\r\n\r\nimport React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport PropensityTest from \"../propensityTest/PropensityTest\";\r\nimport styled from \"styled-components\";\r\nimport { map, stubFalse } from \"lodash\";\r\nimport { Grid4x4 } from \"@mui/icons-material\";\r\nimport EmailAuth from \"../EmailAuth\";\r\n\r\nconst TypeResultTest = (props) => {\r\n  const [myData, setMyData] = React.useState();\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"LVG\",\r\n      name: \"호랑이\",\r\n      type: \"리더\",\r\n      type2: \"수직\",\r\n      type3: \"결과\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수직적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"LVP\",\r\n      name: \"늑대\",\r\n      type: \"리더\",\r\n      type2: \"수직\",\r\n      type3: \"과정\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수직적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \" 결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"LHG\",\r\n      name: \"여우\",\r\n      type: \"리더\",\r\n      type2: \"수평\",\r\n      type3: \"결과\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수평적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"LHP\",\r\n      name: \"팬더\",\r\n      type: \"리더\",\r\n      type2: \"수평\",\r\n      type3: \"과정\",\r\n      text1: `리더형인 당신은 `,\r\n      text2: \"리더 이지만 수평적 리더십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FVG\",\r\n      name: \"토끼\",\r\n      type: \"팔로워\",\r\n      type2: \"수직\",\r\n      type3: \"결과\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수직적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FVP\",\r\n      name: \"강아지\",\r\n      type: \"팔로워\",\r\n      type2: \"수직\",\r\n      type3: \"과정\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수직적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FHG\",\r\n      name: \"고양이\",\r\n      type: \"팔로워\",\r\n      type2: \"수평\",\r\n      type3: \"결과\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수평적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"과정보다는 결과를 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"FHP\",\r\n      name: \"물개\",\r\n      type: \"팔로워\",\r\n      type2: \"수평\",\r\n      type3: \"과정\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수평적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n    {\r\n      id: \"RHP\",\r\n      name: \"너구리\",\r\n      type: \"팔로워\",\r\n      type2: \"수평\",\r\n      type3: \"과정\",\r\n      text1: `팔로우형 당신은 `,\r\n      text2: \"팔로워 이지만 수평적 팔로워십\",\r\n      text3: \"을 원해요!\",\r\n      text4:\r\n        \"결과보다는 과정을 중요시하는 당신은 우리 스코프 사이드 프로젝트에 적합한 사람!\",\r\n    },\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    // console.log(\"테스트결과\", props);\r\n    arr.map((item) => {\r\n      if (item.id === props.myType) {\r\n        setMyData(item);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Wrap>\r\n      {myData && (\r\n        <Grid\r\n          zIndex=\"1\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          margin=\"auto\"\r\n        >\r\n          <Grid\r\n            display=\"flex\"\r\n            // border=\"1px solid #333\"\r\n            borderRadius=\"15px\"\r\n            height=\"1%\"\r\n          >\r\n            <MyResultDiv>\r\n              <MyResultText>#{myData.type}</MyResultText>\r\n              <MyResultText>#{myData.type2}</MyResultText>\r\n              <MyResultText>#{myData.type3}</MyResultText>\r\n            </MyResultDiv>\r\n          </Grid>\r\n          <Grid height=\"23%\">\r\n            <WhiteP>\r\n              {myData.id} / {myData.name}\r\n            </WhiteP>\r\n          </Grid>\r\n\r\n          <Grid margin=\"0 0 0 20px\" height=\"11%\">\r\n            <Grid display=\"flex\" height=\"80%\">\r\n              <MyResultText2>{myData.text1}</MyResultText2>\r\n              <MyResultTextBold>{myData.text2}</MyResultTextBold>\r\n              <MyResultText2>{myData.text3}</MyResultText2>\r\n            </Grid>\r\n            <Grid display=\"flex\">\r\n              <MyResultText2>{myData.text4}</MyResultText2>\r\n            </Grid>\r\n            {props.userId == props.myUserId &&\r\n              props.mydata?.isMyMypage === true && (\r\n                <Grid\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  height=\"100%\"\r\n                  position=\"relative\"\r\n                  margin=\"15px 0 0 0\"\r\n                  width=\"100%\"\r\n                  maxWidth=\"1150px\"\r\n                >\r\n                  <GotoTest\r\n                    onClick={() => {\r\n                      props.EditTest();\r\n                    }}\r\n                  >\r\n                    성향 테스트 다시하기⇀\r\n                  </GotoTest>\r\n\r\n                  <ConfirmEmail\r\n                    onClick={() => {\r\n                      props.onClick();\r\n                    }}\r\n                  >\r\n                    이메일 인증하기\r\n                  </ConfirmEmail>\r\n                  <EmailAuth modal={props.modal} setModal={props.setModal} />\r\n                </Grid>\r\n              )}\r\n            <Dialog maxWidth={\"sm\"} scroll=\"paper\" open={props.testmodal}>\r\n              <TestWrap>\r\n                <PropensityTest TestClose={props.TestClose} />\r\n              </TestWrap>\r\n            </Dialog>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  height: 100%;\r\n  width: 60vw;\r\n  margin-left: 30%;\r\n  @media screen and (max-width: 1600px) {\r\n    margin-left: 34%;\r\n  }\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    width: 90vw;\r\n    margin: auto;\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    width: 90vw;\r\n    margin: auto;\r\n  } ;\r\n`;\r\nconst MyResultDiv = styled.div`\r\n  display: flex;\r\n  width: auto;\r\n  align-items: center;\r\n`;\r\n\r\nconst MyResultText = styled.div`\r\n  width: auto;\r\n  height: 32px;\r\n\r\n  color: white;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst GotoTest = styled.p`\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  /* float: right; */\r\n  margin-right: 10px;\r\n  margin-top: 30px;\r\n  position: relative;\r\n  z-index: 999;\r\n  @media screen and (max-width: 370px) {\r\n    font-size: 12px;\r\n  } ;\r\n`;\r\nconst MyResultText2 = styled.p`\r\n  color: white;\r\n  font-size: 17px;\r\n  height: 17px;\r\n  width: auto;\r\n  @media screen and (max-width: 670px) {\r\n    display: none;\r\n  } ;\r\n`;\r\nconst MyResultTextBold = styled.p`\r\n  color: white;\r\n  font-size: 17px;\r\n  height: 17px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ConfirmEmail = styled.button`\r\n  width: 160px;\r\n  height: 35px;\r\n  padding: 8px 20px;\r\n  border: 1px solid white;\r\n  background-color: transparent;\r\n  color: white;\r\n  border-radius: 10px;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: black;\r\n    background-color: white;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  @media screen and (max-width: 750px) {\r\n    color: black;\r\n  } ;\r\n`;\r\n\r\nconst WhiteP = styled.p`\r\n  font-size: 30px;\r\n  color: white;\r\n  font-weight: bold;\r\n  width: 300px;\r\n  margin-left: 13px;\r\n`;\r\n\r\nconst TestWrap = styled.div`\r\n  height: 100%;\r\n  width: 550px;\r\n\r\n  @media (max-width: 650px) {\r\n    width: 330px;\r\n    height: 550px;\r\n  }\r\n`;\r\nexport default TypeResultTest;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../../elements/Index\";\r\n\r\nconst MyFilter = (props) => {\r\n  // console.log(props);\r\n  return (\r\n    <>\r\n      {props && (\r\n        <Grid>\r\n          <FilterDiv active={props.active}>\r\n            <Filter\r\n              id={props.id}\r\n              active={props.active}\r\n              onClick={() => {\r\n                props.setStatus(props.id);\r\n                props.onClick(props.id);\r\n              }}\r\n            >\r\n              {props.id}\r\n            </Filter>\r\n          </FilterDiv>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst FilterDiv = styled.div`\r\n  align-items: center;\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n  width: 80%;\r\n  height: 35px;\r\n\r\n  /* background-color: ${(props) => (props.active ? \"black\" : \" yellow\")}; */\r\n  border-bottom: ${(props) => (props.active ? \"1mm ridge #554475\" : null)};\r\n`;\r\n\r\nconst Filter = styled.p`\r\n  text-align: center;\r\n  cursor: pointer;\r\n  width: auto;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    -webkit-transform: scale(1.05);\r\n    -moz-transform: scale(1.05);\r\n    -ms-transform: scale(1.05);\r\n    -o-transform: scale(1.05);\r\n\r\n    color: #737373;\r\n  }\r\n  @media screen and (max-width: 1400px) {\r\n    /* margin-top: 1050px; */\r\n  }\r\n  @media screen and (max-width: 750px) {\r\n    /* margin-top: 1050px; */\r\n  } ;\r\n`;\r\nexport default MyFilter;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Image, Text, Button } from \"../../elements/Index\";\r\nimport MyFilter from \"./filter/MyFilter\";\r\n\r\nconst MypageFilter = (props) => {\r\n  // console.log(props);\r\n  const [arr, setArr] = React.useState([\r\n    {\r\n      id: \"소개\",\r\n      active: true,\r\n    },\r\n    {\r\n      id: \"진행중\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"관심\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"완료\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: \"모집\",\r\n      active: false,\r\n    },\r\n  ]);\r\n  const filters = (item) => {\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id === item.id) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n    setArr((state) => {\r\n      return state.map((stateItem) => {\r\n        if (stateItem.id !== item.id && stateItem.active === true) {\r\n          return { ...stateItem, active: !stateItem.active };\r\n        }\r\n        return stateItem;\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {arr && (\r\n        <Grid display=\"flex\" width=\"70%\">\r\n          {arr.map((item) => {\r\n            return (\r\n              <MyFilter\r\n                onClick={() => {\r\n                  if (item.id !== props.filter) {\r\n                    filters(item);\r\n                  }\r\n                }}\r\n                key={item.id}\r\n                {...item}\r\n                setStatus={props.onClicks}\r\n              ></MyFilter>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MypageFilter;\r\n","/* eslint-disable */\n\n// 나의 마이페이지에서 뜨는 버튼들과 다른사람 마이페이지에서 뜨는 버튼들\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\nimport { postActions } from \"../redux/modules/post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { apis } from \"../lib/axios\";\nimport MypagePostList from \"./mypagePost/MypagePostList\";\nimport MarkdownRead from \"./MarkdownRead\";\nimport { history } from \"../redux/configureStore\";\nimport Spinner from \"../shared/Spinner\";\nimport Banners from \"./myPage/Banners\";\nimport MypageCard from \"./myPage/MypageCard\";\nimport TypeResultTest from \"./myPage/TypeResultTest\";\nimport MypageFilter from \"./myPage/MypageFilter\";\n\n// MyPageInfo의 함수형 컴포넌트를 만든다.\nconst MyPageInfo = (props) => {\n  const dispatch = useDispatch();\n\n  const userId = props.match.params.id;\n  const myUserId = useSelector((state) => state.user.userId);\n\n  const [filter, setFilter] = React.useState(\"소개\");\n  const [mydata, setMydata] = React.useState();\n  const [editMyProfile, setEditMyProfile] = React.useState(false); // 내려줘야함\n  const [techStack, setTeckstack] = React.useState([]); //\n  const [nickName, setNickName] = React.useState(); //\n  const [email, setEmail] = React.useState(); //\n  const myType = mydata?.user.userPropensityType;\n  const [modal, setModal] = React.useState(false);\n  const [testmodal, setTestModal] = React.useState(false);\n\n  const pageCheck = useSelector((state) => state.post.whatPage.now);\n\n  //click\n  const introduction = mydata?.user.introduction ? true : false;\n\n  const recruitmentProject = mydata?.recruitment;\n  const inProgressProject = mydata?.inProgress;\n  const bookMarkProject = mydata?.bookmark;\n  const endProject = mydata?.end;\n\n  const [loading, setLoading] = React.useState(true);\n\n  const SetFilter = (data) => {\n    setFilter(data);\n  };\n\n  React.useLayoutEffect(() => {\n    // dispatch(myPageActions.getMypageAPI(userId));\n    // console.log(editMyProfile);\n    // setEmail(null);\n    // setNickName(null);\n    // console.log(pageCheck);\n\n    dispatch(postActions.isMainPage(false));\n    dispatch(postActions.whatPage(`myPage${userId}`));\n    const fetchData = async () => {\n      try {\n        const result = await apis.getMypage(userId);\n        console.log(\"마이페이지 몇번?\", result);\n        // setMydata(result.data.data);\n        setNickName(result.data.data.user.nickname);\n        setEmail(result.data.data.user.email);\n        setTeckstack(result.data.data.user.techStackList);\n        setLoading(false);\n        // console.log(result);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n    console.log(mydata);\n  }, [editMyProfile, testmodal]);\n\n  React.useLayoutEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await apis.getMypage(userId);\n        console.log(result);\n        setMydata(result.data.data);\n        dispatch(pageCheckAction.getPageCheck(`/mypage/${userId}`));\n\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n    console.log(mydata);\n  }, [filter]);\n\n  const EmailConfirm = () => {\n    setModal(true);\n  };\n\n  const EditTest = () => {\n    setTestModal(true);\n  };\n\n  const TestClose = () => {\n    setTestModal(false);\n  };\n\n  const EditProfile = () => {\n    setEditMyProfile(true);\n  };\n\n  const editProfileCancle = () => {\n    setEditMyProfile(false);\n  };\n\n  return (\n    <Grid margin=\"0 0 250px 0\">\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          {mydata && myType && (\n            <Grid className=\"전체페이지\" maxWidth=\"1900px\" margin=\"auto\">\n              <Grid height=\"30%\" position=\"relative\">\n                <Banner>\n                  <Banners\n                    type={myType}\n                    myPage={mydata?.isMyMypage}\n                    // setModal={setModal}\n                    // modal={modal}\n                    // onClick={() => {\n                    //   EmailConfirm();\n                    // }}\n                  ></Banners>\n                  <Grid position=\"absolute\" top=\"120px\" height=\"75%\">\n                    <TypeResultTest\n                      myType={myType}\n                      userId={userId}\n                      myUserId={myUserId}\n                      mydata={mydata}\n                      testmodal={testmodal}\n                      EditTest={EditTest}\n                      TestClose={TestClose}\n                      setModal={setModal}\n                      modal={modal}\n                      onClick={() => {\n                        EmailConfirm();\n                      }}\n                    />\n                  </Grid>\n                </Banner>\n              </Grid>\n              <Grid width=\"340px\" height=\"10px\" position=\"relative\">\n                <MypageCard\n                  setEditMyProfile={setEditMyProfile}\n                  editMyProfile={editMyProfile}\n                  mydata={mydata}\n                  myType={myType}\n                  myUserId={myUserId}\n                  userId={userId}\n                  nickName={nickName}\n                  email={email}\n                  techStack={techStack}\n                  onClick={EditProfile}\n                  onClick2={editProfileCancle}\n                />\n              </Grid>\n              <Grid margin=\"100px 0 0 0 \">\n                <FilterWrap>\n                  <MypageFilter filter={filter} onClicks={SetFilter} />\n                </FilterWrap>\n\n                {filter === \"모집\" && (\n                  <MypagePostList {...recruitmentProject}></MypagePostList>\n                )}\n\n                <Grid margin=\"0 0 0 25%\" width=\"49%\">\n                  {filter === \"모집\" && recruitmentProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </Grid>\n\n                {filter === \"진행중\" && (\n                  <MypagePostList {...inProgressProject}></MypagePostList>\n                )}\n                <Grid margin=\"0 0 0 25%\" width=\"49%\">\n                  {filter === \"진행중\" && inProgressProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </Grid>\n                {filter === \"관심\" && (\n                  <MypagePostList {...bookMarkProject}></MypagePostList>\n                )}\n                <Grid margin=\"0 0 0 25%\" width=\"49%\">\n                  {filter === \"관심\" && bookMarkProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </Grid>\n                {filter === \"완료\" && (\n                  <MypagePostList {...endProject}></MypagePostList>\n                )}\n                <Grid margin=\"0 0 0 25%\" width=\"49%\">\n                  {filter === \"완료\" && endProject.length === 0 && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        프로젝트가 아직 없네요.\n                      </NoIntroductionText>\n                    </>\n                  )}\n                </Grid>\n                {filter === \"소개\" &&\n                  mydata?.isMyMypage === true &&\n                  introduction === true && (\n                    <button\n                      style={{\n                        float: \"right\",\n                        margin: \"55px 18% 0 0\",\n                        border: \"none\",\n                        borderRadius: \"15px\",\n                        cursor: \"pointer\",\n                        backgroundColor: \" transparent \",\n                      }}\n                      onClick={() => {\n                        history.push({\n                          pathname: \"/addmarkdown\",\n                          state: { userId: userId },\n                        });\n                      }}\n                    >\n                      <img\n                        src=\"/img/소개글.png\"\n                        style={{ backgroundColor: \"rgba(0, 0, 0, 0)\" }}\n                      />\n                    </button>\n                  )}\n                <Grid margin=\"0 0 0 34%\" width=\"49%\">\n                  {filter === \"소개\" && introduction === true && (\n                    <Grid margin=\"50px 0 0 0\" border=\"1px solid #707070 \">\n                      <MarkdownRead\n                        introduction={mydata?.user.introduction}\n                      ></MarkdownRead>\n                    </Grid>\n                  )}\n                </Grid>\n                <Grid margin=\"0 0 0 25%\" width=\"49%\">\n                  {filter === \"소개\" && introduction === false && (\n                    <>\n                      <NoIntroduction src=\"/img/소개글너구리.png\"></NoIntroduction>\n                      <NoIntroductionText>\n                        작성된 소개가 없네요.\n                      </NoIntroductionText>\n                      {mydata?.isMyMypage === true && (\n                        <>\n                          <IntroduceBtn>\n                            <Button\n                              _onClick={() => {\n                                history.push({\n                                  pathname: \"/addmarkdown\",\n                                  state: { userId: userId },\n                                });\n                              }}\n                            >\n                              {\" \"}\n                              소개글 작성하기\n                            </Button>\n                          </IntroduceBtn>\n                          <NoticeText>\n                            소개 작성은 PC환경에서 작성 가능합니다.\n                          </NoticeText>\n                        </>\n                      )}\n                    </>\n                  )}\n                </Grid>\n              </Grid>\n              {/* 소개글 있거나 없거나 */}\n            </Grid>\n          )}\n          {/* //  mydata와 myType가 있을때 */}\n        </>\n        // 스피너를 감싸는 친구\n      )}\n      {/* 스피너를 감싸는 괄호 */}\n    </Grid>\n  );\n};\n\nconst Banner = styled.div`\n  width: 100%;\n  max-width: 1920px;\n  margin: -100px auto;\n  display: flex;\n  height: 457px;\n  overflow: hidden;\n`;\n\nconst FilterWrap = styled.div`\n  max-width: 1000px;\n  display: flex;\n  margin-left: 30%;\n  width: 39vw;\n  z-index: 999;\n\n  @media screen and (max-width: 1600px) {\n    margin-left: 34%;\n  }\n  @media screen and (max-width: 1200px) {\n    width: 90vw;\n    justify-content: center;\n    margin: auto;\n  }\n  @media screen and (max-width: 750px) {\n    width: 90vw;\n    justify-content: center;\n    margin: auto;\n  } ;\n`;\nconst NoIntroduction = styled.img`\n  width: 50%;\n  height: 50%;\n  object-fit: cover;\n  position: relative;\n  margin-left: 20%;\n  display: flex;\n  justify-content: center;\n`;\nconst NoIntroductionText = styled.p`\n  color: #737373;\n  font-size: 25px;\n  width: auto;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n`;\n\nconst IntroduceBtn = styled.div`\n  margin: 0px 0 0 40%;\n  width: 150px;\n  @media screen and (max-width: 1600px) {\n    margin: 0px 0 0 38%;\n  }\n  @media screen and (max-width: 1300px) {\n    margin: 0px 0 0 38%;\n  }\n  @media screen and (max-width: 490px) {\n    display: none;\n  } ;\n`;\n\nconst NoticeText = styled.div`\n  color: #737373;\n  font-size: 12px;\n\n  @media screen and (min-width: 490px) {\n    color: #737373;\n    font-size: 12px;\n  }\n  @media screen and (min-width: 491px) {\n    display: none;\n  } ;\n`;\n\nexport default MyPageInfo;\n","export default __webpack_public_path__ + \"static/media/PostAdd.2b16c1a9.jpg\";","// LeftBanner.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Img from \"../../images/PostAdd.jpg\";\n\n// LeftBanner의 함수형 컴포넌트를 만든다.\nconst LeftBanner = (props) => {\n  return (\n    <React.Fragment>\n      <SideBarImg src={Img} />\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SideBarImg = styled.img`\n  max-width: 100%;\n  height: 1242px;\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default LeftBanner;\n","// TitleWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Input, Text } from \"../../../elements/Index\";\n\n// TitleWrite의 함수형 컴포넌트를 만든다.\nconst TitleWrite = (props) => {\n  return (\n    <React.Fragment>\n      <Grid>\n        <TitleMedia>\n          <Text size=\"18px\">제목</Text>\n          <Input\n            width=\"100%\"\n            height=\"40px\"\n            padding=\"10px\"\n            margin=\"4px auto\"\n            border=\"1px solid #C4C4C4\"\n            borderRadius=\"10px\"\n            placeholder=\"제목을 입력해주세요.\"\n            maxLength=\"35\"\n            inputFocusOutline=\"none\"\n            fontSize=\"16px\"\n            _onChange={(e) => {\n              props.setTitle(e.target.value);\n            }}\n          ></Input>\n        </TitleMedia>\n        {/* <TitleMedia>\n          <Text size=\"18px\">카카오톡 URL</Text>\n          <Input\n            width=\"100%\"\n            height=\"40px\"\n            padding=\"10px\"\n            margin=\"4px auto\"\n            border=\"1px solid #C4C4C4\"\n            borderRadius=\"10px\"\n            placeholder=\"오픈채팅방 주소를 입력해주세요.\"\n            maxLength=\"35\"\n            inputFocusOutline=\"none\"\n            fontSize=\"16px\"\n            _onChange={(e) => {\n              props.setTitle(e.target.value);\n            }}\n          ></Input>\n        </TitleMedia> */}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst TitleMedia = styled.p`\n  @media screen and (max-width: 360px) {\n    width: 350px;\n    margin: auto;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TitleWrite;\n","// StackWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// StackWrite 함수형 컴포넌트를 만든다.\nconst StackWrite = (props) => {\n  const stackSelect = [\n    { value: \"React\", label: \"React\" },\n    { value: \"Java\", label: \"Java\" },\n    { value: \"JavaScript\", label: \"JavaScript\" },\n    { value: \"Python\", label: \"Python\" },\n    { value: \"Nodejs\", label: \"Nodejs\" },\n    { value: \"Flask\", label: \"Flask\" },\n    { value: \"C++\", label: \"C++\" },\n    { value: \"Django\", label: \"Django\" },\n    { value: \"php\", label: \"php\" },\n    { value: \"Vue\", label: \"Vue\" },\n    { value: \"Spring\", label: \"Spring\" },\n    { value: \"Swift\", label: \"Swift\" },\n    { value: \"Kotlin\", label: \"Kotlin\" },\n    { value: \"Typescript\", label: \"Typescript\" },\n  ];\n\n  const handleChange = useCallback(\n    (inputValue, { action, removedValue }) => {\n      if (props.techstack.length < 4) {\n        props.setTectstack(inputValue);\n      } else {\n        if (removedValue !== undefined) {\n          let temp = props.techstack.filter(\n            (item) => item[\"value\"] !== removedValue[\"value\"]\n          );\n          props.setTectstack(temp);\n        } else {\n          window.alert(\"최대 4가지만 선택 가능합니다.\");\n        }\n      }\n    },\n    [stackSelect]\n  );\n\n  const formatTech = () => {\n    let tamarray = [];\n    let index;\n    for (index = 0; index < props.techstack.length; index++) {\n      tamarray.push(props.techstack[index][\"label\"]);\n    }\n    props.setTechStackList(tamarray);\n  };\n\n  useEffect(() => {\n    formatTech();\n  }, [props.techstack]);\n\n  return (\n    <React.Fragment>\n      <Grid margin=\"10px auto\">\n        <StackMedia>\n          <Text size=\"18px\" bold>\n            기술스택 선택\n            <SubDescription> (최대 4개)</SubDescription>\n          </Text>\n          <Select\n            isMulti\n            value={props.techstack}\n            components={props.animatedComponents}\n            styles={props.styles}\n            options={stackSelect}\n            onChange={handleChange}\n            placeholder={<div>기술 스택을 선택해주세요.</div>}\n          />\n        </StackMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SubDescription = styled.span`\n  color: rgb(186, 187, 192);\n  font-size: 12px;\n`;\n\nconst StackMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    width: 350px;\n    margin: auto;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StackWrite;\n","// DateWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport DatePicker from \"react-datepicker\";\nimport { ko } from \"date-fns/esm/locale\";\n\n// DateWrite의 함수형 컴포넌트를 만든다.\nconst DateWrite = (props) => {\n  const startDate = (date) => {\n    props.setStartdate(date);\n    // if (date <= props.endDate) {\n    //   props.setStartdate(date);\n    // } else {\n    //   window.alert(\"시작일을 잘못 설정했습니다.\");\n    // }\n  };\n\n  const endDate = (date) => {\n    if (date > props.startDate) {\n      props.setEnddate(date);\n    } else {\n      window.alert(\"종료일을 잘못 설정했습니다.\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Text size=\"18px\" bold>\n        기간설정\n      </Text>\n      <Grid display=\"flex\" textAlign=\"center\" margin=\"20px auto\">\n        {/* 시작 일*/}\n        <Grid>\n          <Text>프로젝트 시작일</Text>\n          <SDatePicker\n            dateFormat=\"yyyy - MM - dd\"\n            selected={props.startDate}\n            onChange={startDate}\n            locale={ko}\n            minDate={new Date()}\n          />\n        </Grid>\n        {/* 종료 일*/}\n        <Grid>\n          <Text>프로젝트 종료일</Text>\n          <SDatePicker\n            dateFormat=\"yyyy - MM - dd\"\n            selected={props.endDate}\n            onChange={endDate}\n            locale={ko}\n            minDate={new Date()}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SDatePicker = styled(DatePicker)`\n  box-sizing: border-box;\n  width: 96%;\n  height: 40px;\n  border-radius: 10px;\n  border: 1px solid #c4c4c4;\n  color: black;\n  font-size: 16px;\n  text-align: center;\n  margin-top: 0.6rem;\n  margin-left: 10px;\n  outline: none;\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default DateWrite;\n","// TotalMenber.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// TotalMember의 함수형 컴포넌트를 만든다.\nconst TotalMember = (props) => {\n  const projectMembers = [\n    { value: 2, label: 2 },\n    { value: 3, label: 3 },\n    { value: 4, label: 4 },\n    { value: 5, label: 5 },\n    { value: 6, label: 6 },\n  ];\n\n  return (\n    <React.Fragment>\n      <Grid margin=\"20px auto\">\n        <TotalMemberMedia>\n          <Text size=\"18px\" bold>\n            프로젝트 총 인원\n          </Text>\n          <Select\n            options={projectMembers}\n            styles={props.styles}\n            onChange={(e) => {\n              let b;\n              b = e[\"label\"];\n              props.setTotalmember(b);\n            }}\n            placeholder={<div>총 인원을 선택해주세요.</div>}\n          ></Select>\n        </TotalMemberMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst TotalMemberMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    width: 350px;\n    margin: auto;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TotalMember;\n","// ContentWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// ContentWrite의 함수형 컴포넌트를 만든다.\nconst ContentWrite = (props) => {\n  return (\n    <React.Fragment>\n      <Grid margin=\"20px auto\">\n        <ContentMedia>\n          <Text size=\"18px\" bold>\n            프로젝트 내용적기\n          </Text>\n\n          <TextArea\n            placeholder=\"프로젝트 내용을 입력해주세요.\"\n            onChange={(e) => {\n              props.setContents(e.target.value);\n            }}\n          ></TextArea>\n        </ContentMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst TextArea = styled.textarea`\n  width: 98%;\n  height: 500px;\n  padding: 10px;\n  margin: 4px auto;\n  border: 1px solid #c4c4c4;\n  border-radius: 10px;\n  font-size: 16px;\n  outline: none;\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    width: 335px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ContentWrite;\n","// GenerateButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../../../elements/Index\";\n\n// GenerateButton의 함수형 컴포넌트를 만든다.\nconst GenerateButton = (props) => {\n  console.log();\n  return (\n    <React.Fragment>\n      <Grid>\n        <Btn\n          onClick={() => {\n            props.submitHandler();\n          }}\n        >\n          프로젝트 생성하기\n        </Btn>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 140px;\n  height: 35px;\n  border: 1px solid #554475;\n  border-radius: 50px;\n  color: #554475;\n  margin: 10px auto 80px auto;\n  cursor: pointer;\n  background-color: white;\n  &:hover {\n    color: white;\n    background-color: #554475;\n    transform: translate();\n    transition: 0.3s ease-out;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default GenerateButton;\n","// RightWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { postAddActions } from \"../../redux/modules/postadd\";\nimport { postActions } from \"../../redux/modules/post\";\nimport makeAnimated from \"react-select/animated\";\nimport TitleWrite from \"./rightContents/TitleWrite\";\nimport StackWrite from \"./rightContents/StackWrite\";\nimport DateWrite from \"./rightContents/DateWrite\";\nimport TotalMember from \"./rightContents/TotalMember\";\nimport ContentWrite from \"./rightContents/ContentWrite\";\nimport GenerateButton from \"./rightContents/GenerateButton\";\n\n// RightWrite의 함수형 컴포넌트를 만든다.\nconst RightWrite = (props) => {\n  React.useEffect(() => {\n    dispatch(postActions.isMainPage(false));\n    dispatch(postActions.whatPage(\"addPostPage\"));\n  }, []);\n\n  const dispatch = useDispatch();\n  const animatedComponents = makeAnimated();\n  const [title, setTitle] = React.useState(\"\");\n  const [techstack, setTectstack] = React.useState([]);\n  const [techStackList, setTechStackList] = React.useState();\n  const date = new Date();\n  const [startDate, setStartdate] = React.useState(\n    date.setDate(date.getDate())\n  );\n  const [endDate, setEnddate] = React.useState(\n    date.setDate(date.getDate() + 1)\n  );\n  const [totalMember, setTotalmember] = React.useState();\n  const [projectStatus, setProjectstatus] = React.useState(\"모집중\");\n  const [contents, setContents] = React.useState(\"\");\n\n  // 예외처리\n  const submitHandler = () => {\n    if (\n      title.length > 0 &&\n      techstack.length > 0 &&\n      totalMember > 0 &&\n      contents.length > 0 &&\n      startDate < endDate\n    ) {\n      window.alert(\"프로젝트가 생성되었습니다.\");\n      scopeIndex();\n    } else {\n      window.alert(\"값을 다시 입력해주세요.\");\n    }\n  };\n\n  const scopeIndex = () => {\n    const card = {\n      title: title,\n      techStackList: techStackList,\n      startDate: startDate,\n      endDate: endDate,\n      totalMember: totalMember,\n      projectStatus: projectStatus,\n      contents: contents,\n    };\n    console.log(\"카드들\", card);\n    dispatch(postAddActions.addPostAPI(card));\n  };\n\n  // Select 공통 스타일\n  const styles = {\n    control: (base, state) => ({\n      ...base,\n      boxShadow: state.isFocused ? 0 : 0,\n      borderWidth: 1,\n      borderRadius: 10,\n      marginTop: 4,\n      minHeight: 40,\n      borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      \"&:hover\": {\n        borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      },\n    }),\n  };\n\n  return (\n    <React.Fragment>\n      <Grid margin=\"46px 85px 0px\">\n        <TitleMedia>\n          <Title>게시글 작성하기</Title>\n        </TitleMedia>\n\n        <Grid margin=\"40px auto\">\n          <TitleWrite setTitle={setTitle} />\n          <StackWrite\n            animatedComponents={animatedComponents}\n            styles={styles}\n            setTectstack={setTectstack}\n            techstack={techstack}\n            setTechStackList={setTechStackList}\n          />\n          <DateWrite\n            setStartdate={setStartdate}\n            startDate={startDate}\n            setEnddate={setEnddate}\n            endDate={endDate}\n          />\n          <TotalMember setTotalmember={setTotalmember} styles={styles} />\n\n          <ContentWrite setContents={setContents} />\n\n          <GenerateButton submitHandler={submitHandler} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Title = styled.p`\n  color: black;\n  font-size: 32px;\n  font-weight: 800;\n`;\n\nconst TitleMedia = styled.p`\n  @media screen and (max-width: 1000px) {\n    width: 350px;\n    margin: auto;\n    text-align: center;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default RightWrite;\n","// AddPost.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid } from \"../elements/Index\";\nimport LeftBanner from \"../components/postWrite/LeftBanner\";\nimport RightWrite from \"../components/postWrite/RightWrite\";\n\n// WritePost의 함수형 컴포넌트를 만든다.\nconst WritePost = (props) => {\n  return (\n    <React.Fragment>\n      <Grid\n        display=\"flex\"\n        justifyContent=\"center\"\n        border=\"1px solid #C4C4C4\"\n        maxWidth=\"1920px\"\n        margin=\"auto\"\n      >\n        <LeftBanner />\n        <RightWrite />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default WritePost;\n","// PostWrite.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport AddPost from \"../components/AddPost\";\nimport { postActions } from \"../redux/modules/post\";\nimport { useDispatch } from \"react-redux\";\n\n// PostWrite의 함수형 컴포넌트를 만든다.\nconst PostWrite = (props) => {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(postActions.isMainPage(false));\n  }, []);\n\n  return (\n    <React.Fragment>\n      <AddPost />\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PostWrite;\n","/* eslint-disable */\nimport { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { apis } from \"../../lib/axios\";\nimport Swal from \"sweetalert2\";\n// 수정\nconst EDIT_POST = \"EDIT_POST\";\n// 삭제\nconst DELETE_POST = \"DELETE_POST\";\n// 상태 체크\nconst STATUS_POST = \"STATUS_POST\";\n\n// 포스트 수정 액션생성함수 생성\nconst editPost = createAction(EDIT_POST, (editcard) => ({ editcard }));\n// 포스트 삭제 액션생성함수 생성\nconst deletePost = createAction(DELETE_POST, (postId) => ({ postId }));\n// 포스트 상태체크 액션생성함수 생성\nconst statusPost = createAction(STATUS_POST, (postId) => ({ postId }));\n\n// 초기값\nconst initialState = {\n  list: [],\n};\n\n// 포스트 수정\nexport const editPostAPI = (post_id, editcard) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .editPost(post_id, editcard)\n      .then((res) => {\n        history.goBack();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        window.alert(err.response.data.msg);\n      });\n  };\n};\n\n// 포스트 삭제\nexport const deletePostAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .deletePost(postId)\n      .then((res) => {\n        history.goBack();\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n\n// 포스트 상태체크\nexport const statusPostAPI = (post_id, editstatus) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .statusPost(post_id, editstatus)\n      .then((res) => {\n        // history.goBack();\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n};\n\n//북마크 전송\nconst bookMarkAPI = (postId) => {\n  return function (dispatch, getState, { history }) {\n    apis\n      .bookMarkChecked(postId)\n      .then((res) => {\n        console.log(res);\n        console.log(res.data.data.isBookmarkChecked);\n        if (res.data.msg == \"북마크 추가 성공\") {\n          return Swal.fire(\"관심 프로젝트에 추가되었습니다!\", \"\", \"success\");\n        }\n        if (res.data.msg == \"북마크 삭제 성공\") {\n          return Swal.fire(\"관심 프로젝트 에서 삭제되었습니다!\", \"\", \"success\");\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data.msg);\n        if (err.response.data.msg == \"해당 유저를 찾을 수 없습니다.\") {\n          return Swal.fire(\"해당 유저를 찾을 수 없습니다!\", \"\", \"question\");\n        }\n        if (err.response.data.msg == \"해당 프로젝트를 찾을 수 없습니다.\") {\n          return Swal.fire(\"해당 프로젝트를 찾을 수 없습니다!\", \"\", \"question\");\n        }\n        if (err.response.data.msg == \"자신의 게시물은 북마크할 수 없습니다.\") {\n          return Swal.fire(\n            \"자신의 게시물은 북마크 할 수 없습니다!\",\n            \"\",\n            \"warning\"\n          );\n        }\n        if (err.response.data.msg == \"로그인 사용자만 사용할 수 있습니다.\") {\n          return Swal.fire(\n            \"로그인 사용자만 이용할 수 있습니다!\",\n            \"\",\n            \"warning\"\n          );\n        }\n        if (err.response.data.msg == \"입력 값이 잘못되었습니다.\") {\n          return Swal.fire(\n            \"로그인 사용자만 이용할 수 있습니다!\",\n            \"\",\n            \"warning\"\n          );\n        }\n      });\n  };\n};\n\n// 리듀서\nexport default handleActions(\n  {\n    [EDIT_POST]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"포스트 수정\", action.payload);\n      }),\n    [DELETE_POST]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"포스트 삭제\", action.payload);\n      }),\n    [STATUS_POST]: (state, action) =>\n      produce(state, (draft) => {\n        console.log(\"포스트 상태 체크\", action.payload);\n      }),\n  },\n  initialState\n);\n\nconst postDetailActions = {\n  editPostAPI,\n  deletePostAPI,\n  statusPostAPI,\n  bookMarkAPI,\n};\n\nexport { postDetailActions };\n","export default __webpack_public_path__ + \"static/media/PostDetail.71524391.png\";","// LeftBanner.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Img from \"../../images/PostDetail.png\";\n\n// LeftBanner의 함수형 컴포넌트를 만든다.\nconst LeftBanner = (props) => {\n  return (\n    <React.Fragment>\n      <SideBarImg src={Img} />\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SideBarImg = styled.img`\n  max-width: 100%;\n  height: 1120px;\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default LeftBanner;\n","// TitleEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text, Input } from \"../../../elements/Index\";\n\n// TitleEdit의 함수형 컴포넌트를 만든다.\nconst TitleEdit = (props) => {\n  return (\n    <React.Fragment>\n      <TitleMedia>\n        <Grid>\n          <Text size=\"18px\" bold>\n            제목\n          </Text>\n          <Input\n            width=\"100%\"\n            maxLength=\"35\"\n            height=\"40px\"\n            padding=\"10px\"\n            margin=\"4px auto\"\n            border=\"1px solid #C4C4C4\"\n            borderRadius=\"10px\"\n            placeholder=\"제목을 입력해주세요.\"\n            inputFocusOutline=\"none\"\n            fontSize=\"16px\"\n            type=\"text\"\n            editValue={props.title}\n            _onChange={(e) => {\n              props.setTitle(e.target.value);\n            }}\n          />\n        </Grid>\n      </TitleMedia>\n    </React.Fragment>\n  );\n};\n\nconst TitleMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 80px;\n  }\n`;\n\n// export\nexport default TitleEdit;\n","// StackEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React, { useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// StackEdit의 함수형 컴포넌트를 만든다.\nconst StackEdit = (props) => {\n  const stackSelect = [\n    { value: \"React\", label: \"React\" },\n    { value: \"Java\", label: \"Java\" },\n    { value: \"JavaScript\", label: \"JavaScript\" },\n    { value: \"Python\", label: \"Python\" },\n    { value: \"Nodejs\", label: \"Nodejs\" },\n    { value: \"Flask\", label: \"Flask\" },\n    { value: \"C++\", label: \"C++\" },\n    { value: \"Django\", label: \"Django\" },\n    { value: \"php\", label: \"php\" },\n    { value: \"Vue\", label: \"Vue\" },\n    { value: \"Spring\", label: \"Spring\" },\n    { value: \"Swift\", label: \"Swift\" },\n    { value: \"Kotlin\", label: \"Kotlin\" },\n    { value: \"Typescript\", label: \"Typescript\" },\n  ];\n\n  const orderByLabel = useCallback(\n    (a, b) => a.label.localeCompare(b.label),\n    []\n  );\n\n  const orderOptions = useCallback(\n    (values) =>\n      values\n        .filter((v) => v.isFixed)\n        .sort(orderByLabel)\n        .concat(values.filter((v) => !v.isFixed).sort(orderByLabel)),\n    [orderByLabel]\n  );\n\n  const [value, setValue] = React.useState(orderOptions(stackSelect));\n  const handleChange = useCallback(\n    (inputValue, { action, removedValue }) => {\n      switch (action) {\n        case \"remove-value\":\n        case \"pop-value\":\n          if (removedValue.isFixed) {\n            setValue(orderOptions([...inputValue, removedValue]));\n\n            return;\n          }\n          break;\n        case \"clear\":\n          setValue(stackSelect.filter((v) => v.isFixed));\n          return;\n        default:\n      }\n\n      setValue(inputValue);\n      props.setTectstack(inputValue);\n    },\n    [stackSelect, orderOptions]\n  );\n\n  const formatTech = () => {\n    let tamarray = [];\n    let index;\n    for (index = 0; index < props.techstack.length; index++) {\n      tamarray.push(props.techstack[index][\"label\"]);\n    }\n    props.setTest(tamarray);\n  };\n\n  useEffect(() => {\n    formatTech();\n  }, [props.techstack]);\n\n  return (\n    <React.Fragment>\n      <StackMedia>\n        <Grid margin=\"20px auto\">\n          <Text size=\"18px\" bold>\n            기술스택 선택\n          </Text>\n          {/* 1차방안 */}\n          <Select\n            isMulti\n            components={props.animatedComponents}\n            isClearable={value.some((v) => !v.isFixed)}\n            styles={props.styles}\n            value={props.techstack}\n            options={stackSelect}\n            onChange={handleChange}\n            placeholder={<div>기술 스택을 선택해주세요.</div>}\n          />\n        </Grid>\n      </StackMedia>\n    </React.Fragment>\n  );\n};\n\nconst StackMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 80px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StackEdit;\n","// totalMemberEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// totalMemberEdit의 함수형 컴포넌트를 만든다.\nconst totalMemberEdit = (props) => {\n  const projectMembers = [\n    { value: 2, label: 2 },\n    { value: 3, label: 3 },\n    { value: 4, label: 4 },\n    { value: 5, label: 5 },\n    { value: 6, label: 6 },\n  ];\n\n  return (\n    <React.Fragment>\n      <TotalMemberMedia>\n        <Grid margin=\"20px auto\">\n          <Text size=\"18px\" bold>\n            프로젝트 총 인원\n          </Text>\n          <Select\n            options={projectMembers}\n            styles={props.styles}\n            value={projectMembers.filter(\n              ({ value }) => value === props.totalMember\n            )}\n            defaultValue={{ value: 6, label: 6 }}\n            onChange={(data) => {\n              props.setTotalmember(data.label);\n            }}\n            placeholder={<div>총인원을 선택해주세요.</div>}\n          ></Select>\n        </Grid>\n      </TotalMemberMedia>\n    </React.Fragment>\n  );\n};\n\nconst TotalMemberMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 80px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default totalMemberEdit;\n","// StatusEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport Select from \"react-select\";\n\n// StatusEdit의 함수형 컴포넌트를 만든다.\nconst StatusEdit = (props) => {\n  const projectStatused = [\n    { value: \"done\", label: \"모집중\" },\n    { value: \"doing\", label: \"진행중\" },\n    { value: \"ready\", label: \"종료\" },\n  ];\n\n  return (\n    <React.Fragment>\n      <StatusMedia>\n        <Grid margin=\"20px auto\">\n          <Text size=\"18px\" bold>\n            프로젝트 상태체크\n          </Text>\n          <Select\n            options={projectStatused}\n            styles={props.styles}\n            value={projectStatused.filter(\n              ({ label }) => label === props.projectStatus\n            )}\n            onChange={(data) => {\n              props.setProjectstatus(data.label);\n            }}\n            placeholder={<div>상태를 설정해주세요.</div>}\n          ></Select>\n        </Grid>\n      </StatusMedia>\n    </React.Fragment>\n  );\n};\n\nconst StatusMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 80px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StatusEdit;\n","// ContentEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// ContentEdit의 함수형 컴포넌트를 만든다.\nconst ContentEdit = (props) => {\n  return (\n    <React.Fragment>\n      <ContentMedia>\n        <Grid margin=\"20px auto\">\n          <Text size=\"18px\" bold>\n            프로젝트 내용적기\n          </Text>\n          <TextArea\n            value={props.contents}\n            onChange={(e) => {\n              props.setContents(e.target.value);\n            }}\n          />\n        </Grid>\n      </ContentMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst TextArea = styled.textarea`\n  width: 97%;\n  height: 300px;\n  padding: 10px;\n  margin: 4px auto;\n  border: 1px solid #c4c4c4;\n  border-radius: 10px;\n  font-size: 16px;\n  outline: none;\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    display: flex;\n    width: 340px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ContentEdit;\n","// DateEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport DatePicker from \"react-datepicker\";\nimport { ko } from \"date-fns/esm/locale\";\n\n// DateEdit의 함수형 컴포넌트를 만든다.\nconst DateEdit = (props) => {\n  const startDate = (date) => {\n    if (date <= props.endDate) {\n      props.setStartdate(date);\n    } else {\n      window.alert(\"시작일을 잘못 설정했습니다.\");\n    }\n  };\n\n  const endDate = (data) => {\n    props.setEnddate(data);\n  };\n  return (\n    <React.Fragment>\n      <DateMedia>\n        <Grid>\n          <Text size=\"18px\" bold>\n            기간설정\n          </Text>\n          <Grid display=\"flex\" textAlign=\"center\" margin=\"20px auto\">\n            {/* 시작 일*/}\n            <Grid>\n              <Text>프로젝트 시작일</Text>\n              <SDatePicker\n                dateFormat=\"yyyy - MM - dd\"\n                selected={new Date(props.startDate)}\n                onChange={startDate}\n                startdate={props.startDate}\n                selectsStart\n                locale={ko}\n                minDate={new Date()}\n                placeholderText=\"프로젝트 시작일 입력\"\n              />\n            </Grid>\n            {/* 종료 일*/}\n            <Grid>\n              <Text>프로젝트 종료일</Text>\n              <SDatePicker\n                dateFormat=\"yyyy - MM - dd\"\n                selected={new Date(props.endDate)}\n                onChange={endDate}\n                startdate={props.startDate}\n                enddate={props.endDate}\n                selectsEnd\n                locale={ko}\n                minDate={new Date()}\n                placeholderText=\"프로젝트 종료일 입력\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </DateMedia>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SDatePicker = styled(DatePicker)`\n  box-sizing: border-box;\n  width: 96%;\n  height: 40px;\n  border-radius: 10px;\n  border: 1px solid #c4c4c4;\n  color: black;\n  font-size: 16px;\n  text-align: center;\n  margin-top: 0.6rem;\n  margin-left: 10px;\n  outline: none;\n`;\n\nconst DateMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    display: flex;\n    width: 350px;\n    height: 10px;\n    margin-bottom: 80px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default DateEdit;\n","//PostEdit.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid } from \"../elements/Index\";\nimport { useDispatch } from \"react-redux\";\nimport { apis } from \"../lib/axios\";\nimport { postDetailActions } from \"../redux/modules/postdetail\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport makeAnimated from \"react-select/animated\";\nimport LeftBanner from \"../components/postEdit/LeftBanner\";\nimport TitleEdit from \"../components/postEdit/rightContentsEdit/TitleEdit\";\nimport StackEdit from \"../components/postEdit/rightContentsEdit/StackEdit\";\nimport TotalMemberEdit from \"../components/postEdit/rightContentsEdit/TotalMemberEdit\";\nimport StatusEdit from \"../components/postEdit/rightContentsEdit/StatusEdit\";\nimport ContentEdit from \"../components/postEdit/rightContentsEdit/ContentEdit\";\nimport DateEdit from \"../components/postEdit/rightContentsEdit/DateEdit\";\n\n// PostEdit의 함수형 컴포넌트를 만든다.\nconst PostEdit = (props) => {\n  const dispatch = useDispatch();\n  const animatedComponents = makeAnimated();\n  const [checkPost, setCheckPost] = React.useState();\n  const [postId, setPostId] = React.useState();\n  const [title, setTitle] = React.useState(\"\");\n  const [summary, setSummary] = React.useState(\"\");\n  const [techstack, setTectstack] = React.useState([]);\n  const [totalMember, setTotalmember] = React.useState();\n  const [recruitmentMember, setRecruitmentMember] = React.useState();\n  const [projectStatus, setProjectstatus] = React.useState(\"\");\n  const [startDate, setStartdate] = React.useState(new Date());\n  const [endDate, setEnddate] = React.useState(new Date());\n  const [contents, setContents] = React.useState(\"\");\n  const [techStackList, setTest] = React.useState();\n  const [loaded, setLoaded] = React.useState(false);\n\n  // 수정\n  let post_id = props.match.params.id;\n  const scope_edit = () => {\n    const editcard = {\n      title: title,\n      contents: contents,\n      techStackList: techStackList,\n      totalMember: totalMember,\n      projectStatus: projectStatus,\n      startDate: startDate,\n      endDate: endDate,\n    };\n    dispatch(postDetailActions.editPostAPI(post_id, editcard));\n  };\n\n  const editHandler = () => {\n    if (techstack.length <= 3) {\n      scope_edit();\n    } else {\n      window.alert(\"기술선택을 4개 이하로 입력해주세요.\");\n    }\n  };\n\n  console.log(\"총인원\", totalMember);\n\n  React.useEffect(() => {\n    const CheckPost = async () => {\n      try {\n        const result = await apis.detailPost(post_id);\n        let setValue = result.data.data.post;\n        setCheckPost(result);\n        setTitle(setValue.title);\n        setSummary(setValue.summary);\n        setContents(setValue.contents);\n        setTectstack(\n          setValue.techStack.map((value) => ({ label: value, value }))\n        );\n        setStartdate(setValue?.startDate);\n        setEnddate(setValue.endDate);\n        setTotalmember(setValue.totalMember);\n        setProjectstatus(setValue.projectStatus);\n        setLoaded(true);\n      } catch (err) {\n        console.log(err.response);\n\n        setLoaded(false);\n      }\n    };\n\n    if (loaded === false) CheckPost();\n  }, []);\n\n  // Select 공통 스타일\n  const styles = {\n    control: (base, state) => ({\n      ...base,\n      boxShadow: state.isFocused ? 0 : 0,\n      borderWidth: 2,\n      borderRadius: 10,\n      marginTop: 4,\n      minHeight: 40,\n      borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      \"&:hover\": {\n        borderColor: state.isFocused ? \"#C4C4C4\" : base.borderColor,\n      },\n    }),\n  };\n\n  return (\n    <React.Fragment>\n      <Grid\n        display=\"flex\"\n        justifyContent=\"center\"\n        maxWidth=\"1920px\"\n        height=\"100%\"\n        margin=\"auto\"\n        border=\"1px solid #C4C4C4\"\n        alignItems=\"center\"\n      >\n        <LeftBanner />\n        <Grid margin=\"46px 106px 0px\" position=\"relative\">\n          <TitleMedia>\n            <Title>게시글 수정하기</Title>\n          </TitleMedia>\n          {/* <ContainerMedia> */}\n          <Grid margin=\"40px auto\">\n            <TitleEdit title={title} setTitle={setTitle} />\n            <StackEdit\n              setTectstack={setTectstack}\n              techstack={techstack}\n              setTest={setTest}\n              animatedComponents={animatedComponents}\n              styles={styles}\n            />\n            <Grid>\n              <DateEdit\n                startDate={startDate}\n                endDate={endDate}\n                setStartdate={setStartdate}\n                setEnddate={setEnddate}\n              />\n            </Grid>\n            <TotalMemberEdit\n              styles={styles}\n              totalMember={totalMember}\n              setTotalmember={setTotalmember}\n            />\n            <StatusEdit\n              styles={styles}\n              projectStatus={projectStatus}\n              setProjectstatus={setProjectstatus}\n            />\n            <Grid>\n              <ContentEdit contents={contents} setContents={setContents} />\n\n              <Btn\n                onClick={() => {\n                  editHandler();\n                }}\n              >\n                포스트수정 완료\n              </Btn>\n            </Grid>\n          </Grid>\n          {/* </ContainerMedia> */}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components를 사용한다.\nconst Title = styled.h1`\n  color: black;\n  font-size: 32px;\n  font-weight: 800;\n`;\n\nconst Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 140px;\n  height: 35px;\n  border: 1px solid #bbb4d9;\n  border-radius: 50px;\n  color: #bbb4d9;\n  background: white;\n  margin: auto;\n  cursor: pointer;\n  &:hover {\n    color: white;\n    background-color: #bbb4d9;\n    border: 1px solid;\n    transition-duration: 1s;\n  }\n`;\n\nconst TitleMedia = styled.p`\n  @media screen and (max-width: 1000px) {\n    width: 350px;\n    margin: auto;\n    text-align: center;\n  }\n`;\n\nconst ContainerMedia = styled.div`\n  @media screen and (max-width: 1000px) {\n    width: 600px;\n    margin: auto;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PostEdit;\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Input, Text, Button, Image } from \"../elements/Index\";\nimport { Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { applyCreators } from \"../redux/modules/applyProject\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { apis } from \"../lib/axios\";\nimport { useHistory } from \"react-router\";\nconst ApplyStatusModal = (props) => {\n  const dispatch = useDispatch();\n  const applyUsers = useSelector((state) => state.apply.applyUsers);\n  const [applyedUsers, setApplyUsers] = React.useState();\n  const [acceptButton, setAcceptButton] = React.useState();\n  const { applyStatusModal, setApplyStatusModal, postId } = props;\n  const history = useHistory();\n\n  const modalClose = () => {\n    setApplyStatusModal(false);\n  };\n\n  React.useEffect(() => {\n    // console.log(applyedUsers);\n    const fetchData = async () => {\n      try {\n        const result = await apis.applyUser(postId);\n        console.log(result);\n        setApplyUsers(result.data.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n\n    // dispatch(applyCreators.applyUserAPI(postId));\n  }, [applyStatusModal, acceptButton]);\n\n  const acceptOffer = (acceptUser) => {\n    const acceptInfo = {\n      userId: acceptUser,\n      accept: true,\n    };\n    // console.log(acceptInfo);\n\n    const fetchData = async () => {\n      try {\n        const result = await apis.aceeptOffer(postId, acceptInfo);\n        // console.log(result);\n        setAcceptButton(result);\n        // window.alert(\"신청을 수락하였습니다.\");\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n    // dispatch(applyCreators.acceptOfferAPI(postId, acceptInfo));\n  };\n\n  const cancelOffer = (cancelUser) => {\n    const acceptInfo = {\n      userId: cancelUser,\n      accept: false,\n    };\n    // console.log(acceptInfo);\n    dispatch(applyCreators.acceptOfferAPI(postId, acceptInfo));\n    // window.alert(\"신청을 취소하였습니다.\");\n  };\n\n  return (\n    <>\n      {applyedUsers && (\n        <Dialog\n          maxWidth={\"sm\"}\n          scroll=\"paper\"\n          open={applyStatusModal}\n          onClose={modalClose}\n        >\n          <ModalWrap>\n            <Grid\n              height=\"12%\"\n              bg=\"#17334A\"\n              position=\"relative\"\n              textAlign=\"center\"\n              padding=\"10px 0 0 0\"\n            >\n              <Grid\n                position=\"absolute\"\n                top=\"0px\"\n                right=\"10px\"\n                width=\"20px\"\n                padding=\"10px\"\n              >\n                <CloseIcon\n                  sx={{ color: \"#fff\", fontSize: 35 }}\n                  onClick={modalClose}\n                  cursor=\"pointer\"\n                />\n              </Grid>\n              <Grid\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                height=\"40px\"\n              >\n                <Text size=\"40px\" bold color=\"#fff\">\n                  신청현황\n                </Text>\n              </Grid>\n            </Grid>\n            {applyedUsers == \"\" && (\n              <Grid height=\"0%\" justifyContent=\"center\">\n                <Grid\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  width=\"70%\"\n                  textAlign=\"center\"\n                  margin=\"auto\"\n                >\n                  <Grid height=\"50%\" margin=\"40px auto\">\n                    <img width=\"100%\" src=\"/img/step9.png\" />\n                  </Grid>\n                  <Grid margin=\"250px 0\">지원자가 아직 없습니다!</Grid>\n                </Grid>\n              </Grid>\n            )}\n\n            <Grid display=\"flex\" height=\"85%\" justifyContent=\"center\">\n              <Grid width=\"90%\" margin=\"10px 0\">\n                {applyedUsers.map((user, idx) => (\n                  <Grid\n                    margin=\"10px auto\"\n                    height=\"100px\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-around\"\n                    padding=\"10px\"\n                    width=\"90%\"\n                    key={user.userId}\n                    {...user}\n                  >\n                    <Grid\n                      margin=\"auto\"\n                      width=\"30%\"\n                      _onClick={() => {\n                        history.push(`/mypage/${user.userId}`);\n                      }}\n                    >\n                      {applyedUsers[idx].userPropensityType === \"LVG\" && (\n                        <UserImg src=\"/img/호랑이.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"LVP\" && (\n                        <UserImg src=\"/img/늑대.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"LHG\" && (\n                        <UserImg src=\"/img/여우.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"LHP\" && (\n                        <UserImg src=\"/img/판다.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FVG\" && (\n                        <UserImg src=\"/img/토끼.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FVP\" && (\n                        <UserImg src=\"/img/허스키.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FHG\" && (\n                        <UserImg src=\"/img/고양이.png\"></UserImg>\n                      )}\n                      {applyedUsers[idx].userPropensityType === \"FHP\" && (\n                        <UserImg src=\"/img/물개.png\"></UserImg>\n                      )}\n                    </Grid>\n                    <Grid height=\"100%\" width=\"80%\">\n                      <Grid display=\"flex\" height=\"60%\" margin=\"auto\">\n                        <Grid\n                          margin=\"auto\"\n                          height=\"50px\"\n                          display=\"flex\"\n                          justifyContent=\"space-between\"\n                        >\n                          <Grid height=\"100%\" textAlign=\"center\">\n                            <Grid bg=\"#eee\" height=\"50%\">\n                              닉네임\n                            </Grid>\n                            <Grid bg=\"#aaa\" height=\"50%\">\n                              타입\n                            </Grid>\n                          </Grid>\n                          <Grid margin=\"auto\" height=\"100%\" textAlign=\"center\">\n                            <Grid height=\"50%\">\n                              {applyedUsers[idx].nickname}\n                            </Grid>\n                            <Grid height=\"50%\">\n                              {applyedUsers[idx].userPropensityType}\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Grid margin=\"auto\" height=\"50px\" width=\"80%\">\n                          <Button\n                            common\n                            isValue={applyedUsers[idx].userId}\n                            _onClick={(e) => {\n                              console.log(e);\n                              acceptOffer(e.target.value);\n                            }}\n                          >\n                            수락\n                          </Button>\n                        </Grid>\n                        <Grid\n                          margin=\"auto auto auto 3px\"\n                          height=\"50px\"\n                          width=\"80%\"\n                        >\n                          <Button\n                            common\n                            isValue={applyedUsers[idx].userId}\n                            _onClick={(e) => {\n                              cancelOffer(e.target.value);\n                            }}\n                          >\n                            취소\n                          </Button>\n                        </Grid>\n                      </Grid>\n                      <CommentBubble>{applyedUsers[idx].comment}</CommentBubble>\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n          </ModalWrap>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nconst ModalWrap = styled.div`\n  width: 550px;\n  height: 500px;\n`;\nconst CommentBubble = styled.div`\n  position: relative;\n  background: #f1f9ff;\n  height: 40%;\n  /* border: #b29cf4 solid 1px; */\n  border-radius: 10px;\n  padding: 0 12px;\n  ::after {\n    content: \"\";\n    position: absolute;\n    border-style: solid;\n    border-width: 10px 15px 0;\n    border-color: #f1f9ff transparent;\n    display: block;\n    width: 0;\n    z-index: 1;\n    top: 10px;\n    left: -15px;\n  }\n`;\n\nconst UserImg = styled.img`\n  object-fit: cover;\n  width: 100px;\n  border-radius: 12px;\n  background-color: #ececec;\n  cursor: pointer;\n`;\n\nexport default ApplyStatusModal;\n","// LeftBanner.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport bannerImg from \"../../images/PostDetail.png\";\n\n// LeftBanner의 함수형 컴포넌트를 만든다.\nconst LeftBanner = props => {\n  return (\n    <React.Fragment>\n      <SideBarImg src={bannerImg} />\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst SideBarImg = styled.img`\n  max-width: 100%;\n  height: 1000px;\n  @media screen and (max-width: 1600px) {\n    max-width: 80%;\n  }\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default LeftBanner;\n","// TitleDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// TitleDetail의 함수형 컴포넌트를 만든다.\nconst TitleDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid margin=\"60px auto auto\">\n        <TitleMedia>\n          <Text size=\"40px\" bold>\n            {props.passedData?.title}\n            <Line />\n          </Text>\n        </TitleMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Line = styled.hr`\n  width: 100%;\n`;\n\nconst TitleMedia = styled.p`\n  @media screen and (max-width: 360px) {\n    font-size: 20px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TitleDetail;\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport { Grid, Input, Text, Button, Image } from \"../../elements/Index\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { applyCreators } from \"../../redux/modules/applyProject\";\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { apis } from \"../../lib/axios\";\r\nconst ExileUserModal = props => {\r\n  const dispatch = useDispatch();\r\n  const applyUsers = useSelector(state => state.apply.applyUsers);\r\n  const [applyedUsers, setApplyUsers] = React.useState();\r\n  const [acceptButton, setAcceptButton] = React.useState();\r\n  const { applyStatusModal, setApplyStatusModal, postId, postUserId } = props;\r\n\r\n  const modalClose = () => {\r\n    setApplyStatusModal(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(applyedUsers);\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await apis.serachTeamUser(postId);\r\n        console.log(result);\r\n        setApplyUsers(result.data.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    // dispatch(applyCreators.applyUserAPI(postId));\r\n  }, [applyStatusModal, acceptButton]);\r\n\r\n  const exile = userId => {\r\n    console.log(userId);\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await apis.exileUser(postId, userId);\r\n        console.log(result);\r\n        setAcceptButton(result);\r\n      } catch (err) {\r\n        console.log(err.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {applyedUsers && (\r\n        <Dialog\r\n          maxWidth={\"sm\"}\r\n          scroll=\"paper\"\r\n          open={applyStatusModal}\r\n          onClose={modalClose}\r\n        >\r\n          <ModalWrap>\r\n            <Grid\r\n              height=\"10%\"\r\n              bg=\"#17334A\"\r\n              position=\"relative\"\r\n              textAlign=\"center\"\r\n              padding=\"10px 0 10px 0\"\r\n            >\r\n              <Grid\r\n                position=\"absolute\"\r\n                top=\"0px\"\r\n                right=\"10px\"\r\n                width=\"20px\"\r\n                padding=\"10px\"\r\n              >\r\n                <CloseIcon\r\n                  sx={{ color: \"#fff\", fontSize: 35 }}\r\n                  fontSize=\"large\"\r\n                  cursor=\"pointer\"\r\n                  onClick={modalClose}\r\n                />\r\n              </Grid>\r\n              <Text size=\"40px\" bold color=\"#fff\">\r\n                팀원강퇴\r\n              </Text>\r\n            </Grid>\r\n            {applyedUsers == \"\" && (\r\n              <Grid height=\"0%\" justifyContent=\"center\">\r\n                <Grid\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  width=\"70%\"\r\n                  textAlign=\"center\"\r\n                  margin=\"auto\"\r\n                >\r\n                  <Grid height=\"50%\">\r\n                    <img width=\"100%\" src=\"/img/step9.png\" />\r\n                  </Grid>\r\n                  <Grid margin=\"250px 0\">지원자가 아직 없습니다!</Grid>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid display=\"flex\" height=\"85%\" justifyContent=\"center\">\r\n              <Grid width=\"90%\" margin=\"10px 0\">\r\n                {applyedUsers.map((user, idx) => (\r\n                  <Grid\r\n                    margin=\"10px auto\"\r\n                    height=\"100px\"\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"space-around\"\r\n                    padding=\"10px\"\r\n                    width=\"90%\"\r\n                    key={user.userId}\r\n                    {...user}\r\n                  >\r\n                    <Grid margin=\"auto\" width=\"30%\">\r\n                      {applyedUsers[idx].userPropensityType === \"LVG\" && (\r\n                        <UserImg src=\"/img/호랑이.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"LVP\" && (\r\n                        <UserImg src=\"/img/늑대.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"LHG\" && (\r\n                        <UserImg src=\"/img/여우.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"LHP\" && (\r\n                        <UserImg src=\"/img/판다.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FVG\" && (\r\n                        <UserImg src=\"/img/토끼.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FVP\" && (\r\n                        <UserImg src=\"/img/허스키.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FHG\" && (\r\n                        <UserImg src=\"/img/고양이.png\"></UserImg>\r\n                      )}\r\n                      {applyedUsers[idx].userPropensityType === \"FHP\" && (\r\n                        <UserImg src=\"/img/물개.png\"></UserImg>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid height=\"100%\" width=\"80%\">\r\n                      <Grid display=\"flex\" height=\"60%\" margin=\"auto\">\r\n                        <Grid\r\n                          margin=\"auto\"\r\n                          height=\"50px\"\r\n                          display=\"flex\"\r\n                          justifyContent=\"space-between\"\r\n                        >\r\n                          <Grid height=\"100%\" textAlign=\"center\">\r\n                            <Grid bg=\"#eee\" height=\"50%\">\r\n                              닉네임\r\n                            </Grid>\r\n                            <Grid bg=\"#aaa\" height=\"50%\">\r\n                              타입\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid margin=\"auto\" height=\"100%\" textAlign=\"center\">\r\n                            <Grid height=\"50%\">\r\n                              {applyedUsers[idx].nickname}\r\n                            </Grid>\r\n                            <Grid height=\"50%\">\r\n                              {applyedUsers[idx].userPropensityType}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid margin=\"auto\" height=\"50px\" width=\"80%\">\r\n                          <Grid margin=\"auto 40px\">\r\n                            {applyedUsers[idx].userId !== postUserId && (\r\n                              <Button\r\n                                common\r\n                                isValue={applyedUsers[idx].userId}\r\n                                _onClick={e => {\r\n                                  window.confirm(\"추방하시겠습니까?\");\r\n                                  exile(e.target.value);\r\n                                }}\r\n                              >\r\n                                추방하기\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid\r\n                          margin=\"auto auto auto 3px\"\r\n                          height=\"50px\"\r\n                          width=\"80%\"\r\n                        ></Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </ModalWrap>\r\n        </Dialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ModalWrap = styled.div`\r\n  width: 550px;\r\n  height: 500px;\r\n`;\r\nconst CommentBubble = styled.div`\r\n  position: relative;\r\n  background: #f1f9ff;\r\n  height: 40%;\r\n  /* border: #b29cf4 solid 1px; */\r\n  border-radius: 10px;\r\n  padding: 0 12px;\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    border-style: solid;\r\n    border-width: 10px 15px 0;\r\n    border-color: #f1f9ff transparent;\r\n    display: block;\r\n    width: 0;\r\n    z-index: 1;\r\n    top: 10px;\r\n    left: -15px;\r\n  }\r\n`;\r\n\r\nconst UserImg = styled.img`\r\n  object-fit: cover;\r\n  width: 100px;\r\n  border-radius: 12px;\r\n  background-color: #ececec;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default ExileUserModal;\r\n","// ProjectJoinUser.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Text } from \"../elements/Index\";\nimport { useHistory } from \"react-router\";\nimport ImgType from \"../shared/ImgType\";\n\n// ProjectJoinUser의 함수형 컴포넌트를 만든다.\nconst ProjectJoinUser = (props) => {\n  const history = useHistory();\n  const goToMypage = (userId) => {\n    history.push(`/mypage/${userId}`);\n  };\n  return (\n    <React.Fragment>\n      <Grid\n        textAlign=\"center\"\n        height=\"120px\"\n        width=\"80px\"\n        margin=\"0 11px 0 0\"\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <Grid\n          width=\"60px\"\n          height=\"60px\"\n          borderRadius=\"50%\"\n          backgroundColor=\"#C4C4C4\"\n          margin=\"6px 0px\"\n        >\n          <ImgType\n            type={props.userPropensityType}\n            cursor=\"pointer\"\n            _onClick={() => {\n              goToMypage(props.userId);\n            }}\n          ></ImgType>\n          <Text size=\"16px\">{props.nickname}</Text>\n          <Grid>({props.userPropensityType})</Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ProjectJoinUser;\n","// ApplicantDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Text } from \"../../../elements/Index\";\nimport ProjectJoinUser from \"../../ProjectJoinUser\";\n\nconst ApplicantDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid margin=\"4px 0px 0px 0px\">\n        <Grid width=\"100%\" display=\"flex\">\n          <Grid width=\"80px\" textAlign=\"center\">\n            <Text size=\"18px\" bold>\n              게시자\n            </Text>\n          </Grid>\n\n          <Grid width=\"80px\" margin=\"0 0 0 10px\" textAlign=\"center\">\n            <Text size=\"18px\" bold>\n              참여자\n            </Text>\n          </Grid>\n        </Grid>\n\n        <Grid display=\"flex\" margin=\"6px 0px 0px 0px\">\n          {props.passdedMenber?.map((item) => (\n            <ProjectJoinUser key={item.userId} {...item} />\n          ))}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ApplicantDetail;\n","// StackDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// StackDetail의 함수형 컴포넌트를 만든다..\nconst StackDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\" margin=\"20px auto\">\n        <Text size=\"18px\" bold margin=\"auto 10px auto 0px\">\n          기술스택\n        </Text>\n        {props.passedData?.techStack.map((item, index) => {\n          return (\n            <Text margin=\"auto 5px\" key={index}>\n              <StackBox>{item}</StackBox>\n            </Text>\n          );\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst StackBox = styled.div`\n  color: white;\n  background-color: #554475;\n  border: 1px solid #554475;\n  border-radius: 10px;\n  padding: 4px 10px;\n  text-align: center;\n`;\n\nconst StackMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    flex-direction: column;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StackDetail;\n","// DateDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// DateDetail의 함수형 컴포넌트를 만든다.\nconst DateDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\" margin=\"20px auto auto\">\n        <Text size=\"18px\" bold margin=\"auto 10px auto 0px\">\n          프로젝트 기간\n        </Text>\n        <Text>\n          <DateBox>\n            {props.passedData?.startDate} ~ {props.passedData?.endDate}\n          </DateBox>\n        </Text>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst DateBox = styled.div`\n  color: black;\n  padding: 4px 10px;\n  border: 1px solid #e6ddf2;\n  border-radius: 10px;\n  text-align: center;\n`;\n\nconst ButtonMedia = styled.p`\n  @media screen and (max-width: 1500px) {\n    width: 100px;\n    margin: auto;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default DateDetail;\n","// StatusDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// StatusDetail의 함수형 컴포넌트를 만든다.\nconst StatusDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\">\n        <Text size=\"18px\" bold margin=\"0px 10px auto 0px\">\n          프로젝트 상태\n        </Text>\n        <Text size=\"18px\" color=\"#9D81F0\">\n          {props.passedData?.projectStatus}\n        </Text>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default StatusDetail;\n","// TitleDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Linkify from \"react-linkify\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// ContentDetail의 함수형 컴포넌트를 만든다.\nconst ContentDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid margin=\"20px auto auto\">\n        <Text size=\"18px\" bold margin=\"0px 10px 0px 0px\">\n          프로젝트 설명\n        </Text>\n        <ContentMedia>\n          <Linkify>\n            <Content>{props.passedData?.contents}</Content>\n          </Linkify>\n        </ContentMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// styled-components\nconst Content = styled.p`\n  width: 100%;\n  height: 340px;\n  padding: 10px;\n  border: 1px solid #c4c4c4;\n  border-radius: 5px;\n  font-weight: 60;\n  line-height: 30px;\n  white-space: pre-line;\n  overflow: scroll;\n`;\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    width: 310px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ContentDetail;\n","// Bookmark.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid } from \"../../../elements/Index\";\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\nimport BookmarkBorderIcon from \"@mui/icons-material/BookmarkBorder\";\n\n// Bookmark의 함수형 컴포넌트를 만든다.\nconst Bookmark = (props) => {\n  return (\n    <React.Fragment>\n      {props.userId !== props.postUserId && (\n        <Grid\n          width=\"50px\"\n          position=\"absolute\"\n          top=\"0px\"\n          right=\"10px\"\n          height=\"50px\"\n        >\n          <Grid _onClick={props.ToggleBookMark} cursor=\"pointer\">\n            {!props.passedData?.bookmarkChecked ? (\n              <BookmarkBorderIcon sx={{ color: \"#17334A\", fontSize: 60 }} />\n            ) : (\n              <BookmarkIcon sx={{ color: \"#17334A\", fontSize: 60 }} />\n            )}\n          </Grid>\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default Bookmark;\n","// ApplicantButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Button } from \"../../../elements/Index\";\nimport ApplyUserModal from \"../../ApplyUserModal\";\n\n// ApplicantButton의 함수형 컴포넌트를 만든다.\nconst ApplicantButton = (props) => {\n  return (\n    <React.Fragment>\n      <ContentMedia>\n        {\" \"}\n        {props.passedData?.projectStatus === \"모집중\" && (\n          <Grid>\n            {props.isme === \"user\" && (\n              <>\n                <Button\n                  common\n                  width=\"120px\"\n                  isValue=\"apply\"\n                  _onClick={(e) => {\n                    console.log(e);\n                    props.applyUserModalOpen(e.target.value);\n                  }}\n                  margin=\"auto 10px\"\n                  border=\"1px solid #554475\"\n                  borderRadius=\"50px\"\n                >\n                  지원신청\n                </Button>\n              </>\n            )}\n\n            {props.isme === \"applicant\" && (\n              <Button\n                common\n                width=\"120px\"\n                isValue=\"cancel\"\n                _onClick={(e) => {\n                  props.applyUserModalOpen(e.target.value);\n                }}\n                width=\"120px\"\n              >\n                지원취소\n              </Button>\n            )}\n\n            {props.isme === \"member\" && (\n              <Button\n                common\n                width=\"120px\"\n                isValue=\"teamExit\"\n                _onClick={(e) => {\n                  props.applyUserModalOpen(e.target.value);\n                }}\n              >\n                팀탈퇴\n              </Button>\n            )}\n          </Grid>\n        )}\n        <ApplyUserModal\n          applyUserModal={props.applyUserModal}\n          setApplyUserModal={props.setApplyUserModal}\n          applyValue={props.applyValue}\n          postId={props.post_id}\n          passdedMenber={props.passdedMenber}\n          statusCheck={props.statusCheck}\n        />\n        {props.passedData?.projectStatus === \"모집중\" &&\n          props.passedUserStatus === \"member\" && (\n            <Grid>\n              <Button\n                common\n                width=\"120px\"\n                isValue=\"memberLiked\"\n                _onClick={(e) => {\n                  props.applyUserModalOpen(e.target.value);\n                }}\n                margin=\"auto 10px\"\n                border=\"1px solid #554475\"\n                borderRadius=\"50px\"\n              >\n                지원신청\n              </Button>\n            </Grid>\n          )}\n      </ContentMedia>\n    </React.Fragment>\n  );\n};\n\nconst ContentMedia = styled.div`\n  @media screen and (max-width: 360px) {\n    display: flex;\n    width: 325px;\n    margin: 0px 0px 60px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default ApplicantButton;\n","// PosterButton.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Button } from \"../../../elements/Index\";\nimport ApplyUserModal from \"../../ApplyUserModal\";\nimport { useHistory } from \"react-router\";\nimport { apis } from \"../../../lib/axios\";\n\n// PosterButton의 함수형 컴포넌트를 만든다.\nconst PosterButton = props => {\n  console.log(props);\n  const history = useHistory();\n\n  const DeletePost = async () => {\n    try {\n      const deletePost = await apis.deletePost(props.post_id);\n      history.push(\"/\");\n      console.log(\"삭제\", deletePost);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\" justifyContent=\"center\">\n        {props.passedData?.projectStatus === \"진행중\" && (\n          <Button\n            common\n            width=\"140px\"\n            height=\"35px\"\n            isValue=\"end\"\n            _onClick={e => {\n              props.applyUserModalOpen(e.target.value);\n            }}\n          >\n            프로젝트 마감하기\n          </Button>\n        )}\n        <ApplyUserModal\n          applyUserModal={props.applyUserModal}\n          setApplyUserModal={props.setApplyUserModal}\n          applyValue={props.applyValue}\n          postId={props.post_id}\n          passdedMenber={props.passdedMenber}\n          statusCheck={props.statusCheck}\n        />\n        <ContentMedia>\n          {props.passedData?.projectStatus === \"모집중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              _onClick={() => {\n                props.edit_status(\"진행중\");\n              }}\n            >\n              모집완료\n            </Button>\n          )}\n          {props.passedData?.projectStatus === \"종료\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              isValue=\"submit\"\n              _onClick={e => {\n                props.applyUserModalOpen(e.target.value);\n              }}\n            >\n              깃허브제출\n            </Button>\n          )}\n          {props.passedData?.projectStatus === \"종료\" && <div></div>}\n\n          {props.passedData?.projectStatus === \"진행중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              _onClick={() => {\n                history.push({ pathname: `/postedit/${props.post_id}` });\n              }}\n            >\n              포스트수정\n            </Button>\n          )}\n\n          {props.passedData?.projectStatus === \"모집중\" && (\n            <Button\n              common\n              width=\"140px\"\n              height=\"35px\"\n              _onClick={() => {\n                history.push({ pathname: `/postedit/${props.post_id}` });\n              }}\n            >\n              포스트수정\n            </Button>\n          )}\n\n          <Button\n            common\n            width=\"140px\"\n            height=\"35px\"\n            _onClick={() => {\n              DeletePost();\n              window.alert(\"삭제되었습니다.\");\n            }}\n          >\n            포스트삭제\n          </Button>\n        </ContentMedia>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst ContentMedia = styled.div`\n  display: flex;\n  @media screen and (max-width: 360px) {\n    display: flex;\n    width: 300px;\n    height: 10px;\n    margin-bottom: 80px;\n  }\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PosterButton;\n","// TotalMemberDetail.js\n/* eslint-disable */\n\n// import를 한다.\nimport React from \"react\";\nimport { Grid, Text } from \"../../../elements/Index\";\n\n// TotalMemberDetail의 함수형 컴포넌트를 만든다\nconst TotalMemberDetail = (props) => {\n  return (\n    <React.Fragment>\n      <Grid display=\"flex\">\n        <Text size=\"18px\" bold margin=\"0px 10px 20px 0px\">\n          프로젝트 총 인원\n        </Text>\n        <Text size=\"18px\" color=\"#9D81F0\">\n          {props.passedData?.totalMember}명\n        </Text>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default TotalMemberDetail;\n","// PostDetail.js\n/* eslint-disable */\n// import를 한다.\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { apis } from \"../lib/axios\";\nimport { postActions } from \"../redux/modules/post\";\nimport { Grid, Button, Text } from \"../elements/Index\";\nimport Swal from \"sweetalert2\";\nimport { pageCheckAction } from \"../redux/modules/pageCheck\";\n\nimport ApplyStatusModal from \"../components/ApplyStatusModal\";\nimport LeftBanner from \"../components/postDetail/leftBanner\";\nimport TitleDetail from \"../components/postDetail/rightContents/TitleDetail\";\nimport ExileUserModal from \"../components/modal/ExileUserModal\";\nimport ApplicantDetail from \"../components/postDetail/rightContents/ApplicantDetail\";\nimport StackDetail from \"../components/postDetail/rightContents/StackDetail\";\nimport DateDetail from \"../components/postDetail/rightContents/DateDetail\";\nimport StatusDetail from \"../components/postDetail/rightContents/StatusDetail\";\nimport ContentDetail from \"../components/postDetail/rightContents/ContentDetail\";\nimport BookMark from \"../components/postDetail/rightContents/BookMark\";\nimport ApplicantButton from \"../components/postDetail/rightContents/ApplicantButton\";\nimport PosterButton from \"../components/postDetail/rightContents/PosterButton\";\nimport TotalMemberDetail from \"../components/postDetail/rightContents/TotalMemberDetail\";\n\nimport { Link } from \"react-router-dom\";\n\n// PostDetail의 함수형 컴포넌트를 만든다\nconst PostDetail = (props) => {\n  const dispatch = useDispatch();\n  const [checkPost, setCheckPost] = React.useState();\n  const [bookmark, setBookmark] = React.useState(false);\n  const [applyStatusModal, setApplyStatusModal] = React.useState(false); //신청현황\n  const [applyUserModal, setApplyUserModal] = React.useState(false); //지원취소/팀탈퇴/프로젝트마감\n  const [exileStatusModal, setExileStatusModal] = React.useState(false); //강퇴\n  const [recruitmentFinish, setRecruitmentFinish] = React.useState(); // 모집완료 체크 for리렌더링\n  const [projectStatus, setProjectStatus] = React.useState();\n  const [applyValue, setApplyValue] = React.useState();\n  const [isme, setIsme] = React.useState(null);\n\n  const applyStatusModalOpen = () => {\n    setApplyStatusModal(true);\n  };\n\n  const exileStatusModalOpen = () => {\n    setExileStatusModal(true);\n  };\n\n  const applyUserModalOpen = (value) => {\n    setApplyValue(value);\n    setApplyUserModal(true);\n  };\n\n  const statusCheck = (value) => {\n    console.log(value);\n    setProjectStatus(value);\n  };\n\n  const goFrontPage = () => {\n    window.open(passedData?.frontUrl);\n  };\n\n  const goBackPage = () => {\n    window.open(passedData?.frontUrl);\n  };\n  // 상태변경\n  const edit_status = (data) => {\n    const editstatus = {\n      projectStatus: data,\n    };\n    const statusDoing = async () => {\n      try {\n        const result = await apis.statusPost(post_id, editstatus);\n        setRecruitmentFinish(!recruitmentFinish);\n        Swal.fire(\"모집 완료 되었습니다!\", \"\", \"success\");\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    statusDoing();\n  };\n\n  let post_id = props.match.params.id;\n  const userId = useSelector((state) => state.user.userId); //로그인 유저아이디\n  const postUserId = checkPost?.data.data.post.userId;\n  const passedData = checkPost?.data[\"data\"].post;\n  const passedUserStatus = checkPost?.data[\"data\"].userStatus;\n  const passdedMenber = checkPost?.data[\"data\"].members;\n\n  React.useEffect(() => {\n    dispatch(postActions.isMainPage(false));\n    dispatch(postActions.whatPage(\"postDetail\"));\n    const CheckPost = async () => {\n      try {\n        const result = await apis.detailPost(post_id);\n        setCheckPost(result);\n        console.log(result);\n        setIsme(result.data.data.userStatus);\n        setProjectStatus(result.data.data.post.projectStatus);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    CheckPost();\n    // dispatch(pageCheckAction.getPageCheck(`/postdetail/${post_id}`));\n  }, [\n    bookmark,\n    applyStatusModal,\n    recruitmentFinish,\n    exileStatusModal,\n    applyUserModal,\n    projectStatus,\n    applyValue,\n  ]);\n\n  //북마크 토글\n  const ToggleBookMark = () => {\n    const bookMark = async () => {\n      try {\n        const result = await apis.bookMarkChecked(post_id);\n        setBookmark(!bookmark);\n      } catch (err) {\n        console.log(err.response);\n        Swal.fire(\"로그인이 필요합니다!\", \"\", \"warning\");\n      }\n    };\n    bookMark();\n  };\n\n  return (\n    <React.Fragment>\n      <Grid\n        display=\"flex\"\n        justifyContent=\"center\"\n        maxWidth=\"1920px\"\n        height=\"100%\"\n        border=\"1px solid #C4C4C4\"\n        margin=\"auto\"\n      >\n        <LeftBanner />\n        <Grid margin=\"46px 106px 0px\" position=\"relative\">\n          <BookMark\n            userId={userId}\n            postUserId={postUserId}\n            ToggleBookMark={ToggleBookMark}\n            passedData={passedData}\n          />\n          <TitleDetail passedData={passedData} />\n          <Grid margin=\"20px auto\">\n            <Grid display=\"flex\">\n              <ApplicantDetail passdedMenber={passdedMenber} />\n            </Grid>\n            <Grid margin=\"10px auto \">\n              {userId === postUserId && passedData?.projectStatus === \"모집중\" && (\n                <Grid position=\"relative\" width=\"100%\">\n                  <Grid\n                    position=\"absolute\"\n                    right=\"20px\"\n                    width=\"120px\"\n                    padding=\"10px\"\n                  >\n                    <ApplyStatusModal\n                      applyStatusModal={applyStatusModal}\n                      setApplyStatusModal={setApplyStatusModal}\n                      postId={post_id}\n                    />\n                    <ExileUserModal\n                      applyStatusModal={exileStatusModal}\n                      setApplyStatusModal={setExileStatusModal}\n                      postId={post_id}\n                      postUserId={postUserId}\n                    ></ExileUserModal>\n                  </Grid>\n                </Grid>\n              )}\n              <Grid>\n                <FlexMedia display=\"flex\">\n                  <DateDetail passedData={passedData} />\n                  <StackDetail passedData={passedData} />\n                </FlexMedia>\n              </Grid>\n              <Grid>\n                <Grid display=\"flex\">\n                  <Grid>\n                    <TotalMemberDetail passedData={passedData} />\n                  </Grid>\n                  <Grid>\n                    <FlexMedia>\n                      {passedData?.projectStatus === \"종료\" &&\n                        passedData?.frontUrl !== \"null\" && (\n                          <Grid\n                            display=\"flex\"\n                            width=\"200px\"\n                            alignItems=\"center\"\n                          >\n                            <Grid>\n                              <Text>Frontend</Text>\n                            </Grid>\n                            <Grid>\n                              <UrlButton\n                                onClick={() => {\n                                  goFrontPage();\n                                }}\n                              >\n                                프론트URL\n                              </UrlButton>\n                            </Grid>\n                          </Grid>\n                        )}\n                      {passedData?.projectStatus === \"종료\" &&\n                        passedData?.backUrl !== \"null\" && (\n                          <Grid\n                            display=\"flex\"\n                            width=\"200px\"\n                            alignItems=\"center\"\n                            margin=\"0 0 0 5px\"\n                          >\n                            <Grid>\n                              <Text>Backend</Text>\n                            </Grid>\n                            <Grid>\n                              <Grid>\n                                <UrlButton\n                                  onClick={() => {\n                                    goBackPage();\n                                  }}\n                                >\n                                  백엔드URL\n                                </UrlButton>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        )}\n                      {userId === postUserId &&\n                        passedData?.projectStatus === \"모집중\" && (\n                          <Grid\n                            display=\"flex\"\n                            width=\"150px\"\n                            margin=\"auto 0 auto auto\"\n                            justifyContent=\"flex-end\"\n                          >\n                            <ButtonMedia>\n                              <Button\n                                postion=\"absolute\"\n                                common\n                                _onClick={applyStatusModalOpen}\n                              >\n                                신청 현황\n                              </Button>\n                              <Button\n                                postion=\"absolute\"\n                                common\n                                _onClick={exileStatusModalOpen}\n                              >\n                                팀원 강퇴\n                              </Button>\n                            </ButtonMedia>\n                          </Grid>\n                        )}\n                    </FlexMedia>\n                  </Grid>\n                </Grid>\n                <StatusDetail passedData={passedData} />\n\n                <ContentDetail passedData={passedData} />\n              </Grid>\n\n              <Grid>\n                {userId === postUserId ? (\n                  <PosterButton\n                    passedData={passedData}\n                    applyUserModalOpen={applyUserModalOpen}\n                    applyUserModal={applyUserModal}\n                    setApplyUserModal={setApplyUserModal}\n                    applyValue={applyValue}\n                    post_id={post_id}\n                    passdedMenber={passdedMenber}\n                    edit_status={edit_status}\n                    statusCheck={statusCheck}\n                  />\n                ) : (\n                  <Grid textAlign=\"center\">\n                    <ApplicantButton\n                      passedData={passedData}\n                      isme={isme}\n                      applyUserModalOpen={applyUserModalOpen}\n                      applyUserModal={applyUserModal}\n                      setApplyUserModal={setApplyUserModal}\n                      applyValue={applyValue}\n                      post_id={post_id}\n                      passdedMenber={passdedMenber}\n                      passedUserStatus={passedUserStatus}\n                      statusCheck={statusCheck}\n                    />\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst ButtonMedia = styled.p`\n  display: flex;\n  margin: auto;\n  @media screen and (max-width: 1500px) {\n    display: flex;\n    width: 100px;\n    margin: auto;\n  }\n`;\n\nconst FlexMedia = styled.div`\n  display: flex;\n  @media screen and (max-width: 1000px) {\n    flex-direction: column;\n  }\n`;\n\nconst UrlButton = styled.button`\n  width: 100px;\n  height: 23px;\n  font-size: 15px;\n  margin: auto 10px;\n  padding: 0 0 2px 0;\n  border: 1px solid #554475;\n  border-radius: 4px;\n  color: white;\n  background-color: #554475;\n  cursor: pointer;\n`;\n\n// export를 통해 밖에서도 사용할 수 있도록 설정한다.\nexport default PostDetail;\n","/* eslint-disable */\r\nimport Prism from \"prismjs\";\r\n// 여기 css를 수정해서 코드 하이라이팅 커스텀 가능\r\nimport \"prismjs/themes/prism.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\r\nimport { Editor } from \"@toast-ui/react-editor\";\r\n\r\nimport \"@toast-ui/editor-plugin-code-syntax-highlight/dist/toastui-editor-plugin-code-syntax-highlight.css\";\r\nimport codeSyntaxHighlight from \"@toast-ui/editor-plugin-code-syntax-highlight\";\r\n\r\nimport \"tui-color-picker/dist/tui-color-picker.css\";\r\nimport \"@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css\";\r\nimport colorSyntax from \"@toast-ui/editor-plugin-color-syntax\";\r\nimport React, { useState, useRef, createRef } from \"react\";\r\nimport { Grid, Image, Text, Button } from \"../elements/Index\";\r\nimport { apis } from \"../lib/axios\";\r\nimport { result } from \"lodash\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { history } from \"../redux/configureStore\";\r\n\r\nexport default function Writer(props) {\r\n  const dispatch = useDispatch();\r\n  console.log(props);\r\n  // const editorRef = createRef();\r\n  const editorRef = useRef();\r\n\r\n  const [progress, setProgress] = useState(0);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imgBase64, setImgBase64] = React.useState([]); // 파일 base64\r\n  const [imgData, setImageData] = React.useState();\r\n  const [imgurl, setImgurl] = React.useState();\r\n  const [text, setText] = React.useState();\r\n  const [mydata, setMydata] = React.useState();\r\n\r\n  // React.useEffect(() => {\r\n  //   if (editorRef.current) {\r\n  //     editorRef.current.getInstance().removeHook(\"addImageBlobHook\");\r\n  //     editorRef.current\r\n  //       .getInstance()\r\n  //       .addHook(\"addImageBlobHook\", (blob, callback) => {\r\n  //         (async () => {\r\n  //           try {\r\n  //             // console.log(blob);\r\n  //             let reader = new FileReader();\r\n  //             reader.readAsDataURL(blob); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n  //             // 파일 상태 업데이트\r\n  //             reader.onloadend = () => {\r\n  //               // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n  //               const base64 = reader.result;\r\n\r\n  //               //await이 중괄호 안에 쓰일 수 없기 때문에 async사용\r\n  //               const upload = async () => {\r\n  //                 // console.log(\"2차 관문\", base64);\r\n  //                 // 서버로부터 이미지 주소 받아옴\r\n  //                 const url = await apis.addMyImage(base64);\r\n  //                 const resulturl = `http://15.165.159.211${url.data.data.imageUrl}`;\r\n  //                 setImgurl(resulturl);\r\n  //                 // console.log(resulturl);\r\n  //                 callback(resulturl, \"alt text\");\r\n  //                 return resulturl;\r\n  //               };\r\n  //               upload();\r\n  //               // callback(resulturl, \"alt text\");\r\n  //             };\r\n  //           } catch (err) {\r\n  //             console.log(err.response);\r\n  //           }\r\n  //         })();\r\n  //         return false;\r\n  //       });\r\n  //   }\r\n  //   return () => {};\r\n  // }, [editorRef]);\r\n\r\n  const uploadImage = (blob, callback) => {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(blob); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n    // 파일 상태 업데이트\r\n    reader.onloadend = () => {\r\n      // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n      const base64 = reader.result;\r\n      // console.log(base64);\r\n      setImgBase64(base64);\r\n      console.log(\"1차 관문\", imgBase64);\r\n\r\n      const upload = async () => {\r\n        // console.log(\"2차 관문\", base64);\r\n        // 서버로부터 이미지 주소 받아옴\r\n        const url = await apis.addMyImage(base64);\r\n\r\n        const resulturl = `http://15.165.159.211${url.data.data.imageUrl}`;\r\n        callback(resulturl, \"alt text\");\r\n      };\r\n      upload();\r\n    };\r\n  };\r\n\r\n  // const uploadImage = (blob) => {\r\n  //   let reader = new FileReader();\r\n  //   reader.readAsDataURL(blob); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n  //   // 파일 상태 업데이트\r\n  //   reader.onloadend = () => {\r\n  //     // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n  //     const base64 = reader.result;\r\n  //     // console.log(base64);\r\n  //     // setImgBase64(base64);\r\n  //     apis\r\n  //       .addMyImage(base64)\r\n  //       .then((res) => {\r\n  //         const result = res.data.data.imageUrl;\r\n  //         // console.log(result);\r\n  //         setImgurl(`![](http://localhost:8080${result})`);\r\n  //         const resulturl = `![](http://localhost:8080${result})`;\r\n  //         console.log(resulturl);\r\n  //         return resulturl;\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(err.response);\r\n  //       });\r\n  //   };\r\n  // };\r\n\r\n  React.useEffect(() => {\r\n    const userId = props.location.state.userId;\r\n    const fetchData = async () => {\r\n      try {\r\n        const result = await apis.getMypage(userId);\r\n        console.log(result);\r\n        setMydata(result.data.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onChangeEditorTextHandler = () => {\r\n    console.log(editorRef.current.getInstance().getMarkdown());\r\n    setText(editorRef.current.getInstance().getMarkdown());\r\n  };\r\n\r\n  const write = () => {\r\n    const writing = async () => {\r\n      try {\r\n        // console.log(props[0]);\r\n        const userId = props.location.state.userId;\r\n        const result = await apis.writeMyIntroduction(userId, text);\r\n        console.log(result);\r\n        history.push(`/mypage/${userId}`);\r\n      } catch (err) {\r\n        const userId = props.location.state.userId;\r\n        console.log(err);\r\n        // window.alert(\"작성 형식이 올바르지 않습니다.\");\r\n        Swal.fire(\"내용이 같거나 없습니다!\", \"\", \"question\");\r\n      }\r\n    };\r\n    writing();\r\n  };\r\n  const introduction = mydata?.user.introduction;\r\n  console.log(introduction);\r\n  return (\r\n    <>\r\n      {introduction === null && (\r\n        <>\r\n          <button\r\n            onClick={() => {\r\n              write();\r\n            }}\r\n          >\r\n            작성하기\r\n          </button>\r\n\r\n          <Editor\r\n            previewStyle=\"vertical\"\r\n            plugins={[\r\n              colorSyntax,\r\n              [codeSyntaxHighlight, { highlighter: Prism }],\r\n            ]}\r\n            onChange={onChangeEditorTextHandler}\r\n            ref={editorRef}\r\n            height=\"79vh\"\r\n            // initialValue={introduction}\r\n            hooks={{\r\n              addImageBlobHook: async (blob, callback) => {\r\n                uploadImage(blob, callback);\r\n                // callback(img_url, \"alt_text\");\r\n              },\r\n            }}\r\n          ></Editor>\r\n        </>\r\n      )}\r\n      {introduction && (\r\n        <>\r\n          <Editor\r\n            previewStyle=\"vertical\"\r\n            plugins={[\r\n              colorSyntax,\r\n              [codeSyntaxHighlight, { highlighter: Prism }],\r\n            ]}\r\n            onChange={onChangeEditorTextHandler}\r\n            ref={editorRef}\r\n            height=\"79vh\"\r\n            initialValue={introduction}\r\n            hooks={{\r\n              addImageBlobHook: async (blob, callback) => {\r\n                uploadImage(blob, callback);\r\n                // callback(img_url, \"alt_text\");\r\n              },\r\n            }}\r\n          ></Editor>\r\n          <Grid display=\"flex\" margin=\"0 0 0 72% \">\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              뒤로가기\r\n            </Button>\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                write();\r\n              }}\r\n            >\r\n              수정하기\r\n            </Button>\r\n          </Grid>\r\n        </>\r\n      )}\r\n      {!introduction && (\r\n        <>\r\n          <Grid display=\"flex\" margin=\"0 0 0 72% \"></Grid>\r\n          <Editor\r\n            previewStyle=\"vertical\"\r\n            plugins={[\r\n              colorSyntax,\r\n              [codeSyntaxHighlight, { highlighter: Prism }],\r\n            ]}\r\n            onChange={onChangeEditorTextHandler}\r\n            ref={editorRef}\r\n            height=\"79vh\"\r\n            initialValue={introduction}\r\n            hooks={{\r\n              addImageBlobHook: async (blob, callback) => {\r\n                uploadImage(blob, callback);\r\n                // callback(img_url, \"alt_text\");\r\n              },\r\n            }}\r\n          ></Editor>\r\n          <Grid display=\"flex\" margin=\"0 0 0 2% \">\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              뒤로가기\r\n            </Button>\r\n            <Button\r\n              width=\"100px\"\r\n              height=\"50px\"\r\n              margin=\"20px\"\r\n              _onClick={() => {\r\n                write();\r\n              }}\r\n            >\r\n              작성하기\r\n            </Button>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable */\nimport React from \"react\";\nimport { Grid, Button } from \"../elements/Index\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport ImgType from \"../shared/ImgType\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { history } from \"../redux/configureStore\";\n\nconst Footer = (props) => {\n  const userType = props.userInfo.userPropensityType;\n  const userId = props.userInfo.userId;\n  const isToken = document.cookie;\n  const goToMypage = () => {\n    history.push(`/mypage/${userId}`);\n  };\n  const goToAddPost = () => {\n    history.push(\"/postadd\");\n  };\n  const goToHome = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <Wrap>\n      <Grid display=\"flex\" bg=\"#fff\" boxShadow=\"0 0 3px #aaa\">\n        <FooterBtn onClick={goToHome}>\n          <HomeIcon sx={{ color: \"#17334A\", fontSize: 40 }} />\n        </FooterBtn>\n        <FooterBtn\n          onClick={() => {\n            if (!isToken) {\n              window.alert(\"로그인 후 작성 가능합니다.\");\n            } else {\n              goToAddPost();\n            }\n          }}\n        >\n          <AddIcon sx={{ color: \"#17334A\", fontSize: 40 }} />\n        </FooterBtn>\n        {userType && isToken && (\n          <FooterBtn onClick={goToMypage}>\n            <div\n              _onClick={() => {\n                history.push(`/mypage/${userInfo.userId}`);\n              }}\n            >\n              <ImgType type={userType} />\n            </div>\n          </FooterBtn>\n        )}\n      </Grid>\n    </Wrap>\n  );\n};\nconst Wrap = styled.div`\n  display: none;\n  @media screen and (max-width: 767px) {\n    width: 100vw;\n    margin: auto;\n    height: 6%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(255, 255, 255, 0);\n    z-index: 10;\n    position: fixed;\n    bottom: 0;\n  }\n`;\n\nconst FooterBtn = styled.div`\n  width: 33%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\nexport default Footer;\n","/* eslint-disable */\nimport React from \"react\";\nimport \"./App.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userCreators } from \"../redux/modules/user\";\n\nimport MainPage from \"../pages/MainPage\";\nimport KakaoRedirect from \"./kakaoRedirect\";\nimport GitHubRedirect from \"./GitHubRedirect\";\n\nimport MyPageInfo from \"../components/MyPageInfo\";\nimport PostWrite from \"../pages/PostWrite\";\nimport PostEdit from \"../pages/PostEdit\";\nimport PostDetail from \"../pages/PostDetail\";\nimport Markdown from \"../components/Markdown\";\nimport MarkdownRead from \"../components/MarkdownRead\";\nimport Header from \"../components/Header\";\nimport Message from \"../components/headerFunction/Message\";\nimport Footer from \"../components/Footer\";\n\n//테스트용입니다.\nimport PropensityTest from \"../components/propensityTest/PropensityTest\";\n\nfunction App() {\n  const isLogin = useSelector((state) => state.user.isLogin);\n  const userInfo = useSelector((state) => state.user);\n  const isCookie = document.cookie.split(\"=\")[1];\n  const dispatch = useDispatch();\n\n  React.useLayoutEffect(() => {\n    if (isCookie) {\n      dispatch(userCreators.myUserAPI());\n    }\n  }, [isLogin, isCookie]);\n\n  return (\n    <React.Fragment>\n      <div className=\"App\">\n        <Header />\n        <ConnectedRouter history={history}>\n          <Switch>\n            <Route path=\"/\" exact component={MainPage}></Route>\n            <Route path=\"/message\" exact component={Message}></Route>\n            <Route path=\"/mypage/:id\" exact component={MyPageInfo}></Route>\n            <Route path=\"/postadd\" exact component={PostWrite}></Route>\n            <Route path=\"/postedit/:id\" exact component={PostEdit}></Route>\n            <Route path=\"/addmarkdown\" exact component={Markdown}></Route>\n            <Route path=\"/postdetail/:id\" exact component={PostDetail}></Route>\n\n            <Route\n              path=\"/user/kakao/callback\"\n              exact\n              component={KakaoRedirect}\n            ></Route>\n            <Route\n              path=\"/user/github/callback\"\n              exact\n              component={GitHubRedirect}\n            ></Route>\n          </Switch>\n        </ConnectedRouter>\n        <Footer userInfo={userInfo} />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./shared/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configureStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}