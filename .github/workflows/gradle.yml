# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Spring Boot with Gradle CI/CD 

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

  
jobs:
  build:
  #build 이름 설정 (빌드 체크위해서 설정함)
    name : build
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew clean build
      
       # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

      # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

      # 압축파일 형태로 전달(codedeploy는 zip형식만 읽을 수 있음)
    - name: Make zip file
      run: zip -r -qq -j ./scope-build.zip ./deploy

      # AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
      # S3로 업로드
    - name: Upload to AWS S3
      run: aws s3 cp --region ap-northeast-2 --acl private ./scope-build.zip s3://scopedeploymentbucket/scope-build.zip


