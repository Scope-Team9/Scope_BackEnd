plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "com.github.node-gradle.node" version "3.1.1"}

group = 'com.studycollaboproject'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-core:5.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-aop:2.5.6'
    implementation 'org.springframework:spring-aop:5.3.12'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    // JWT
    implementation(group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2')
    runtimeOnly(group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2')
    runtimeOnly(group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2')
    //email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // 타임리프
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    //log
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2:1.16'

    // swagger
    implementation 'org.springdoc:spring-boot-springdoc:3.1.2'

    // jasypt
    implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.4'

    // node plugin
}

// react build
def webappDir = "$projectDir/frontend/scope"
// node 버전 및 npm, node 설치파일 저장 디렉토리 명시
node {
    version = '10.15.3'
    download=true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir=file("${project.buildDir}/npm")
}
// npm install 과정
task appNpmInstall(type: NpmTask) {
    workingDir = file("${project.projectDir}/frontend/scope")
    args = ["install"]
}
// yarn build
task yarnBuild(type: YarnTask) {
    workingDir = file("${project.projectDir}/frontend/scope")
    args = ['build']
}
// 빌드된 결과 resources로 이동
task copyWebApp(type: Copy) {
    from "frontend/scope/build"
    into "$projectDir/src/main/resources/static"
}
yarnBuild.dependsOn appNpmInstall
copyWebApp.dependsOn yarnBuild
compileJava.dependsOn copyWebApp

apply plugin: "com.ewerk.gradle.plugins.querydsl"
//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

test {
    useJUnitPlatform()
}

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝
compileQuerydsl.doFirst {
    if(file(querydslDir).exists() ) delete(file(querydslDir))
}
